{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "mohamedAD1"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/building1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "metaGetExcell",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "building3",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "Filterxlsx",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "metaGetExcell",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('metaGetExcell').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,variables('buildingv'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy file to proceed",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Filterxlsx",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"throwExceptionWhenNavigateEmptyFolder": false,
									"recursive": true,
									"wildcardFolderPath": "Source",
									"wildcardFileName": {
										"value": "@activity('Filterxlsx').output.value[0].name",
										"type": "Expression"
									}
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "  truncate table [customer].[Building]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "building3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlbuilding",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "usp_viewBuilding_api_add",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[building].[usp_viewBuilding_api_add]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy file to proceed",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [customer].[Building1] ",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ExternalBuildingId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ExternalBuildingId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BuildingName_local",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BuildingName_local",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "StreetAddress_Local",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "StreetAddress_Local",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "City_Local",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "City_Local",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Postcode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Postcode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MainTypeViewId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MainTypeViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MainTypeName_En",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MainTypeName_En",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SubTypeViewId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SubTypeViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SubTypeName_En",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SubTypeName_En",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BuildingNo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BuildingNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CustomerNo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CustomerNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SumOfTotalUnits",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SumOfTotalUnits",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SumOfUnitsInService",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SumOfUnitsInService",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OfficeViewId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OfficeViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OfficeName_En",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OfficeName_En",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UnitsScheduleHours",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UnitsScheduleHours",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UnitsScheduleHoursViewId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UnitsScheduleHoursViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UnitsScheduleTime",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UnitsScheduleTime",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UnitsScheduleTimeViewId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UnitsScheduleTimeViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TargetCallRate",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TargetCallRate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RunInfo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RunInfo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RunTypeViewId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RunTypeViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RunTypeName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RunTypeName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RunViewId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RunViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RunName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RunName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BHSWPResponse",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BHSWPResponse",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BHStopResponse",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BHStopResponse",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BHOthersResponse",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BHOthersResponse",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AHSWPResponse",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AHSWPResponse",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AHStopResponse",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AHStopResponse",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AHOthersResponse",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AHOthersResponse",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Notes",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Notes",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BusinessHourContactInfo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BusinessHourContactInfo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BHSiteContact",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BHSiteContact",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BHContactPhone1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BHContactPhone1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BHContactMobile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BHContactMobile",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BHContactRoleViewId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BHContactRoleViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BHContactRoleName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BHContactRoleName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AfterHourContactInfo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AfterHourContactInfo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AHSiteContact",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AHSiteContact",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AHContactPhone1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AHContactPhone1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AHContactMobile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AHContactMobile",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AHContactRoleViewId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AHContactRoleViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AHContactRoleViewName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AHContactRoleViewName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ViewId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TimeZone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TimeZone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CustomerCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CustomerCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastModifytime",
											"physicalType": "timestamp"
										},
										"sink": {
											"name": "LastModifytime",
											"physicalType": "timestamp"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlbuilding",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "customerBuilding1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"variables": {
					"buildingv": {
						"type": "String",
						"defaultValue": "View_Building"
					}
				},
				"folder": {
					"name": "ingest"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/building_output')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from  [building].[Viewbuilding_API_add]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [building].[am_da_ds_dst_exviewBuildingapi]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CustomerCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CustomerCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Data",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Data",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HashKey",
											"type": "Byte[]",
											"physicalType": "varbinary"
										},
										"sink": {
											"name": "HashKey",
											"type": "Byte[]",
											"physicalType": "varbinary"
										}
									},
									{
										"source": {
											"name": "ETL_Load_Date_Time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ETL_Load_Date_Time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Azuremaintenance",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "am_da_ds_dst_exviewBuildingapi",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Output"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/buildingjson2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[customer].[BuildingToJson]",
								"storedProcedureParameters": {
									"result": {
										"type": "String",
										"value": null
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "BuildingToJson",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Jsonbuilding",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Building"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/customerbilltocontact')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Operating_Unit_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Operating_Unit_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Customer_Header_Reference",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ï»¿Customer_Header_Reference",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Address_Reference",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Address_Reference",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Phone_Country_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Phone_Country_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Phone_Extension",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Phone_Extension",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contact_Reference",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contact_Reference",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contact_Point Reference",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contact_Point Reference",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contact_First_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contact_First_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contact_Last_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contact_Last_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contact Point_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contact Point_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Area_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Area_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Telephone_Number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Telephone_Number",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EMAIL_Address",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EMAIL_Address",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Invoice_Delivery_Method",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Invoice_Delivery_Method",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ExcelCustomerBillToContacts",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CustomerBillToContactssql",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "CustomerOKH"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/customerheader1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "metaGetExcell",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Excelheader",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							}
						}
					}
				],
				"folder": {
					"name": "ingest"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/delimiter')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "delimiter cross reference",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "/****** Script for SelectTopNRows command from SSMS  ******/\nSELECT [ITEM_NUMBER]\n      ,[CROSS_REFERENCE_TYPE]\n      ,[CROSS_REFERENCE]\n      ,[DESCRIPTION]\n      ,[ORGANIZATION_CODE]\n      ,[ORG_NAME]\n  FROM [inventory].[Parts_Item_Cross_Reference]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlParts_Item_Cross_Reference",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parts_Item_Cross_Reference_delimiter",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Item_Transaction_Default_Locators",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlParts_Item_Transaction_Default_Locators",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LocatorDelimited",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "delimiter Subinventories",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "/****** Script for SelectTopNRows command from SSMS  ******/\nSELECT  [ITEM_NUMBER]\n      ,[ORGANIZATION_CODE]\n      ,[SUBINVENTORY_NAME]\n      ,[ORG_NAME]\n  FROM [inventory].[Parts_Item_Transaction_Default_Subinventories]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlSubinventories",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SubinventoriesDelimited",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "MFG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT  [MANUFACTURER]\n      ,[DESCRIPTION]\n      ,[PART_NUMBER]\n      ,[ITEM_NUMBER]\n      ,[ORG_NAME]\n  FROM [inventory].[Parts_MFG_Part_Number]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlMFG",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "MFGDelimited",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Header",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [ITEM_NUMBER]\n      ,[DESCRIPTION]\n      ,COALESCE('',[DESCRIPTION_ESA]) as [DESCRIPTION_ESA]\n      ,[ORANIZATION_CODE]\n      ,[TEMPLATE_NAME]\n      ,[LIST_PRICE_PER_UNIT]\n      ,[UOM_CODE]\n\t    ,COALESCE('',[WEIGHT_UOM_CODE]) as [WEIGHT_UOM_CODE]\n         ,COALESCE('',[UNIT_WEIGHT]) as [UNIT_WEIGHT]\n       ,COALESCE('',[VOLUME_UOM_CODE]) as [VOLUME_UOM_CODE]\n       ,COALESCE('',[UNIT_VOLUME]) as [UNIT_VOLUME]\n        ,COALESCE('',[MIN_MINMAX_QUANTITY]) as [MIN_MINMAX_QUANTITY]\n       ,COALESCE('',[MAX_MINMAX_QUANTITY]) as [MAX_MINMAX_QUANTITY]\n       ,COALESCE('',[FULL_LEAD_TIME]) as [FULL_LEAD_TIME]\n    ,COALESCE('',[FIXED_LOT_MULTIPLIER]) as [FIXED_LOT_MULTIPLIER]\n      ,COALESCE('',[FIXED_ORDER_QUANTITY]) as [FIXED_ORDER_QUANTITY]\n           ,COALESCE('',[MINIMUM_ORDER_QUANTITY]) as [MINIMUM_ORDER_QUANTITY]\n       ,COALESCE('',[MAXIMUM_ORDER_QUANTITY]) as [MAXIMUM_ORDER_QUANTITY]\n            ,COALESCE('',[LONG_DESCRIPTION]) as [LONG_DESCRIPTION]\n\t\t\t,COALESCE('',[ITEM_INV_APPLICATION]) as [ITEM_INV_APPLICATION]\n      \t,COALESCE('',[TRANSACTION_CONDITION_CODE]) as [TRANSACTION_CONDITION_CODE]\n     \t,COALESCE('',[ADJUSTMENT_ACCOUNT]) as [ADJUSTMENT_ACCOUNT]\n   ,COALESCE('',[CORRECTION_ACCOUNT]) as [CORRECTION_ACCOUNT]\n      ,COALESCE('',[SALES_COST_ACCOUNT]) as [SALES_COST_ACCOUNT]\n      ,COALESCE('',[FOUR_DIGIT_CODE]) as [FOUR_DIGIT_CODE]\n        , [ORG_NAME]\n        ,COALESCE('',[PE_EXT_ATTRIBUTE1]) as [PE_EXT_ATTRIBUTE1] \n           ,COALESCE('',[PE_EXT_ATTRIBUTE2]) as [PE_EXT_ATTRIBUTE2] \n   \n  FROM [inventory].[Parts_Item_Header]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ITEM_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ITEM_NUMBER",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DESCRIPTION",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DESCRIPTION",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DESCRIPTION_ESA",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DESCRIPTION_ESA",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ORANIZATION_CODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ORANIZATION_CODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TEMPLATE_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TEMPLATE_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LIST_PRICE_PER_UNIT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LIST_PRICE_PER_UNIT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "UOM_CODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UOM_CODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "WEIGHT_UOM_CODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WEIGHT_UOM_CODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "UNIT_WEIGHT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UNIT_WEIGHT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "VOLUME_UOM_CODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "VOLUME_UOM_CODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "UNIT_VOLUME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UNIT_VOLUME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MIN_MINMAX_QUANTITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MIN_MINMAX_QUANTITY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MAX_MINMAX_QUANTITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MAX_MINMAX_QUANTITY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FULL_LEAD_TIME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FULL_LEAD_TIME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FIXED_LOT_MULTIPLIER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FIXED_LOT_MULTIPLIER",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FIXED_ORDER_QUANTITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FIXED_ORDER_QUANTITY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MINIMUM_ORDER_QUANTITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MINIMUM_ORDER_QUANTITY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MAXIMUM_ORDER_QUANTITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MAXIMUM_ORDER_QUANTITY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LONG_DESCRIPTION",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LONG_DESCRIPTION",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ITEM_INV_APPLICATION",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ITEM_INV_APPLICATION",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TRANSACTION_CONDITION_CODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TRANSACTION_CONDITION_CODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ADJUSTMENT_ACCOUNT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADJUSTMENT_ACCOUNT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CORRECTION_ACCOUNT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CORRECTION_ACCOUNT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SALES_COST_ACCOUNT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SALES_COST_ACCOUNT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FOUR_DIGIT_CODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FOUR_DIGIT_CODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ORG_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ORG_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PE_EXT_ATTRIBUTE1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PE_EXT_ATTRIBUTE1",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PE_EXT_ATTRIBUTE2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PE_EXT_ATTRIBUTE2",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqParts_Item_Header",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "tem_HeaderpipeDelimited",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "transaction",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "/****** Script for SelectTopNRows command from SSMS  ******/\nSELECT  [ITEM_NUMBER]\n      ,[ORGANIZATION_CODE]\n      ,[SUBINVENTORY_NAME]\n      ,[TRANSACTION_QUANTITY]\n      ,[TRANSACTION_DATE]\n      ,[TRANSACTION_REFERENCE]\n      ,[LOCATOR_NAME]\n      ,[TRANSACTION_COST]\n        ,COALESCE('',[FM_SERIAL_NUMBER]) as [FM_SERIAL_NUMBER]\n\t\t  ,COALESCE('',[TO_SERIAL_NUMBER]) as [TO_SERIAL_NUMBER]\n      \n      ,[Distribution_Account]\n      ,[ORG_NAME]\n\t  \t\t  ,COALESCE('',[PE_EXT_ATTRIBUTE1]) as [PE_EXT_ATTRIBUTE1]\n       ,COALESCE('',[PE_EXT_ATTRIBUTE2]) as [PE_EXT_ATTRIBUTE2]\n   \n  FROM [inventory].[Parts_Inventory_Transactions]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "transactionDelimited",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "inventory"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "MANUFACTURER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MANUFACTURER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DESCRIPTION",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DESCRIPTION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PART_NUMBER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PART_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ITEM_NUMBER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ITEM_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ORG_NAME",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ORG_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable4",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "ingest/inventory"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/flattenedbuildingtocsv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[flattened building]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CustomerCode",
											"type": "String"
										},
										"sink": {
											"name": "CustomerCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "HashKey",
											"type": "Byte[]"
										},
										"sink": {
											"name": "HashKey",
											"type": "Byte[]"
										}
									},
									{
										"source": {
											"name": "ETL_Load_Date_Time",
											"type": "DateTime"
										},
										"sink": {
											"name": "ETL_Load_Date_Time",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "type",
											"type": "String"
										},
										"sink": {
											"name": "type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ExternalBuildingId",
											"type": "String"
										},
										"sink": {
											"name": "ExternalBuildingId",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BuildingName_local",
											"type": "String"
										},
										"sink": {
											"name": "BuildingName_local",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "StreetAddress_Local",
											"type": "String"
										},
										"sink": {
											"name": "StreetAddress_Local",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "City_Local",
											"type": "String"
										},
										"sink": {
											"name": "City_Local",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Postcode",
											"type": "String"
										},
										"sink": {
											"name": "Postcode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MainTypeViewId",
											"type": "String"
										},
										"sink": {
											"name": "MainTypeViewId",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MainTypeName_En",
											"type": "String"
										},
										"sink": {
											"name": "MainTypeName_En",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SubTypeViewId",
											"type": "String"
										},
										"sink": {
											"name": "SubTypeViewId",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SubTypeName_En",
											"type": "String"
										},
										"sink": {
											"name": "SubTypeName_En",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BuildingNo",
											"type": "String"
										},
										"sink": {
											"name": "BuildingNo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CustomerNo",
											"type": "String"
										},
										"sink": {
											"name": "CustomerNo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SumOfTotalUnits",
											"type": "String"
										},
										"sink": {
											"name": "SumOfTotalUnits",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SumOfUnitsInService",
											"type": "String"
										},
										"sink": {
											"name": "SumOfUnitsInService",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TargetCallRate",
											"type": "String"
										},
										"sink": {
											"name": "TargetCallRate",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Notes",
											"type": "String"
										},
										"sink": {
											"name": "Notes",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BHContactPhone1",
											"type": "String"
										},
										"sink": {
											"name": "BHContactPhone1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String"
										},
										"sink": {
											"name": "State",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TimeZone",
											"type": "String"
										},
										"sink": {
											"name": "TimeZone",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "flattenedbuilding",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedTextflattenedbuilding",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Output"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/idl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Inventory_Transactions",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT  [ITEM_NUMBER]\n      ,[ORGANIZATION_CODE]\n      ,[SUBINVENTORY_NAME]\n      ,[TRANSACTION_QUANTITY]\n      ,[TRANSACTION_DATE]\n      ,[TRANSACTION_REFERENCE]\n      ,[LOCATOR_NAME]\n      ,[TRANSACTION_COST]\n      ,[FM_SERIAL_NUMBER]\n      ,[TO_SERIAL_NUMBER]\n      ,[Distribution_Account]\n      ,[ORG_NAME]\n      ,[PE_EXT_ATTRIBUTE1]\n      ,[PE_EXT_ATTRIBUTE2]\n  FROM [inventory].[Parts_Inventory_Transactions]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Buildingsql",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dtInventory_Transactions",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Item_Category_Assignment",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [ITEM_NUMBER]\n      ,[CATEGORY_SET_NAME]\n      ,[CONCAT_CATEGORY_NAME]\n      ,[ORANIZATION_CODE]\n      ,[ORG_NAME]\n  FROM [inventory].[Parts_Item_Category_Assignment]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlParts_Item_Category_Assignment",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dtCategory_Assignment",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Cross_Reference",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT  [ITEM_NUMBER]\n      ,[CROSS_REFERENCE_TYPE]\n      ,[CROSS_REFERENCE]\n      ,[DESCRIPTION]\n      ,[ORGANIZATION_CODE]\n      ,[ORG_NAME]\n  FROM [inventory].[Parts_Item_Cross_Reference]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Azuremaintenance",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dtCross_Reference",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Item_Header",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "/****** Script for SelectTopNRows command from SSMS  ******/\nSELECT  [ITEM_NUMBER]\n      ,[DESCRIPTION]\n      ,[DESCRIPTION_ESA]\n      ,[ORANIZATION_CODE]\n      ,[TEMPLATE_NAME]\n      ,[LIST_PRICE_PER_UNIT]\n      ,[UOM_CODE]\n      ,[WEIGHT_UOM_CODE]\n      ,[UNIT_WEIGHT]\n      ,[VOLUME_UOM_CODE]\n      ,[UNIT_VOLUME]\n      ,[MIN_MINMAX_QUANTITY]\n      ,[MAX_MINMAX_QUANTITY]\n      ,[FULL_LEAD_TIME]\n      ,[FIXED_LOT_MULTIPLIER]\n      ,[FIXED_ORDER_QUANTITY]\n      ,[MINIMUM_ORDER_QUANTITY]\n      ,[MAXIMUM_ORDER_QUANTITY]\n      ,[LONG_DESCRIPTION]\n      ,[ITEM_INV_APPLICATION]\n      ,[TRANSACTION_CONDITION_CODE]\n      ,[ADJUSTMENT_ACCOUNT]\n      ,[CORRECTION_ACCOUNT]\n      ,[SALES_COST_ACCOUNT]\n      ,[FOUR_DIGIT_CODE]\n      ,[ORG_NAME]\n      ,[PE_EXT_ATTRIBUTE1]\n      ,[PE_EXT_ATTRIBUTE2]\n  FROM [inventory].[Parts_Item_Header]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "am_da_ds_dst_exviewBuildingapi",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dtItem_Header",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Transaction_Default_Locators",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT  [ITEM_NUMBER]\n      ,[ORGANIZATION_CODE]\n      ,[SUBINVENTORY_NAME]\n      ,[LOCATOR_NAME]\n      ,[ORG_NAME]\n  FROM [inventory].[Parts_Item_Transaction_Default_Locators]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlParts_Item_Transaction_Default_Locators",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dtTransaction_Default_Locators",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "MFG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT  [MANUFACTURER]\n      ,[DESCRIPTION]\n      ,[PART_NUMBER]\n      ,[ITEM_NUMBER]\n      ,[ORG_NAME]\n  FROM [inventory].[Parts_MFG_Part_Number]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlMFG",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dtmfg",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Transaction_Default_Subinventories",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [ITEM_NUMBER]\n      ,[ORGANIZATION_CODE]\n      ,[SUBINVENTORY_NAME]\n      ,[ORG_NAME]\n  FROM [inventory].[Parts_Item_Transaction_Default_Subinventories]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "am_da_ds_dst_exviewBuildingapi",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dtDefault_Subinventories",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Output/inventory"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/idlinventory')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Pipe cross reference",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "/****** Script for SelectTopNRows command from SSMS  ******/\nSELECT [ITEM_NUMBER]\n      ,[CROSS_REFERENCE_TYPE]\n      ,[CROSS_REFERENCE]\n      ,[DESCRIPTION]\n      ,[ORGANIZATION_CODE]\n      ,[ORG_NAME]\n  FROM [inventory].[Parts_Item_Cross_Reference]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlParts_Item_Cross_Reference",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parts_Item_Cross_Referencedl",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Item_Transaction_Default_Locators",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlParts_Item_Transaction_Default_Locators",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlParts_Item_Transaction_Default_Locatorsdt",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "idl Subinventories",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "/****** Script for SelectTopNRows command from SSMS  ******/\nSELECT  [ITEM_NUMBER]\n      ,[ORGANIZATION_CODE]\n      ,[SUBINVENTORY_NAME]\n      ,[ORG_NAME]\n  FROM [inventory].[Parts_Item_Transaction_Default_Subinventories]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlSubinventories",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dtAzureSqlSubinventories",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "MFG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT  [MANUFACTURER]\n      ,[DESCRIPTION]\n      ,[PART_NUMBER]\n      ,[ITEM_NUMBER]\n      ,[ORG_NAME]\n  FROM [inventory].[Parts_MFG_Part_Number]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlMFG",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "mfg",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Header",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [ITEM_NUMBER]\n      ,[DESCRIPTION]\n      ,COALESCE('',[DESCRIPTION_ESA]) as [DESCRIPTION_ESA]\n      ,[ORANIZATION_CODE]\n      ,[TEMPLATE_NAME]\n      ,[LIST_PRICE_PER_UNIT]\n      ,[UOM_CODE]\n\t    ,COALESCE('',[WEIGHT_UOM_CODE]) as [WEIGHT_UOM_CODE]\n         ,COALESCE('',[UNIT_WEIGHT]) as [UNIT_WEIGHT]\n       ,COALESCE('',[VOLUME_UOM_CODE]) as [VOLUME_UOM_CODE]\n       ,COALESCE('',[UNIT_VOLUME]) as [UNIT_VOLUME]\n        ,COALESCE('',[MIN_MINMAX_QUANTITY]) as [MIN_MINMAX_QUANTITY]\n       ,COALESCE('',[MAX_MINMAX_QUANTITY]) as [MAX_MINMAX_QUANTITY]\n       ,COALESCE('',[FULL_LEAD_TIME]) as [FULL_LEAD_TIME]\n    ,COALESCE('',[FIXED_LOT_MULTIPLIER]) as [FIXED_LOT_MULTIPLIER]\n      ,COALESCE('',[FIXED_ORDER_QUANTITY]) as [FIXED_ORDER_QUANTITY]\n           ,COALESCE('',[MINIMUM_ORDER_QUANTITY]) as [MINIMUM_ORDER_QUANTITY]\n       ,COALESCE('',[MAXIMUM_ORDER_QUANTITY]) as [MAXIMUM_ORDER_QUANTITY]\n            ,COALESCE('',[LONG_DESCRIPTION]) as [LONG_DESCRIPTION]\n\t\t\t,COALESCE('',[ITEM_INV_APPLICATION]) as [ITEM_INV_APPLICATION]\n      \t,COALESCE('',[TRANSACTION_CONDITION_CODE]) as [TRANSACTION_CONDITION_CODE]\n     \t,COALESCE('',[ADJUSTMENT_ACCOUNT]) as [ADJUSTMENT_ACCOUNT]\n   ,COALESCE('',[CORRECTION_ACCOUNT]) as [CORRECTION_ACCOUNT]\n      ,COALESCE('',[SALES_COST_ACCOUNT]) as [SALES_COST_ACCOUNT]\n      ,COALESCE('',[FOUR_DIGIT_CODE]) as [FOUR_DIGIT_CODE]\n        , [ORG_NAME]\n        ,COALESCE('',[PE_EXT_ATTRIBUTE1]) as [PE_EXT_ATTRIBUTE1] \n           ,COALESCE('',[PE_EXT_ATTRIBUTE2]) as [PE_EXT_ATTRIBUTE2] \n   \n  FROM [inventory].[Parts_Item_Header]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ITEM_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ITEM_NUMBER",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DESCRIPTION",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DESCRIPTION",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DESCRIPTION_ESA",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DESCRIPTION_ESA",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ORANIZATION_CODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ORANIZATION_CODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TEMPLATE_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TEMPLATE_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LIST_PRICE_PER_UNIT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LIST_PRICE_PER_UNIT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "UOM_CODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UOM_CODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "WEIGHT_UOM_CODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WEIGHT_UOM_CODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "UNIT_WEIGHT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UNIT_WEIGHT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "VOLUME_UOM_CODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "VOLUME_UOM_CODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "UNIT_VOLUME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UNIT_VOLUME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MIN_MINMAX_QUANTITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MIN_MINMAX_QUANTITY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MAX_MINMAX_QUANTITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MAX_MINMAX_QUANTITY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FULL_LEAD_TIME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FULL_LEAD_TIME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FIXED_LOT_MULTIPLIER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FIXED_LOT_MULTIPLIER",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FIXED_ORDER_QUANTITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FIXED_ORDER_QUANTITY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MINIMUM_ORDER_QUANTITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MINIMUM_ORDER_QUANTITY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MAXIMUM_ORDER_QUANTITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MAXIMUM_ORDER_QUANTITY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LONG_DESCRIPTION",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LONG_DESCRIPTION",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ITEM_INV_APPLICATION",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ITEM_INV_APPLICATION",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TRANSACTION_CONDITION_CODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TRANSACTION_CONDITION_CODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ADJUSTMENT_ACCOUNT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADJUSTMENT_ACCOUNT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CORRECTION_ACCOUNT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CORRECTION_ACCOUNT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SALES_COST_ACCOUNT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SALES_COST_ACCOUNT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FOUR_DIGIT_CODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FOUR_DIGIT_CODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ORG_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ORG_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PE_EXT_ATTRIBUTE1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PE_EXT_ATTRIBUTE1",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PE_EXT_ATTRIBUTE2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PE_EXT_ATTRIBUTE2",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqParts_Item_Header",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "tem_Headerpipe",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "transaction",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "/****** Script for SelectTopNRows command from SSMS  ******/\nSELECT  [ITEM_NUMBER]\n      ,[ORGANIZATION_CODE]\n      ,[SUBINVENTORY_NAME]\n      ,[TRANSACTION_QUANTITY]\n      ,[TRANSACTION_DATE]\n      ,[TRANSACTION_REFERENCE]\n      ,[LOCATOR_NAME]\n      ,[TRANSACTION_COST]\n        ,COALESCE('',[FM_SERIAL_NUMBER]) as [FM_SERIAL_NUMBER]\n\t\t  ,COALESCE('',[TO_SERIAL_NUMBER]) as [TO_SERIAL_NUMBER]\n      \n      ,[Distribution_Account]\n      ,[ORG_NAME]\n\t  \t\t  ,COALESCE('',[PE_EXT_ATTRIBUTE1]) as [PE_EXT_ATTRIBUTE1]\n       ,COALESCE('',[PE_EXT_ATTRIBUTE2]) as [PE_EXT_ATTRIBUTE2]\n   \n  FROM [inventory].[Parts_Inventory_Transactions]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dttransaction",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "inventory"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline8')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetMetadataItem_category_assignment",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ExcelItem_Category_Assignment",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Filter Item_Category_Assignment",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetMetadataItem_category_assignment",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetMetadataItem_category_assignment').output.childItems\n",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,variables('Parts_Item_Category_Assignment'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Filter Item_Category_Assignment",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@activity('Filter Item_Category_Assignment').output.value[0].name",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "  truncate table [inventory].[Parts_Item_Category_Assignment]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ExcelItem_Category_Assignment",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTAzureSqlParts_Item_Category_Assignment",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy file to processed Category_Assignment",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "\n@activity('Filter Item_Category_Assignment').output.value[0].name",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ExcelItem_Category_Assignment",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText10",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete2",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy file to processed Category_Assignment",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ExcelItem_Category_Assignment",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "ADLS2",
									"type": "LinkedServiceReference"
								},
								"path": "log"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"wildcardFileName": " @activity('Filter Item_Category_Assignment').output.value[0].name",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"variables": {
					"Parts_Item_Category_Assignment": {
						"type": "String",
						"defaultValue": "Parts_Item_Category_Assignment"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineunit')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Unit_ViewID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit_ViewID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unit_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_UnitAttributes",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_UnitAttributes",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_EquipmentIdentification",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_EquipmentIdentification",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_Building",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_Building",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_ViewID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_ViewID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_ExternalID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_ExternalID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_BuildingNo",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_BuildingNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_Name2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_Name2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MarketSegment",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MarketSegment",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Service_Address1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Service_Address1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Service_Address2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Service_Address2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Service_City",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Service_City",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Service_State",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Service_State",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ServiceLocation_Zip",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ServiceLocation_Zip",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_ElevatorBank",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_ElevatorBank",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ElevatorBank_ViewID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ElevatorBank_ViewID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ElevatorBank_ExternalID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ElevatorBank_ExternalID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ElevatorBank_BankName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ElevatorBank_BankName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ElevatorBank_AccessCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ElevatorBank_AccessCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_Branch",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_Branch",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Branch_ViewID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Branch_ViewID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BranchName1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BranchName1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BranchName2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BranchName2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unit_GovernmentID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit_GovernmentID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unit_NickName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit_NickName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Customer_BillingReference",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Customer_BillingReference",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unit_DownInd",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit_DownInd",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unit_RegisteredNo",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit_RegisteredNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unit_MfgYear",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit_MfgYear",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_Equipment",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_Equipment",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_EquipmentType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_EquipmentType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EquipmentType_Okeefe_EquipName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EquipmentType_Okeefe_EquipName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EquipmentType_TKE_EquipName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EquipmentType_TKE_EquipName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EquipmentType_TKE_EquipClassification",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EquipmentType_TKE_EquipClassification",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_Manufacturer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_Manufacturer",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Manufacturer_VIEWId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Manufacturer_VIEWId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Manufacturer_ExternalID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Manufacturer_ExternalID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Manufacturer_Name1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Manufacturer_Name1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Manufacturer_Name2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Manufacturer_Name2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_Controller1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_Controller1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Controller_Name1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Controller_Name1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_DriveType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_DriveType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DriveType_Name1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DriveType_Name1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "NumberofFloors",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NumberofFloors",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "NumberofFrontOpenings",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NumberofFrontOpenings",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_Maintenance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_Maintenance",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_MaintenanceRun",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_MaintenanceRun",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MaintenanceRun_ViewID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MaintenanceRun_ViewID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MaintenanceRun_ExternalID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MaintenanceRun_ExternalID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MaintenanceRun_RouteNo_TerritoryCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MaintenanceRun_RouteNo_TerritoryCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_DefaultScheduling",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_DefaultScheduling",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_HoursPerVisit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_HoursPerVisit",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HoursPerVisit_ViewID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HoursPerVisit_ViewID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HoursPerVisit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HoursPerVisit",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "VisitsPerYear",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VisitsPerYear",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SLA_AnnualVisitsRequired",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLA_AnnualVisitsRequired",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SLA_VisitsRequired",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLA_VisitsRequired",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SLA_HoursRequiredPerVisit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLA_HoursRequiredPerVisit",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SLA_HoursRequired",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLA_HoursRequired",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SLA_Comments",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLA_Comments",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TechnicianNotes",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TechnicianNotes",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unit_WarrantyStartDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit_WarrantyStartDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unit_WarrantyEndDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit_WarrantyEndDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unit_InstallDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit_InstallDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unit_HandoverDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit_HandoverDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AnnualSafetyTest_LastInspectionDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AnnualSafetyTest_LastInspectionDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AnnualSafetyTest_NextInspectionDueDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AnnualSafetyTest_NextInspectionDueDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AnnualSafetyTest_CoveredInContract",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AnnualSafetyTest_CoveredInContract",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PeriodicSafetyTest_LastInspectionDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PeriodicSafetyTest_LastInspectionDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PeriodicSafetyTest_Frequency",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PeriodicSafetyTest_Frequency",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PeriodicSafetyTest_NextInspectionDueDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PeriodicSafetyTest_NextInspectionDueDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PeriodicSafetyTest_CoveredInContract",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PeriodicSafetyTest_CoveredInContract",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FiremansRecall_LastInspectionDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FiremansRecall_LastInspectionDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FiremansRecall_ Frequency",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FiremansRecall_ Frequency",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unit_JobNo",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit_JobNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unit_FactorySerialNo",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit_FactorySerialNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unit_Smart_ExternalID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit_Smart_ExternalID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unit_Smart_InstallationDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit_Smart_InstallationDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_Contract",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_Contract",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contract_ViewID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contract_ViewID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contract_ExternalID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contract_ExternalID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contract_StartDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contract_StartDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contract_EndDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contract_EndDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contract_MoValue",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contract_MoValue",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ContractNo",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ContractNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ContractCoverage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ContractCoverage",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "NumberofRearOpenings",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NumberofRearOpenings",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unit_CapacityLbs",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit_CapacityLbs",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_Speed",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_Speed",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Speed_ViewID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Speed_ViewID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Speed_FPM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Speed_FPM",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_FrontDoorComplexity",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_FrontDoorComplexity",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FrontDoorComplexity_ViewID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FrontDoorComplexity_ViewID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FrontDoorComplexity_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FrontDoorComplexity_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_RearDoorComplexity",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_RearDoorComplexity",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RearDoorComplexity_ViewID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RearDoorComplexity_ViewID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RearDoorComplexity_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RearDoorComplexity_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FullRawDataExtract20201005",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "stgunit",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-10-07T23:18:22Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ASQLDB_PIPEINE_PARAMETER1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorksDW2019",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "training"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "Table_Name",
						"type": "nvarchar"
					},
					{
						"name": "TABLE_CATALOG",
						"type": "nvarchar"
					},
					{
						"name": "process_type",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "pipeline_parameter"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_b21')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "AccountKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ParentAccountKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AccountCodeAlternateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ParentAccountCodeAlternateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AccountDescription",
						"type": "nvarchar"
					},
					{
						"name": "AccountType",
						"type": "nvarchar"
					},
					{
						"name": "Operator",
						"type": "nvarchar"
					},
					{
						"name": "CustomMembers",
						"type": "nvarchar"
					},
					{
						"name": "ValueType",
						"type": "nvarchar"
					},
					{
						"name": "CustomMemberOptions",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimAccount"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerStudent')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServerTestStudent",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "training"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "studentId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "studentName",
						"type": "varchar"
					},
					{
						"name": "stream",
						"type": "varchar"
					},
					{
						"name": "marks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "createDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "updateDate",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Student"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "AccountKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ParentAccountKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AccountCodeAlternateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ParentAccountCodeAlternateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AccountDescription",
						"type": "nvarchar"
					},
					{
						"name": "AccountType",
						"type": "nvarchar"
					},
					{
						"name": "Operator",
						"type": "nvarchar"
					},
					{
						"name": "CustomMembers",
						"type": "nvarchar"
					},
					{
						"name": "ValueType",
						"type": "nvarchar"
					},
					{
						"name": "CustomMemberOptions",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimAccount"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adventre')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorksDW2019",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "training"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlunit",
								"type": "DatasetReference"
							},
							"name": "unit1"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlIdentification",
								"type": "DatasetReference"
							},
							"name": "Identification1"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlBank",
								"type": "DatasetReference"
							},
							"name": "Bank"
						},
						{
							"dataset": {
								"referenceName": "BUILDING1",
								"type": "DatasetReference"
							},
							"name": "BUILDING"
						},
						{
							"dataset": {
								"referenceName": "EQUIPMENT",
								"type": "DatasetReference"
							},
							"name": "EQUIPMENT"
						},
						{
							"dataset": {
								"referenceName": "EQUIPMENTTypeSQl",
								"type": "DatasetReference"
							},
							"name": "EQUIPMENTType"
						},
						{
							"dataset": {
								"referenceName": "sqlManufacturer",
								"type": "DatasetReference"
							},
							"name": "Manufacturer"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlController",
								"type": "DatasetReference"
							},
							"name": "Controller"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlSpeed",
								"type": "DatasetReference"
							},
							"name": "speed"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlDriveType",
								"type": "DatasetReference"
							},
							"name": "DriveType"
						},
						{
							"dataset": {
								"referenceName": "office",
								"type": "DatasetReference"
							},
							"name": "office"
						},
						{
							"dataset": {
								"referenceName": "maintenance",
								"type": "DatasetReference"
							},
							"name": "maintenance"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "CosmosDbSqlApiCollection1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						},
						{
							"name": "Sort1"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "BankArray"
						},
						{
							"name": "JoinBankidentification"
						},
						{
							"name": "JoinidentificationBuilding"
						},
						{
							"name": "EQUIPMENTDC1"
						},
						{
							"name": "Join2"
						},
						{
							"name": "arrayType"
						},
						{
							"name": "Join3"
						},
						{
							"name": "ManufacturerArray"
						},
						{
							"name": "Join4"
						},
						{
							"name": "controllerArray"
						},
						{
							"name": "Join5"
						},
						{
							"name": "speedArray"
						},
						{
							"name": "Join6"
						},
						{
							"name": "DriveTypearray"
						},
						{
							"name": "Join7"
						},
						{
							"name": "joinmanufacter"
						},
						{
							"name": "JoinController"
						},
						{
							"name": "Joinspeed"
						},
						{
							"name": "EQUIPMENTDC"
						},
						{
							"name": "JoinDriveType"
						}
					],
					"script": "source(output(\n\t\tunit_id as string,\n\t\tTechnicianNotes as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select unit_id,TechnicianNotes \\n  FROM [unit].[unit]',\n\tformat: 'query') ~> unit1\nsource(output(\n\t\t{UnitId FK} as string,\n\t\tUnit_GovernmentID as string,\n\t\tUnit_NickName as string,\n\t\tCustomer_BillingReference as string,\n\t\tUnit_DownInd as string,\n\t\tUnit_RegisteredNo as string,\n\t\tUnit_MfgYear as string,\n\t\tUnit_WarrantyStartDate as string,\n\t\tUnit_WarrantyEndDate as string,\n\t\tUnit_InstallDate as string,\n\t\tUnit_HandoverDate as string,\n\t\tAnnualSafetyTest_LastInspectionDate as string,\n\t\tUnit_JobNo as string,\n\t\tUnit_FactorySerialNo as string,\n\t\tUnit_Smart_ViewID as string,\n\t\tUnit_Smart_ExternalID as string,\n\t\tUnit_Smart_InstallationDate as string,\n\t\tUnit_SmartMAX_ViewID as string,\n\t\tUnit_SmartMAX_ExternalID as string,\n\t\tID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from [unit].[Identification]',\n\tformat: 'query') ~> Identification1\nsource(output(\n\t\t{Identification FK} as integer,\n\t\t{UnitId FK} as string,\n\t\tElevatorBank_ViewID as string,\n\t\tElevatorBank_ExternalID as string,\n\t\tElevatorBank_BankName as string,\n\t\tElevatorBank_AccessCode as string,\n\t\tID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Bank\nsource(output(\n\t\t{UnitId FK} as string,\n\t\t{identification FK} as integer,\n\t\tBuilding_ViewID as string,\n\t\tBuilding_ExternalID as string,\n\t\tBuilding_BuildingNo as string,\n\t\tName_en as string,\n\t\tName_local as string,\n\t\tID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> BUILDING\nsource(output(\n\t\t{UnitId FK} as string,\n\t\tFloors as string,\n\t\tNumberofFrontOpenings as string,\n\t\tNumberofRearOpenings as string,\n\t\tUnit_CapacityLbs as string,\n\t\tID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> EQUIPMENT\nsource(output(\n\t\t{UnitId FK} as string,\n\t\t{Equipment Id FK} as integer,\n\t\tEquipmentType_ViewID as string,\n\t\tEquipmentType_ExternalID as string,\n\t\tEquipmentType_Okeefe_EquipName as string,\n\t\tEquipmentType_TKE_EquipClassification as string,\n\t\tNumberofRearOpenings as string,\n\t\tUnit_CapacityLbs as string,\n\t\tEquipmentType_TKE_EquipName as string,\n\t\tid as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> EQUIPMENTType\nsource(output(\n\t\t{UnitId FK} as string,\n\t\t{Equipment Id FK} as integer,\n\t\tManufacturer_VIEWId as string,\n\t\tManufacturer_ExternalID as string,\n\t\tManufacturer_Name1 as string,\n\t\tManufacturer_Name2 as string,\n\t\tAfterHoursCallbackRun_ExternalID as string,\n\t\tID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Manufacturer\nsource(output(\n\t\t{UnitId FK} as string,\n\t\t{Equipment Id FK} as integer,\n\t\tController_Name1 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Controller\nsource(output(\n\t\t{UnitId FK} as string,\n\t\t{Equipment Id FK} as integer,\n\t\tSpeed_ViewID as string,\n\t\tSpeed_FPM as string,\n\t\tID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> speed\nsource(output(\n\t\t{UnitId FK} as string,\n\t\t{Equipment Id FK} as integer,\n\t\tDriveType_ViewID as string,\n\t\tDriveType_ExternalID as string,\n\t\tDriveType_Name1 as string,\n\t\tDriveType_Name2 as string,\n\t\tID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DriveType\nsource(output(\n\t\t{UnitId FK} as integer,\n\t\t{identification Id FK} as integer,\n\t\tBranch_ViewID as string,\n\t\tBranchName1 as string,\n\t\tBranchName2 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> office\nsource(output(\n\t\t{UnitId FK} as integer,\n\t\tArray_MaintenanceRun as string,\n\t\tMaintenanceRun_RouteNo_TerritoryCode as string,\n\t\tID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> maintenance\nSort1, JoinidentificationBuilding join(unit_id == Bank@{UnitId FK},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nunit1 sort(asc(unit_id, true)) ~> Sort1\nJoin7 derive(unit_id = unit_id,\n\t\tTechnicianNotes = TechnicianNotes,\n\t\tIdentification = @(BANK=@(ElevatorBank_ViewID=ElevatorBank_ViewID,\n\t\tElevatorBank_BankName=ElevatorBank_BankName,\n\t\tElevatorBank_AccessCode=ElevatorBank_AccessCode),\n\t\tBuilding=@(Building_ViewID=Building_ViewID)),\n\t\tEQUIPMENT = @(Floors=Floors,\n\t\tNumberofFrontOpenings=NumberofFrontOpenings,\n\t\tNumberofRearOpenings=NumberofRearOpenings,\n\t\tUnit_CapacityLbs=Unit_CapacityLbs,\n\t\tUNITTYPE=UNITTYPE,\n\t\tManufacturer=Manufacturer,\n\t\tController=Controller,\n\t\tSpeed=Speed,\n\t\tDriveType=DriveType)) ~> DerivedColumn1\nBank derive(Bank = @(ElevatorBank_ViewID=ElevatorBank_ViewID,\n\t\tElevatorBank_ExternalID=ElevatorBank_ExternalID,\n\t\tElevatorBank_BankName=ElevatorBank_BankName,\n\t\tElevatorBank_AccessCode=ElevatorBank_AccessCode),\n\t\t{Identification FK} = {Identification FK}) ~> BankArray\nIdentification1, BankArray join(Identification1@ID == {Identification FK},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinBankidentification\nJoinBankidentification, BUILDING join(BankArray@{Identification FK} == BUILDING@{identification FK},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinidentificationBuilding\nEQUIPMENT derive(EQUIPMENT = @(Floors=Floors,\n\t\tNumberofFrontOpenings=NumberofFrontOpenings,\n\t\tNumberofRearOpenings=NumberofRearOpenings),\n\t\tUnitId = {UnitId FK},\n\t\tID = ID) ~> EQUIPMENTDC1\nEQUIPMENTType, EQUIPMENTDC1 join({Equipment Id FK} == EQUIPMENTDC1@ID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join2\nJoin2 derive(UNITTYPE = @(EquipmentType_ViewID=EquipmentType_ViewID,\n\t\tEquipmentType_ExternalID=EquipmentType_ExternalID,\n\t\tEquipmentType_Okeefe_EquipName=EquipmentType_Okeefe_EquipName,\n\t\tEquipmentType_TKE_EquipClassification=EquipmentType_TKE_EquipClassification,\n\t\tNumberofRearOpenings=EQUIPMENTType@NumberofRearOpenings,\n\t\tUnit_CapacityLbs=EQUIPMENTType@Unit_CapacityLbs,\n\t\tEquipmentType_TKE_EquipName=EquipmentType_TKE_EquipName),\n\t\t{Equipment Id FK} = {Equipment Id FK}) ~> arrayType\nManufacturer, EQUIPMENT join({Equipment Id FK} == EQUIPMENT@ID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join3\nJoin3 derive(Manufacturerarray = @(Manufacturer_VIEWId=Manufacturer_VIEWId,\n\t\tManufacturer_ExternalID=Manufacturer_ExternalID,\n\t\tManufacturer_Name1=Manufacturer_Name1,\n\t\tManufacturer_Name2=Manufacturer_Name2,\n\t\tAfterHoursCallbackRun_ExternalID=AfterHoursCallbackRun_ExternalID)) ~> ManufacturerArray\nController, EQUIPMENT join({Equipment Id FK} == ID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join4\nJoin4 derive(controllerArray = @(Controller_Name1=Controller_Name1),\n\t\t{Equipment Id FK} = {Equipment Id FK}) ~> controllerArray\nspeed, EQUIPMENT join({Equipment Id FK} == EQUIPMENT@ID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join5\nJoin5 derive(Speed = @(Speed_ViewID=Speed_ViewID,\n\t\tSpeed_FPM=Speed_FPM),\n\t\t{Equipment Id FK} = {Equipment Id FK}) ~> speedArray\nDriveType, EQUIPMENT join({Equipment Id FK} == EQUIPMENT@ID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join6\nJoin6 derive(DriveTypeArray = @(DriveType_ViewID=DriveType_ViewID,\n\t\tDriveType_ExternalID=DriveType_ExternalID,\n\t\tDriveType_Name1=DriveType_Name1,\n\t\tDriveType_Name2=DriveType_Name2)) ~> DriveTypearray\nJoin1, EQUIPMENTDC join(unit_id == EQUIPMENTDC@{UnitId FK},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join7\narrayType, Manufacturer join(arrayType@{Equipment Id FK} == Manufacturer@{Equipment Id FK},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> joinmanufacter\njoinmanufacter, Controller join(Manufacturer@{Equipment Id FK} == Controller@{Equipment Id FK},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinController\nJoinController, speed join(arrayType@{Equipment Id FK} == speed@{Equipment Id FK},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Joinspeed\nJoinDriveType derive(ArrayType = @(EquipmentType_ViewID=EquipmentType_ViewID,\n\t\tEquipmentType_ExternalID=EquipmentType_ExternalID,\n\t\tEquipmentType_Okeefe_EquipName=EquipmentType_Okeefe_EquipName,\n\t\tEquipmentType_TKE_EquipClassification=EquipmentType_TKE_EquipClassification,\n\t\tNumberofRearOpenings=EQUIPMENT@NumberofRearOpenings,\n\t\tUnit_CapacityLbs=EQUIPMENT@Unit_CapacityLbs,\n\t\tEquipmentType_TKE_EquipName=EquipmentType_TKE_EquipName),\n\t\tManufacturer = @(Manufacturer_VIEWId=Manufacturer_VIEWId,\n\t\tManufacturer_ExternalID=Manufacturer_ExternalID,\n\t\tManufacturer_Name1=Manufacturer_Name1,\n\t\tManufacturer_Name2=Manufacturer_Name2,\n\t\tAfterHoursCallbackRun_ExternalID=AfterHoursCallbackRun_ExternalID),\n\t\tController = @(Controller_Name1=Controller_Name1),\n\t\tSpeed = @(Speed_ViewID=Speed_ViewID,\n\t\tSpeed_FPM=Speed_FPM),\n\t\tDriveType = @(DriveType_ViewID=DriveType_ViewID,\n\t\tDriveType_ExternalID=DriveType_ExternalID,\n\t\tDriveType_Name2=DriveType_Name2,\n\t\tDriveType_Name1=DriveType_Name1),\n\t\tEQUIPMENT = EQUIPMENT,\n\t\tFloors = Floors,\n\t\tNumberofFrontOpenings = NumberofFrontOpenings,\n\t\tNumberofRearOpenings = EQUIPMENT@NumberofRearOpenings,\n\t\tUnit_CapacityLbs = EQUIPMENT@Unit_CapacityLbs,\n\t\t{UnitId FK} = EQUIPMENT@{UnitId FK}) ~> EQUIPMENTDC\nJoinspeed, DriveType join(arrayType@{Equipment Id FK} == DriveType@{Equipment Id FK},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinDriveType\nDerivedColumn1 sink(allowSchemaDrift: true,\n\tvalidateSchema: true,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'document',\n\tmapColumn(\n\t\tID,\n\t\tTechnicianNotes,\n\t\tIdentification,\n\t\tunit_id,\n\t\tEQUIPMENT\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlunit",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "CosmosDbSqlApiCollection1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tUnit_ID as integer,\n\t\tTechnicianNotes as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nsource1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'document',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow4')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlunit",
								"type": "DatasetReference"
							},
							"name": "unit"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTEQUIPMENT",
								"type": "DatasetReference"
							},
							"name": "EQUIPMENT"
						},
						{
							"dataset": {
								"referenceName": "EQUIPMENTType",
								"type": "DatasetReference"
							},
							"name": "EQUIPMENTType"
						},
						{
							"dataset": {
								"referenceName": "Manufacturer",
								"type": "DatasetReference"
							},
							"name": "Manufacturer"
						},
						{
							"dataset": {
								"referenceName": "AzureSqController",
								"type": "DatasetReference"
							},
							"name": "Controller"
						},
						{
							"dataset": {
								"referenceName": "AzureSpeed",
								"type": "DatasetReference"
							},
							"name": "speed"
						},
						{
							"dataset": {
								"referenceName": "DriveType",
								"type": "DatasetReference"
							},
							"name": "DriveType"
						},
						{
							"dataset": {
								"referenceName": "SqlIdentification",
								"type": "DatasetReference"
							},
							"name": "Identification"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlUILDING",
								"type": "DatasetReference"
							},
							"name": "bUILDING"
						},
						{
							"dataset": {
								"referenceName": "lBANK",
								"type": "DatasetReference"
							},
							"name": "BANK"
						},
						{
							"dataset": {
								"referenceName": "Azuremaintenance",
								"type": "DatasetReference"
							},
							"name": "maintenance"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Json1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						},
						{
							"name": "Join2EQUIPMENTType"
						},
						{
							"name": "JoinManufacturer"
						},
						{
							"name": "JoinController"
						},
						{
							"name": "JoinSpeed"
						},
						{
							"name": "JoinDriveType"
						},
						{
							"name": "Identificationjoin"
						},
						{
							"name": "JoinBUILDING"
						},
						{
							"name": "Joinbank"
						},
						{
							"name": "Joinmaintenance"
						},
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\tUnit_ID as integer,\n\t\tTechnicianNotes as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> unit\nsource(output(\n\t\t{UnitId FK} as integer,\n\t\tFloors as string,\n\t\tNumberofFrontOpenings as string,\n\t\tNumberofRearOpenings as string,\n\t\tUnit_CapacityLbs as string,\n\t\tID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> EQUIPMENT\nsource(output(\n\t\t{UnitId FK} as string,\n\t\t{Equipment Id FK} as integer,\n\t\tEquipmentType_ViewID as string,\n\t\tEquipmentType_ExternalID as string,\n\t\tEquipmentType_Okeefe_EquipName as string,\n\t\tEquipmentType_TKE_EquipClassification as string,\n\t\tNumberofRearOpenings as string,\n\t\tUnit_CapacityLbs as string,\n\t\tEquipmentType_TKE_EquipName as string,\n\t\tid as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> EQUIPMENTType\nsource(output(\n\t\t{UnitId FK} as string,\n\t\t{Equipment Id FK} as integer,\n\t\tManufacturer_VIEWId as string,\n\t\tManufacturer_ExternalID as string,\n\t\tManufacturer_Name1 as string,\n\t\tManufacturer_Name2 as string,\n\t\tAfterHoursCallbackRun_ExternalID as string,\n\t\tID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Manufacturer\nsource(output(\n\t\t{UnitId FK} as string,\n\t\t{Equipment Id FK} as integer,\n\t\tController_Name1 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Controller\nsource(output(\n\t\t{UnitId FK} as string,\n\t\t{Equipment Id FK} as integer,\n\t\tSpeed_ViewID as string,\n\t\tSpeed_FPM as string,\n\t\tID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> speed\nsource(output(\n\t\t{UnitId FK} as string,\n\t\t{Equipment Id FK} as integer,\n\t\tDriveType_ViewID as string,\n\t\tDriveType_ExternalID as string,\n\t\tDriveType_Name1 as string,\n\t\tDriveType_Name2 as string,\n\t\tID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DriveType\nsource(output(\n\t\t{UnitId FK} as integer,\n\t\tUnit_GovernmentID as string,\n\t\tUnit_NickName as string,\n\t\tCustomer_BillingReference as string,\n\t\tUnit_DownInd as string,\n\t\tUnit_RegisteredNo as string,\n\t\tUnit_MfgYear as string,\n\t\tUnit_WarrantyStartDate as string,\n\t\tUnit_WarrantyEndDate as string,\n\t\tUnit_InstallDate as string,\n\t\tUnit_HandoverDate as string,\n\t\tAnnualSafetyTest_LastInspectionDate as string,\n\t\tUnit_JobNo as string,\n\t\tUnit_FactorySerialNo as string,\n\t\tUnit_Smart_ViewID as string,\n\t\tUnit_Smart_ExternalID as string,\n\t\tUnit_Smart_InstallationDate as string,\n\t\tUnit_SmartMAX_ViewID as string,\n\t\tUnit_SmartMAX_ExternalID as string,\n\t\tID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Identification\nsource(output(\n\t\t{UnitId FK} as string,\n\t\t{identification FK} as integer,\n\t\tBuilding_ViewID as string,\n\t\tBuilding_ExternalID as string,\n\t\tBuilding_BuildingNo as string,\n\t\tName_en as string,\n\t\tName_local as string,\n\t\tID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> bUILDING\nsource(output(\n\t\t{Identification FK} as integer,\n\t\t{UnitId FK} as integer,\n\t\tElevatorBank_ViewID as string,\n\t\tElevatorBank_ExternalID as string,\n\t\tElevatorBank_BankName as string,\n\t\tElevatorBank_AccessCode as string,\n\t\tID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> BANK\nsource(output(\n\t\t{UnitId FK} as integer,\n\t\tArray_MaintenanceRun as string,\n\t\tMaintenanceRun_RouteNo_TerritoryCode as string,\n\t\tID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> maintenance\nunit, EQUIPMENT join(Unit_ID == {UnitId FK},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nJoin1, EQUIPMENTType join(EQUIPMENT@ID == {Equipment Id FK},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join2EQUIPMENTType\nJoin2EQUIPMENTType, Manufacturer join(EQUIPMENT@ID == Manufacturer@{Equipment Id FK},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinManufacturer\nJoinManufacturer, Controller join(EQUIPMENTType@id == Controller@{Equipment Id FK},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinController\nJoinController, speed join(EQUIPMENT@ID == speed@{Equipment Id FK},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinSpeed\nJoinSpeed, DriveType join(EQUIPMENT@ID == DriveType@ID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinDriveType\nJoinDriveType, Identification join(Unit_ID == Identification@{UnitId FK},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Identificationjoin\nIdentificationjoin, bUILDING join(Identification@ID == {identification FK},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinBUILDING\nJoinBUILDING, BANK join(Identification@ID == BANK@{Identification FK},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Joinbank\nJoinbank, maintenance join(Unit_ID == maintenance@{UnitId FK},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Joinmaintenance\nJoinmaintenance derive(Unit_ID = Unit_ID,\n\t\tTechnicianNotes = TechnicianNotes,\n\t\tidentification = @(Unit_GovernmentID=Unit_GovernmentID,\n\t\tUnit_NickName=Unit_NickName,\n\t\tCustomer_BillingReference=Customer_BillingReference,\n\t\tUnit_DownInd=Unit_DownInd,\n\t\tUnit_RegisteredNo=Unit_RegisteredNo,\n\t\tUnit_MfgYear=Unit_MfgYear,\n\t\tUnit_WarrantyStartDate=Unit_WarrantyStartDate,\n\t\tUnit_WarrantyEndDate=Unit_WarrantyEndDate,\n\t\tUnit_InstallDate=Unit_InstallDate,\n\t\tUnit_HandoverDate=Unit_HandoverDate,\n\t\tAnnualSafetyTest_LastInspectionDate=AnnualSafetyTest_LastInspectionDate,\n\t\tUnit_JobNo=Unit_JobNo,\n\t\tUnit_FactorySerialNo=Unit_FactorySerialNo,\n\t\tUnit_Smart_ViewID=Unit_Smart_ViewID,\n\t\tUnit_Smart_ExternalID=Unit_Smart_ExternalID,\n\t\tUnit_Smart_InstallationDate=Unit_Smart_InstallationDate,\n\t\tUnit_SmartMAX_ViewID=Unit_SmartMAX_ViewID,\n\t\tUnit_SmartMAX_ExternalID=Unit_SmartMAX_ExternalID,\n\t\tBank=@({ ElevatorBank_ViewID}=ElevatorBank_ViewID,\n\t\tElevatorBank_ExternalID=ElevatorBank_ExternalID,\n\t\tElevatorBank_BankName=ElevatorBank_BankName,\n\t\tElevatorBank_AccessCode=ElevatorBank_AccessCode),\n\t\tBUILDING=@(Building_ViewID=Building_ViewID,\n\t\tBuilding_ExternalID=Building_ExternalID,\n\t\tBuilding_BuildingNo=Building_BuildingNo,\n\t\tName_en=Name_en,\n\t\tName_local=Name_local)),\n\t\tEQUIPMENT = @(Floors=Floors,\n\t\tNumberofFrontOpenings=NumberofFrontOpenings,\n\t\tNumberofRearOpenings=EQUIPMENT@NumberofRearOpenings,\n\t\tUnit_CapacityLbs=EQUIPMENT@Unit_CapacityLbs,\n\t\t{EQUIPMENT Type}=@(EquipmentType_ViewID=EquipmentType_ViewID,\n\t\tEquipmentType_ExternalID=EquipmentType_ExternalID,\n\t\tEquipmentType_Okeefe_EquipName=EquipmentType_Okeefe_EquipName,\n\t\tEquipmentType_TKE_EquipClassification=EquipmentType_TKE_EquipClassification,\n\t\tNumberofRearOpenings=EQUIPMENT@NumberofRearOpenings,\n\t\tUnit_CapacityLbs=EQUIPMENT@Unit_CapacityLbs,\n\t\tEquipmentType_TKE_EquipName=EquipmentType_TKE_EquipName),\n\t\tManufacturer=@(Manufacturer_VIEWId=Manufacturer_VIEWId,\n\t\tManufacturer_ExternalID=Manufacturer_ExternalID,\n\t\tManufacturer_Name1=Manufacturer_Name1,\n\t\tManufacturer_Name2=Manufacturer_Name2,\n\t\tAfterHoursCallbackRun_ExternalID=AfterHoursCallbackRun_ExternalID),\n\t\tController=@(Controller_Name1=Controller_Name1),\n\t\tSpeed=@(Speed_ViewID=Speed_ViewID,\n\t\tSpeed_FPM=Speed_FPM),\n\t\tDriveType=@(DriveType_ViewID=DriveType_ViewID,\n\t\tDriveType_ExternalID=DriveType_ExternalID,\n\t\tDriveType_Name1=DriveType_Name1,\n\t\tDriveType_Name2=DriveType_Name2)),\n\t\tmaintenance = @(MaintenanceRun_RouteNo_TerritoryCode=MaintenanceRun_RouteNo_TerritoryCode)) ~> DerivedColumn1\nDerivedColumn1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['unit'],\n\ttruncate: true,\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		}
	]
}