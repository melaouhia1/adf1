{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "mohamedAD1"
		},
		"Trigger_s88_properties_CopyPipeline_s88_parameters_windowStart": {
			"type": "string",
			"defaultValue": "@{addhours(trigger().scheduledTime, -24)}"
		},
		"Trigger_s88_properties_CopyPipeline_s88_parameters_windowEnd": {
			"type": "string",
			"defaultValue": "@trigger().scheduledTime"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/dataflow7')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlbuilding",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "BuildingName_en",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\tOperator as string,\n\t\tETL_Load_Date_Time as timestamp,\n\t\tFunctions as string,\n\t\tExternalBuildingId as string,\n\t\tBuilding_BuildingName_local as string,\n\t\tBuilding_BuildingName_en as string,\n\t\tBuilding_Height as string,\n\t\tBuilding_StreetAddress_En as string,\n\t\tBuilding_StreetAddress_Local as string,\n\t\tBuilding_Suburb_En as string,\n\t\tBuilding_Suburb_Local as string,\n\t\tBuilding_City_En as string,\n\t\tBuilding_City_Local as string,\n\t\tBuilding_Postcode as string,\n\t\tBuilding_MainTypeViewId as string,\n\t\tBuilding_MainTypeName_En as string,\n\t\tBuilding_MainTypeName_Local as string,\n\t\tBuilding_SubTypeViewId as string,\n\t\tBuilding_SubTypeName_En as string,\n\t\tBuilding_SubTypeName_Local as string,\n\t\tBuilding_BuildingNo as string,\n\t\tBuilding_IsStandbybuilding as string,\n\t\tBuilding_CostingNo as string,\n\t\tBuilding_CustomerNo as string,\n\t\tBuilding_SumOfTotalUnits as string,\n\t\tBuilding_SumOfUnitsInService as string,\n\t\tBuilding_QuickTurnover as string,\n\t\tBuilding_Latitude as string,\n\t\tBuilding_Longitude as string,\n\t\tBuilding_OfficeViewId as string,\n\t\tBuilding_OfficeName_En as string,\n\t\tBuilding_OfficeName_Local as string,\n\t\tBuilding_TKManagerEmployeeViewId as string,\n\t\tBuilding_TKManagerEmployeeExternalId as string,\n\t\tBuilding_TKManagerName as string,\n\t\tBuilding_IsRepairCorres as string,\n\t\tBuilding_IsCalendar as string,\n\t\tBuilding_IsGeneralCorres as string,\n\t\tBuilding_IsCard as string,\n\t\tBuilding_IsMonthlyReport as string,\n\t\tBuilding_UnitsScheduleHours as string,\n\t\tBuilding_UnitsScheduleHoursViewId as string,\n\t\tBuilding_UnitsScheduleTime as string,\n\t\tBuilding_UnitsScheduleTimeViewId as string,\n\t\tBuilding_UnitsScheduleDay as string,\n\t\tBuilding_UnitsScheduleDayViewId as string,\n\t\tBuilding_UnitsScheduleDayFrequency as string,\n\t\tBuilding_TargetCallRate as string,\n\t\tArray_RunInfo as string,\n\t\tRunInfo_RunTypeViewId as string,\n\t\tRunInfo_RunTypeName as string,\n\t\tRunInfo_RunViewId as string,\n\t\tRunInfo_RunName as string,\n\t\tRunInfo_BHSWPResponse as string,\n\t\tRunInfo_BHStopResponse as string,\n\t\tRunInfo_BHOthersResponse as string,\n\t\tRunInfo_AHSWPResponse as string,\n\t\tRunInfo_AHStopResponse as string,\n\t\tRunInfo_AHOthersResponse as string,\n\t\tRunInfo_Notes as string,\n\t\tRunInfo_PropertyManagerEmployeeViewId as string,\n\t\tRunInfo_PropertyManagerEmployeeName as string,\n\t\tArray_BusinessHourContactInfo as string,\n\t\tBusinessHourContactInfo_BHSiteContact as string,\n\t\tBusinessHourContactInfo_BHContactLocation_En as string,\n\t\tBusinessHourContactInfo_BHContactLocation_Local as string,\n\t\tBusinessHourContactInfo_BHContactPhone1 as string,\n\t\tBusinessHourContactInfo_BHContactPhone2 as string,\n\t\tBusinessHourContactInfo_BHContactMobile as string,\n\t\tBusinessHourContactInfo_BHContactFax as string,\n\t\tBusinessHourContactInfo_BHContactRoleViewId as string,\n\t\tBusinessHourContactInfo_BHContactRoleName as string,\n\t\tArray_AfterHourContactInfo as string,\n\t\tAfterHourContactInfo_AHSiteContact as string,\n\t\tAfterHourContactInfo_AHContactLocation_En as string,\n\t\tAfterHourContactInfo_AHContactLocation_Local as string,\n\t\tAfterHourContactInfo_AHContactPhone1 as string,\n\t\tAfterHourContactInfo_AHContactMobile as string,\n\t\tAfterHourContactInfo_AHContactFax as string,\n\t\tAfterHourContactInfo_AHContactRoleViewId as string,\n\t\tAfterHourContactInfo_AHContactRoleViewName as string,\n\t\tAfterHourContactInfo_AHContactAccessCode as string,\n\t\tArray_BuildingContactInfo as string,\n\t\tBuildingContactInfo_ContactViewId as string,\n\t\tBuildingContactInfo_ContactExternalId as string,\n\t\tBuildingContactInfo_ContactName as string,\n\t\tBuildingContactInfo_IsBusinessHours as string,\n\t\tBuilding_VFMCustomerName_En as string,\n\t\tBuilding_VFMCustomerName_Local as string,\n\t\tBuilding_VFMCustomerMail as string,\n\t\tBuilding_VFMMailTemplateSubject as string,\n\t\tBuilding_VFMMailTemplateContent as string,\n\t\tBuilding_IsCustomisedMail as string,\n\t\tBuilding_ReportFrequencyViewId as string,\n\t\tBuilding_ReportFrequency as string,\n\t\tBuilding_ReportTypeViewId as string,\n\t\tBuilding_ReportType as string,\n\t\tBuilding_IsReportInvoice as string,\n\t\tBuilding_ReportSendTo as string,\n\t\tBuilding_ReportAuditRequired as string,\n\t\tBuilding_ReportAuditDetail as string,\n\t\tBuilding_ReportServiceDockets as string,\n\t\tBuilding_FromProjectId as string,\n\t\tBuilding_FromProjectLabel as string,\n\t\tArray_BuildingCustomerInfo as string,\n\t\tBuildingCustomerInfo_CustomerViewId as string,\n\t\tBuildingCustomerInfo_CustomerExternalId as string,\n\t\tBuildingCustomerInfo_CustomerName as string,\n\t\tArray_State as string,\n\t\tState_ViewId as string,\n\t\tState_Name as string,\n\t\tBuiliding_TimeZone as string,\n\t\tBuiliding_CustomerCode as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: ' SELECT\\n                      \\'add\\'                                                                              AS Operator\\n\t\t\t\t\t  ,SYSDATETIME()                                                                     as ETL_Load_Date_Time\\n                    ,\\'building\\'                                                                          as Functions\\n\t\t\t\t\t,[Building_ExternalBuildingId]                                                   as ExternalBuildingId\\n                   \\n      ,[Building_BuildingName_local]\\n      ,[Building_BuildingName_en]\\n      ,[Building_Height]\\n      ,[Building_StreetAddress_En]\\n      ,[Building_StreetAddress_Local]\\n      ,[Building_Suburb_En]\\n      ,[Building_Suburb_Local]\\n      ,[Building_City_En]\\n      ,[Building_City_Local]\\n      ,[Building_Postcode]\\n      ,[Building_MainTypeViewId]\\n      ,[Building_MainTypeName_En]\\n      ,[Building_MainTypeName_Local]\\n      ,[Building_SubTypeViewId]\\n      ,[Building_SubTypeName_En]\\n      ,[Building_SubTypeName_Local]\\n      ,[Building_BuildingNo]\\n      ,[Building_IsStandbybuilding]\\n      ,[Building_CostingNo]\\n      ,[Building_CustomerNo]\\n      ,[Building_SumOfTotalUnits]\\n      ,[Building_SumOfUnitsInService]\\n      ,[Building_QuickTurnover]\\n      ,[Building_Latitude]\\n      ,[Building_Longitude]\\n      ,[Building_OfficeViewId]\\n      ,[Building_OfficeName_En]\\n      ,[Building_OfficeName_Local]\\n      ,[Building_TKManagerEmployeeViewId]\\n      ,[Building_TKManagerEmployeeExternalId]\\n      ,[Building_TKManagerName]\\n      ,[Building_IsRepairCorres]\\n      ,[Building_IsCalendar]\\n      ,[Building_IsGeneralCorres]\\n      ,[Building_IsCard]\\n      ,[Building_IsMonthlyReport]\\n      ,[Building_UnitsScheduleHours]\\n      ,[Building_UnitsScheduleHoursViewId]\\n      ,[Building_UnitsScheduleTime]\\n      ,[Building_UnitsScheduleTimeViewId]\\n      ,[Building_UnitsScheduleDay]\\n      ,[Building_UnitsScheduleDayViewId]\\n      ,[Building_UnitsScheduleDayFrequency]\\n      ,[Building_TargetCallRate]\\n      ,[Array_RunInfo]\\n      ,[RunInfo_RunTypeViewId]\\n      ,[RunInfo_RunTypeName]\\n      ,[RunInfo_RunViewId]\\n      ,[RunInfo_RunName]\\n      ,[RunInfo_BHSWPResponse]\\n      ,[RunInfo_BHStopResponse]\\n      ,[RunInfo_BHOthersResponse]\\n      ,[RunInfo_AHSWPResponse]\\n      ,[RunInfo_AHStopResponse]\\n      ,[RunInfo_AHOthersResponse]\\n      ,[RunInfo_Notes]\\n      ,[RunInfo_PropertyManagerEmployeeViewId]\\n      ,[RunInfo_PropertyManagerEmployeeName]\\n      ,[Array_BusinessHourContactInfo]\\n      ,[BusinessHourContactInfo_BHSiteContact]\\n      ,[BusinessHourContactInfo_BHContactLocation_En]\\n      ,[BusinessHourContactInfo_BHContactLocation_Local]\\n      ,[BusinessHourContactInfo_BHContactPhone1]\\n      ,[BusinessHourContactInfo_BHContactPhone2]\\n      ,[BusinessHourContactInfo_BHContactMobile]\\n      ,[BusinessHourContactInfo_BHContactFax]\\n      ,[BusinessHourContactInfo_BHContactRoleViewId]\\n      ,[BusinessHourContactInfo_BHContactRoleName]\\n      ,[Array_AfterHourContactInfo]\\n      ,[AfterHourContactInfo_AHSiteContact]\\n      ,[AfterHourContactInfo_AHContactLocation_En]\\n      ,[AfterHourContactInfo_AHContactLocation_Local]\\n      ,[AfterHourContactInfo_AHContactPhone1]\\n      ,[AfterHourContactInfo_AHContactMobile]\\n      ,[AfterHourContactInfo_AHContactFax]\\n      ,[AfterHourContactInfo_AHContactRoleViewId]\\n      ,[AfterHourContactInfo_AHContactRoleViewName]\\n      ,[AfterHourContactInfo_AHContactAccessCode]\\n      ,[Array_BuildingContactInfo]\\n      ,[BuildingContactInfo_ContactViewId]\\n      ,[BuildingContactInfo_ContactExternalId]\\n      ,[BuildingContactInfo_ContactName]\\n      ,[BuildingContactInfo_IsBusinessHours]\\n      ,[Building_VFMCustomerName_En]\\n      ,[Building_VFMCustomerName_Local]\\n      ,[Building_VFMCustomerMail]\\n      ,[Building_VFMMailTemplateSubject]\\n      ,[Building_VFMMailTemplateContent]\\n      ,[Building_IsCustomisedMail]\\n      ,[Building_ReportFrequencyViewId]\\n      ,[Building_ReportFrequency]\\n      ,[Building_ReportTypeViewId]\\n      ,[Building_ReportType]\\n      ,[Building_IsReportInvoice]\\n      ,[Building_ReportSendTo]\\n      ,[Building_ReportAuditRequired]\\n      ,[Building_ReportAuditDetail]\\n      ,[Building_ReportServiceDockets]\\n      ,[Building_FromProjectId]\\n      ,[Building_FromProjectLabel]\\n      ,[Array_BuildingCustomerInfo]\\n      ,[BuildingCustomerInfo_CustomerViewId]\\n      ,[BuildingCustomerInfo_CustomerExternalId]\\n      ,[BuildingCustomerInfo_CustomerName]\\n      ,[Array_State]\\n      ,[State_ViewId]\\n      ,[State_Name]\\n      ,[Builiding_TimeZone]\\n      ,[Builiding_CustomerCode]\\n\t\t\t\t\t\\n\t\t\t\t\tFROM [customer].[Building]   ',\n\tformat: 'query') ~> source1\nsource1 derive(Function = Functions,\n\t\tSendTimestamp = ETL_Load_Date_Time,\n\t\tOperator = Operator,\n\t\tdata = @(ViewBuildingId=ExternalBuildingId,\n\t\tExternalBuildingId=ExternalBuildingId,\n\t\tBuildingName_local=Building_BuildingName_local,\n\t\tBuildingName_en=Building_BuildingName_en,\n\t\tHeight=Building_Height,\n\t\tstreetAddress=Building_StreetAddress_En,\n\t\tSuburb=Building_Suburb_En,\n\t\tCity=Building_City_En,\n\t\tPostcode=Building_Postcode,\n\t\tBuilding_MainTypeViewId=Building_MainTypeViewId,\n\t\tMainTypeName_En=Building_MainTypeName_En,\n\t\tMainTypeName_Local=Building_MainTypeName_Local,\n\t\tSubTypeViewId=Building_SubTypeViewId,\n\t\tSubTypeName_En=Building_SubTypeName_En,\n\t\tSubTypeName_Local=Building_SubTypeName_Local,\n\t\tBuildingNo=Building_BuildingNo,\n\t\tIsStandbybuilding=Building_IsStandbybuilding,\n\t\tCostingNo=Building_CostingNo,\n\t\tCustomerNo=Building_CustomerNo,\n\t\tSumOfTotalUnits=Building_SumOfTotalUnits,\n\t\tSumOfUnitsInService=Building_SumOfUnitsInService,\n\t\tQuickTurnover=Building_QuickTurnover,\n\t\tLatitude=Building_Latitude,\n\t\tLongitude=Building_Longitude,\n\t\tOfficeViewId=Building_OfficeViewId,\n\t\tOfficeName_En=Building_OfficeName_En,\n\t\tOfficeName_Local=Building_OfficeName_Local,\n\t\tTKManagerEmployeeViewId=Building_TKManagerEmployeeViewId,\n\t\tTKManagerEmployeeExternalId=Building_TKManagerEmployeeExternalId,\n\t\tTKManagerName=Building_TKManagerName,\n\t\tIsRepairCorres=Building_IsRepairCorres,\n\t\tIsCalendar=Building_IsCalendar,\n\t\tIsGeneralCorres=Building_IsGeneralCorres,\n\t\tIsCard=Building_IsCard,\n\t\tIsMonthlyReport=Building_IsMonthlyReport,\n\t\tUnitsScheduleHours=Building_UnitsScheduleHours,\n\t\tUnitsScheduleHoursViewId=Building_UnitsScheduleHoursViewId,\n\t\tUnitsScheduleDay=Building_UnitsScheduleDay,\n\t\tUnitsScheduleDayViewId=Building_UnitsScheduleDayViewId,\n\t\tUnitsScheduleDayFrequency=Building_UnitsScheduleDayFrequency,\n\t\tTargetCallRate=Building_TargetCallRate,\n\t\tRunInfo=@(RunTypeViewId=RunInfo_RunTypeViewId,\n\t\tRunTypeName=RunInfo_RunTypeName,\n\t\tRunViewId=RunInfo_RunViewId),\n\t\tBHSWPResponse=RunInfo_BHSWPResponse,\n\t\tBHStopResponse=RunInfo_BHStopResponse,\n\t\tBHOthersResponse=RunInfo_BHOthersResponse,\n\t\tAHSWPResponse=RunInfo_AHSWPResponse,\n\t\tAHStopResponse=RunInfo_AHStopResponse,\n\t\tAHOthersResponse=RunInfo_AHOthersResponse,\n\t\tNotes=RunInfo_Notes,\n\t\tPropertyManagerEmployeeViewId=RunInfo_PropertyManagerEmployeeViewId,\n\t\tPropertyManagerEmployeeName=RunInfo_PropertyManagerEmployeeName,\n\t\tBusinessHourContactInfo=@(BHSiteContact=BusinessHourContactInfo_BHSiteContact,\n\t\tBHContactLocation=BusinessHourContactInfo_BHContactLocation_En,\n\t\tBHContactPhone1=BusinessHourContactInfo_BHContactPhone1,\n\t\tBHContactPhone2=BusinessHourContactInfo_BHContactPhone2,\n\t\tBHContactMobile=BusinessHourContactInfo_BHContactMobile,\n\t\tBHContactFax=BusinessHourContactInfo_BHContactFax,\n\t\tBHContactRoleViewId=BusinessHourContactInfo_BHContactRoleViewId,\n\t\tBHContactRoleName=BusinessHourContactInfo_BHContactRoleName),\n\t\tAfterHourContactInfo=@(AHSiteContact=AfterHourContactInfo_AHSiteContact,\n\t\tAHContactLocation=AfterHourContactInfo_AHContactLocation_En,\n\t\tAHContactPhone1=AfterHourContactInfo_AHContactPhone1,\n\t\tAHContactMobile=AfterHourContactInfo_AHContactMobile,\n\t\tAHContactFax=AfterHourContactInfo_AHContactFax,\n\t\tAHContactRoleViewId=AfterHourContactInfo_AHContactRoleViewId,\n\t\tAHContactRoleName=AfterHourContactInfo_AHContactRoleViewName,\n\t\tAHContactAccessCode=AfterHourContactInfo_AHContactAccessCode),\n\t\tBuildingContactInfo=@(ContactViewId=BuildingContactInfo_ContactViewId,\n\t\tContactExternalId=BuildingContactInfo_ContactExternalId,\n\t\tContactName=BuildingContactInfo_ContactName,\n\t\tIsBusinessHours=BuildingContactInfo_IsBusinessHours),\n\t\tVFMCustomerName_En=Building_VFMCustomerName_En,\n\t\tVFMCustomerName_Local=Building_VFMCustomerName_Local,\n\t\tVFMCustomerMail=Building_VFMCustomerMail,\n\t\tVFMMailTemplateSubject=Building_VFMMailTemplateSubject,\n\t\tVFMMailTemplateContent=Building_VFMMailTemplateContent,\n\t\tIsCustomisedMail=Building_IsCustomisedMail,\n\t\tReportFrequencyViewId=Building_ReportFrequencyViewId,\n\t\tReportFrequency=Building_ReportFrequency,\n\t\tReportTypeViewId=Building_ReportTypeViewId,\n\t\tReportType=Building_ReportType,\n\t\tIsReportInvoice=Building_IsReportInvoice,\n\t\tReportSendTo=Building_ReportSendTo,\n\t\tReportAuditRequired=Building_ReportAuditRequired,\n\t\tReportAuditDetail=Building_ReportAuditDetail,\n\t\tReportServiceDockets=Building_ReportServiceDockets,\n\t\tFromProjectId=Building_FromProjectId,\n\t\tFromProjectLabel=Building_FromProjectLabel,\n\t\tBuildingCustomerInfo=@(CustomerViewId=BuildingCustomerInfo_CustomerViewId,\n\t\tCustomerExternalId=BuildingCustomerInfo_CustomerExternalId,\n\t\tCustomerName=BuildingCustomerInfo_CustomerName),\n\t\tState=@(ViewId=State_ViewId,\n\t\tName=State_Name),\n\t\tTimeZone=currentDate(),\n\t\tCustomerCode=Builiding_CustomerCode)) ~> DerivedColumn1\nDerivedColumn1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Buildingjson')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"unit1": {},
									"Identification1": {},
									"Bank": {},
									"BUILDING": {},
									"EQUIPMENT": {},
									"EQUIPMENTType": {},
									"Manufacturer": {},
									"Controller": {},
									"speed": {},
									"DriveType": {},
									"office": {},
									"maintenance": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "Building"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_b21')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_b21",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.DimAccount"
							},
							{
								"name": "Destination",
								"value": "dbo.DimAccount"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ParentAccountKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ParentAccountKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AccountCodeAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "AccountCodeAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ParentAccountCodeAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ParentAccountCodeAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AccountDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AccountDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AccountType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Operator",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Operator",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CustomMembers",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CustomMembers",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ValueType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ValueType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CustomMemberOptions",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CustomMemberOptions",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_b21",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_b21",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbTest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow4",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow4",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"unit": {},
									"EQUIPMENT": {},
									"EQUIPMENTType": {},
									"Manufacturer": {},
									"Controller": {},
									"speed": {},
									"DriveType": {},
									"Identification": {},
									"bUILDING": {},
									"BANK": {},
									"maintenance": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "AzureTocosmosDB"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-29T14:42:52Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DBtoCosmosunit')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"unit1": {},
									"Identification1": {},
									"Bank": {},
									"BUILDING": {},
									"EQUIPMENT": {},
									"EQUIPMENTType": {},
									"Manufacturer": {},
									"Controller": {},
									"speed": {},
									"DriveType": {},
									"office": {},
									"maintenance": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "AzureTocosmosDB"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-29T14:42:48Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ELT_Inventory')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "am_da_pl_CD_02_inventory_Project",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Pipeline2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Pipeline1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "idlinventory",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Pipeline3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Pipeline2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "delimiter",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"folder": {
					"name": "inventory"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/P_SQL_to_ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get-Tables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQLDB_PIPEINE_PARAMETER",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get-Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get-Tables').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SqlServerTable2",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "dsADLS2",
											"type": "DatasetReference",
											"parameters": {
												"table_name": "@{item().Table_Name}",
												"table_catalog_name": "@{item().Table_Catalog}"
											}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "Training"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/incrementalload')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "lookupOldWaterMark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT waterMarkVal\nFROM [dbo].[WaterMark]\nWHERE tableName = '@{pipeline().parameters.finalTableName}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlWatermark",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "lookupNewWaterMark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(@{pipeline().parameters.waterMarkCol}) AS NewwaterMarkVal\nFROM @{pipeline().parameters.srcTableName}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerStudent",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CopytoStaging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "lookupOldWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "lookupNewWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "select * from @{pipeline().parameters.srcTableName}\nwhere @{pipeline().parameters.waterMarkCol} > \n'@{activity('lookupOldWaterMark').output.firstRow.waterMarkVal}' \nand @{pipeline().parameters.waterMarkCol} <= \n'@{activity('lookupNewWaterMark').output.firstRow.NewwaterMarkVal}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "--pre copy script for sink\nTRUNCATE TABLE @{pipeline().parameters.stgTableName}",
									"type": "Expression"
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerStudent",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlstgstdent",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "usp_upsert_Student",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopytoStaging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_upsert_Student]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "usp_write_watermark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "usp_upsert_Student",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_write_watermark]",
							"storedProcedureParameters": {
								"LastModifiedtime": {
									"value": {
										"value": "@activity('lookupNewWaterMark').output.firstRow.NewwaterMarkVal",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": {
										"value": "@{pipeline().parameters.finalTableName}",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase2",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"finalTableName": {
						"type": "string",
						"defaultValue": "Student"
					},
					"srcTableName": {
						"type": "string",
						"defaultValue": "Student"
					},
					"waterMarkCol": {
						"type": "string",
						"defaultValue": "updateDate"
					},
					"stgTableName": {
						"type": "string",
						"defaultValue": "stgStudent"
					},
					"storedProcUpsert": {
						"type": "string",
						"defaultValue": "usp_upsert_Student"
					},
					"storedProcWaterMark": {
						"type": "string",
						"defaultValue": "usp_update_WaterMark"
					}
				},
				"folder": {
					"name": "Training"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"unit1": {},
									"Identification1": {},
									"Bank": {},
									"BUILDING": {},
									"EQUIPMENT": {},
									"EQUIPMENTType": {},
									"Manufacturer": {},
									"Controller": {},
									"speed": {},
									"DriveType": {},
									"office": {},
									"maintenance": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "AzureTocosmosDB"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-29T14:42:48Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "AzureTocosmosDB"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-29T14:42:45Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT \nQUOTENAME(table_Schema) + '.' + QUOTENAME(TABLE_NAME) AS Table_Name, TABLE_CATALOG\n   FROM information_Schema.tables\n   WHERE TABLE_TYPE = 'BASE TABLE'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Table_Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Table_Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TABLE_CATALOG",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "TABLE_CATALOG",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASQLDB_PIPEINE_PARAMETER",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Training"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_s88')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CopyPipeline_s88",
							"type": "PipelineReference"
						},
						"parameters": {
							"windowStart": {
								"type": "Expression",
								"value": "[parameters('Trigger_s88_properties_CopyPipeline_s88_parameters_windowStart')]"
							},
							"windowEnd": {
								"type": "Expression",
								"value": "[parameters('Trigger_s88_properties_CopyPipeline_s88_parameters_windowEnd')]"
							}
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 24,
						"startTime": "2020-12-31T23:57:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		}
	]
}