{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "mohamedAD1"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CustomerBillToContactsiidl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "/****** Script for SelectTopNRows command from SSMS  ******/\nSELECT  \n      [ï»¿Customer_Header_Reference] as [Customer Header Reference]\n      ,[Address_Reference]\n      --,[Phone_Country_Code]\n      --,[Phone_Extension]\n      ,[Contact_Reference]\n      ,[Contact_Point Reference]\n      ,[Contact_First_Name]\n      ,[Contact_Last_Name]\n      ,[Contact Point_Type]\n      ,[Area_Code]\n      ,[Telephone_Number]\n\t  ,CASE COALESCE([Phone_Extension],'')  when ''  then '' else [Phone_Extension] end as [Phone_Extension]\n      ,[EMAIL_Address]\n      ,[Invoice_Delivery_Method]\n       ,[Operating_Unit_Name]\n  FROM [customer].[CustomerBillToContacts]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Customer Header Reference",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 1
										}
									},
									{
										"source": {
											"name": "Address_Reference",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 2
										}
									},
									{
										"source": {
											"name": "Contact_Reference",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 3
										}
									},
									{
										"source": {
											"name": "Contact_Point Reference",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 4
										}
									},
									{
										"source": {
											"name": "Contact_First_Name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 5
										}
									},
									{
										"source": {
											"name": "Contact_Last_Name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 6
										}
									},
									{
										"source": {
											"name": "Contact Point_Type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 7
										}
									},
									{
										"source": {
											"name": "Area_Code",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 8
										}
									},
									{
										"source": {
											"name": "Telephone_Number",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 9
										}
									},
									{
										"source": {
											"name": "Phone_Extension",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 10
										}
									},
									{
										"source": {
											"name": "EMAIL_Address",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 11
										}
									},
									{
										"source": {
											"name": "Invoice_Delivery_Method",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 12
										}
									},
									{
										"source": {
											"name": "Operating_Unit_Name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 13
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlCustomerBillToContactsidl",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "CustomerBillToContactscsv",
								"type": "DatasetReference"
							}
						]
					}
				],
				"folder": {
					"name": "Output"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlCustomerBillToContactsidl')]",
				"[concat(variables('factoryId'), '/datasets/CustomerBillToContactscsv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerContactPointsidl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "/****** Script for SelectTopNRows command from SSMS  ******/\nSELECT  \n      [ï»¿Customer_Header_Reference] as [Customer Header Reference]\n      ,[Address_Reference]\n      ,[Contact_Point_Type]\n      ,[Contact_Point_Status]\n      ,[Primary_Flag]\n      ,[Contact_Point_Purpose]\n      ,[Phone_Country_Code]\n      ,[Phone_Area_Code]\n      ,[Phone_Number]\n        ,CASE COALESCE([Phone_Extension],'')  when ''  then '' else [Phone_Extension] end as [Phone_Extension]\n      ,[Phone_Line_Type]\n      ,[Email_Address]\n      ,[Email_Format]\n\t , [Operating_Unit_Name]\n  FROM [customer].[CustomerContactPoints]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Customer Header Reference",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Customer Header Reference",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Address_Reference",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Address_Reference",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Contact_Point_Type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Contact_Point_Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Contact_Point_Status",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Contact_Point_Status",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Primary_Flag",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Primary_Flag",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Contact_Point_Purpose",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Contact_Point_Purpose",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Phone_Country_Code",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Phone_Country_Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Phone_Area_Code",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Phone_Area_Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Phone_Number",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Phone_Number",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Phone_Extension",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Phone_Extension",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Phone_Line_Type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Phone_Line_Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Email_Address",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Email_Address",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Email_Format",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Email_Format",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Operating_Unit_Name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Operating_Unit_Name",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CustomerContactPointsidl",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText5",
								"type": "DatasetReference"
							}
						]
					}
				],
				"folder": {
					"name": "Output"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CustomerContactPointsidl')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText5')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlCustomerBillToContactsidl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerBillToContactscsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ABLBMohamedBlob2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "customerbilltocontacts"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerContactPointscsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ABLBMohamedBlob2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "customercontactpoints"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerContactPointscsvot')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ABLBMohamedBlob2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "customercontactpoints"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerContactPointsidl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ABLBMohamedBlob2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "customercontactpoints"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": []
		}
	]
}