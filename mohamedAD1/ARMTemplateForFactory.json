{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "mohamedAD1"
		},
		"ABLBMohamedBlob2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ABLBMohamedBlob2'"
		},
		"ADLS2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLS2'"
		},
		"ADLSMohamed_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLSMohamed'"
		},
		"AdventureWorksDW2019_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AdventureWorksDW2019'"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureBlobStorage2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage2'"
		},
		"AzureBlobStorage3_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage3'"
		},
		"AzureBlobTraining_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobTraining'"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureDataLakeStorage2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage2'"
		},
		"AzureDataLakeStorage3_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage3'"
		},
		"AzureDataLakeStorage4_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage4'"
		},
		"AzureDataLakeStorage5_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage5'"
		},
		"AzureDataLakeStorage6_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage6'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"AzureSqlDatabase2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase2'"
		},
		"AzureSqlDatabase3_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase3'"
		},
		"AzureSqlDatabase4_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase4'"
		},
		"AzureSqlDatabase5_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase5'"
		},
		"CosmosDb2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CosmosDb2'"
		},
		"CosmosDb3_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CosmosDb3'"
		},
		"HttpServer1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'HttpServer1'"
		},
		"SqlServer1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServer1'"
		},
		"SqlServer2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServer2'"
		},
		"SqlServerTestStudent_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServerTestStudent'"
		},
		"buildingstorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'buildingstorage'"
		},
		"dsadve2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'dsadve2'"
		},
		"linkedService1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'linkedService1'"
		},
		"linkedService2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'linkedService2'"
		},
		"ADLS2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://mohamedstorage.dfs.core.windows.net"
		},
		"ADLSMohamed_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://mohamedstoragelake.dfs.core.windows.net"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://mohamedstorage.dfs.core.windows.net"
		},
		"AzureDataLakeStorage2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://mohamedstorage.dfs.core.windows.net"
		},
		"AzureDataLakeStorage3_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://mohamedstoragelake.dfs.core.windows.net"
		},
		"AzureDataLakeStorage4_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://mohamedstorage.dfs.core.windows.net"
		},
		"AzureDataLakeStorage5_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://mohamedstoragelake.dfs.core.windows.net"
		},
		"AzureDataLakeStorage6_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://mohamedstoragelake.dfs.core.windows.net"
		},
		"AzureKeyVault1Mohamed_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://mohamed.vault.azure.net/"
		},
		"HttpServer1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": " https://www.websitename.org/api"
		},
		"HttpServer1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "mohamed"
		},
		"dsadve2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://mohamedstoragelake.dfs.core.windows.net"
		},
		"Trigger_s88_properties_CopyPipeline_s88_parameters_windowStart": {
			"type": "string",
			"defaultValue": "@{addhours(trigger().scheduledTime, -24)}"
		},
		"Trigger_s88_properties_CopyPipeline_s88_parameters_windowEnd": {
			"type": "string",
			"defaultValue": "@trigger().scheduledTime"
		},
		"integrationRuntime3_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint": {
			"type": "string",
			"defaultValue": "mohamedserversql.database.windows.net"
		},
		"integrationRuntime3_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName": {
			"type": "string",
			"defaultValue": "mohamed"
		},
		"integrationRuntime3_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword": {
			"type": "secureString"
		},
		"integrationRuntime4_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint": {
			"type": "string",
			"defaultValue": "mohamed2.database.windows.net"
		},
		"integrationRuntime4_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName": {
			"type": "string",
			"defaultValue": "mohamed"
		},
		"integrationRuntime4_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword": {
			"type": "secureString"
		},
		"integrationRuntime7_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint": {
			"type": "string",
			"defaultValue": "mohamed2.database.windows.net"
		},
		"integrationRuntime7_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName": {
			"type": "string",
			"defaultValue": "mohamed"
		},
		"integrationRuntime7_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword": {
			"type": "secureString"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Addressidl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "/****** Script for SelectTopNRows command from SSMS  ******/\nSELECT \n      [Customer Name]\n\t   ,[Customer Header Reference]\n      ,[Address Reference]\n      ,[Site Use Code]\n      ,[Primary Site Use Flag]\n      ,[ Location]\n      ,[Bill To Orig Address Reference]\n      ,'' as [Address Line 1]\n      ,'' as[Address Line 2]\n      ,'' as [Address Line 3]\n      ,'' as [Address Line 4]\n      ,'' as [Address Lines Phonetic]\n      ,[City]\n      ,[Province]\n      ,[State]\n      ,[County]\n      ,[Postal Code]\n      ,[Country]\n      ,'100020.11111100.0000.00.00.000000.000000.000000.000000.901745' as [Receivables Account]\n      ,'XXXXXX.11111100.0000.00.00.000000.000000.000000.000000. 901745' as [Revenue Account]\n      ,'100020.11111100.0000.00.00.000000.000000.000000.000000. 901745' as [Tax Account]\n      ,'100020.11111100.0000.00.00.000000.000000.000000.000000. 901745' as [Freight Account]\n      ,'100020.11111100.0000.00.00.000000.000000.000000.000000. 901745' as [Clearing Account]\n      ,'100020.11111100.0000.00.00.000000.000000.000000.000000. 901745' as [Unbilled Receivables Account]\n      ,'XXXXXX.11111100.0000.00.00.000000.000000.000000.000000. 901745' as [Unearned Revenue Account]\n      ,[Payment Method Name]\n      ,[Payment Method Primary Flag]\n      ,[Customer Profile]\n      ,[Site Use Tax Reference]\n      ,[Time Zone]\n      ,[Language]\n      ,[Contributor Class at Account Site]\n      ,[Use Cust Site Profile Flag at Account Site]\n      ,[Contributor Class at Account Site Use]\n      ,[Use Cust Site Profile Flag at Account Site Use]\n      ,[Economic Activity]\n      ,[Payment Term Name]\n      ,[Concept Code (CR)]\n      ,[Giro (CL)]\n      ,[US Remit-to Address Mapping]\n      ,[US Tax Area Id]\n      ,[Union Local]\n      ,[TAID User Override]\n      ,[TAID Last Checked]\n      ,[TAID Assignment Result]\n      ,[TAID Confidence Indicator]\n      ,[TAID Precision]\n      ,[CRM Account]\n\t   ,[Operating Unit Name]\n     \n  FROM [dbo].[address]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Customer Name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Customer Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Customer Header Reference",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Customer Header Reference",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Address Reference",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Address Reference",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Site Use Code",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Site Use Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Primary Site Use Flag",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Primary Site Use Flag",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": " Location",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": " Location",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Bill To Orig Address Reference",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Bill To Orig Address Reference",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Address Line 1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Address Line 1",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Address Line 2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Address Line 2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Address Line 3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Address Line 3",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Address Line 4",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Address Line 4",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Address Lines Phonetic",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Address Lines Phonetic",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "City",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "City",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Province",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Province",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "County",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "County",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Postal Code",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Postal Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Country",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Country",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Receivables Account",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Receivables Account",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Revenue Account",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Revenue Account",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Tax Account",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tax Account",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Freight Account",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Freight Account",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Clearing Account",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Clearing Account",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Unbilled Receivables Account",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Unbilled Receivables Account",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Unearned Revenue Account",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Unearned Revenue Account",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Payment Method Name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Payment Method Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Payment Method Primary Flag",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Payment Method Primary Flag",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Customer Profile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Customer Profile",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Site Use Tax Reference",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Site Use Tax Reference",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Time Zone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Time Zone",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Language",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Language",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Contributor Class at Account Site",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Contributor Class at Account Site",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Use Cust Site Profile Flag at Account Site",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Use Cust Site Profile Flag at Account Site",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Contributor Class at Account Site Use",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Contributor Class at Account Site Use",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Use Cust Site Profile Flag at Account Site Use",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Use Cust Site Profile Flag at Account Site Use",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Economic Activity",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Economic Activity",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Payment Term Name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Payment Term Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Concept Code (CR)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Concept Code (CR)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Giro (CL)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Giro (CL)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "US Remit-to Address Mapping",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "US Remit-to Address Mapping",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "US Tax Area Id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "US Tax Area Id",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Union Local",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Union Local",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TAID User Override",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TAID User Override",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TAID Last Checked",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TAID Last Checked",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TAID Assignment Result",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TAID Assignment Result",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TAID Confidence Indicator",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TAID Confidence Indicator",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TAID Precision",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TAID Precision",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CRM Account",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CRM Account",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Operating Unit Name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Operating Unit Name",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "am_da_ds_dst_exviewBuildingapi",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Delimitedaddressidl",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Output"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/am_da_ds_dst_exviewBuildingapi')]",
				"[concat(variables('factoryId'), '/datasets/Delimitedaddressidl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Building')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Building_ExternalBuildingId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_ExternalBuildingId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_BuildingName_local",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_BuildingName_local",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_BuildingName_en",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_BuildingName_en",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_Height",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_Height",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_StreetAddress_En",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_StreetAddress_En",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_StreetAddress_Local",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_StreetAddress_Local",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_Suburb_En",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_Suburb_En",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_Suburb_Local",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_Suburb_Local",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_City_En",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_City_En",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_City_Local",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_City_Local",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_Postcode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_Postcode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_MainTypeViewId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_MainTypeViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_MainTypeName_En",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_MainTypeName_En",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_MainTypeName_Local",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_MainTypeName_Local",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_SubTypeViewId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_SubTypeViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_SubTypeName_En",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_SubTypeName_En",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_SubTypeName_Local",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_SubTypeName_Local",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_BuildingNo",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_BuildingNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_IsStandbybuilding",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_IsStandbybuilding",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_CostingNo",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_CostingNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_CustomerNo",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_CustomerNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_SumOfTotalUnits",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_SumOfTotalUnits",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_SumOfUnitsInService",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_SumOfUnitsInService",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_QuickTurnover",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_QuickTurnover",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_Latitude",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_Latitude",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_Longitude",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_Longitude",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_OfficeViewId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_OfficeViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_OfficeName_En",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_OfficeName_En",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_OfficeName_Local",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_OfficeName_Local",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_TKManagerEmployeeViewId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_TKManagerEmployeeViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_TKManagerEmployeeExternalId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_TKManagerEmployeeExternalId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_TKManagerName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_TKManagerName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_IsRepairCorres",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_IsRepairCorres",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_IsCalendar",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_IsCalendar",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_IsGeneralCorres",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_IsGeneralCorres",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_IsCard",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_IsCard",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_IsMonthlyReport",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_IsMonthlyReport",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_UnitsScheduleHours",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_UnitsScheduleHours",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_UnitsScheduleHoursViewId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_UnitsScheduleHoursViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_UnitsScheduleTime",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_UnitsScheduleTime",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_UnitsScheduleTimeViewId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_UnitsScheduleTimeViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_UnitsScheduleDay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_UnitsScheduleDay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_UnitsScheduleDayViewId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_UnitsScheduleDayViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_UnitsScheduleDayFrequency",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_UnitsScheduleDayFrequency",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_TargetCallRate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_TargetCallRate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_RunInfo",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_RunInfo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RunInfo_RunTypeViewId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RunInfo_RunTypeViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RunInfo_RunTypeName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RunInfo_RunTypeName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RunInfo_RunViewId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RunInfo_RunViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RunInfo_RunName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RunInfo_RunName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RunInfo_BHSWPResponse",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RunInfo_BHSWPResponse",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RunInfo_BHStopResponse",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RunInfo_BHStopResponse",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RunInfo_BHOthersResponse",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RunInfo_BHOthersResponse",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RunInfo_AHSWPResponse",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RunInfo_AHSWPResponse",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RunInfo_AHStopResponse",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RunInfo_AHStopResponse",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RunInfo_AHOthersResponse",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RunInfo_AHOthersResponse",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RunInfo_Notes",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RunInfo_Notes",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RunInfo_PropertyManagerEmployeeViewId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RunInfo_PropertyManagerEmployeeViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RunInfo_PropertyManagerEmployeeName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RunInfo_PropertyManagerEmployeeName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_BusinessHourContactInfo",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_BusinessHourContactInfo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BusinessHourContactInfo_BHSiteContact",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BusinessHourContactInfo_BHSiteContact",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BusinessHourContactInfo_BHContactLocation_En",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BusinessHourContactInfo_BHContactLocation_En",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BusinessHourContactInfo_BHContactLocation_Local",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BusinessHourContactInfo_BHContactLocation_Local",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BusinessHourContactInfo_BHContactPhone1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BusinessHourContactInfo_BHContactPhone1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BusinessHourContactInfo_BHContactPhone2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BusinessHourContactInfo_BHContactPhone2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BusinessHourContactInfo_BHContactMobile",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BusinessHourContactInfo_BHContactMobile",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BusinessHourContactInfo_BHContactFax",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BusinessHourContactInfo_BHContactFax",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BusinessHourContactInfo_BHContactRoleViewId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BusinessHourContactInfo_BHContactRoleViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BusinessHourContactInfo_BHContactRoleName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BusinessHourContactInfo_BHContactRoleName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_AfterHourContactInfo",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_AfterHourContactInfo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AfterHourContactInfo_AHSiteContact",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AfterHourContactInfo_AHSiteContact",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AfterHourContactInfo_AHContactLocation_En",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AfterHourContactInfo_AHContactLocation_En",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AfterHourContactInfo_AHContactLocation_Local",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AfterHourContactInfo_AHContactLocation_Local",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AfterHourContactInfo_AHContactPhone1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AfterHourContactInfo_AHContactPhone1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AfterHourContactInfo_AHContactMobile",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AfterHourContactInfo_AHContactMobile",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AfterHourContactInfo_AHContactFax",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AfterHourContactInfo_AHContactFax",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AfterHourContactInfo_AHContactRoleViewId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AfterHourContactInfo_AHContactRoleViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AfterHourContactInfo_AHContactRoleViewName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AfterHourContactInfo_AHContactRoleViewName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AfterHourContactInfo_AHContactAccessCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AfterHourContactInfo_AHContactAccessCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_BuildingContactInfo",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_BuildingContactInfo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BuildingContactInfo_ContactViewId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BuildingContactInfo_ContactViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BuildingContactInfo_ContactExternalId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BuildingContactInfo_ContactExternalId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BuildingContactInfo_ContactName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BuildingContactInfo_ContactName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BuildingContactInfo_IsBusinessHours",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BuildingContactInfo_IsBusinessHours",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_VFMCustomerName_En",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_VFMCustomerName_En",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_VFMCustomerName_Local",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_VFMCustomerName_Local",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_VFMCustomerMail",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_VFMCustomerMail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_VFMMailTemplateSubject",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_VFMMailTemplateSubject",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_VFMMailTemplateContent",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_VFMMailTemplateContent",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_IsCustomisedMail",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_IsCustomisedMail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_ReportFrequencyViewId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_ReportFrequencyViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_ReportFrequency",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_ReportFrequency",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_ReportTypeViewId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_ReportTypeViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_ReportType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_ReportType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_IsReportInvoice",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_IsReportInvoice",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_ReportSendTo",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_ReportSendTo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_ReportAuditRequired",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_ReportAuditRequired",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_ReportAuditDetail",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_ReportAuditDetail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_ReportServiceDockets",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_ReportServiceDockets",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_FromProjectId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_FromProjectId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_FromProjectLabel",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_FromProjectLabel",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_BuildingCustomerInfo",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_BuildingCustomerInfo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BuildingCustomerInfo_CustomerViewId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BuildingCustomerInfo_CustomerViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BuildingCustomerInfo_CustomerExternalId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BuildingCustomerInfo_CustomerExternalId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BuildingCustomerInfo_CustomerName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BuildingCustomerInfo_CustomerName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_State",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_State",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "State_ViewId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "State_ViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "State_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "State_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Builiding_TimeZone",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Builiding_TimeZone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Builiding_CustomerCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Builiding_CustomerCode",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Buildingsql",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "CustomerOKH"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Excel2')]",
				"[concat(variables('factoryId'), '/datasets/Buildingsql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Buildingjson')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"unit1": {},
									"Identification1": {},
									"Bank": {},
									"BUILDING": {},
									"EQUIPMENT": {},
									"EQUIPMENTType": {},
									"Manufacturer": {},
									"Controller": {},
									"speed": {},
									"DriveType": {},
									"office": {},
									"maintenance": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "Building"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_Salesforce_Inbound_withDateFilter')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[ETL].[usp_ADF_Get_ADFControl_NextExtract]",
								"storedProcedureParameters": {
									"CoreFileName": {
										"type": "String",
										"value": "[[building].[Viewbuilding_API_add]"
									},
									"DataSource": {
										"type": "String",
										"value": "Azuremaintenance"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Azuremaintenance",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SetLastExtractStart",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[ETL].[usp_ADF_Set_ADFControl]",
							"storedProcedureParameters": {
								"CoreFileName": {
									"value": "[[building].[Viewbuilding_API_add]",
									"type": "String"
								},
								"DataSource": {
									"value": "Azuremaintenance",
									"type": "String"
								},
								"ExtractDateTime": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"UpdateActionType": {
									"value": "S",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy data1",
						"description": "Pull SFDC AccountPartner to TXT files in Azure Blob Storage",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SetLastExtractStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\n\nSELECT [ETL_Load_Date_Time]  FROM [building].[Viewbuilding_API_add] WHERE SYSDATETIMEOFFSET()>= @{formatDateTime(activity('lookup1').output.firstRow.NextExtractStartDateTime,'yyyy-MM-ddTHH:mm:ssZ')}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "am_da_ds_dst_exviewBuildingapi",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Viewbuilding_API_addtest",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "GetLastExtractStart",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[ETL].[usp_ADF_Get_ADFControl_NextExtract]",
							"storedProcedureParameters": {
								"CoreFileName": {
									"value": "[[building].[Viewbuilding_API_add]",
									"type": "String"
								},
								"DataSource": {
									"value": "sfdv",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"actualRunTime": {
						"type": "string",
						"defaultValue": "2018-02-26 10:09:08"
					}
				},
				"folder": {
					"name": "Training"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Azuremaintenance')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase2')]",
				"[concat(variables('factoryId'), '/datasets/am_da_ds_dst_exviewBuildingapi')]",
				"[concat(variables('factoryId'), '/datasets/Viewbuilding_API_addtest')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_b21')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_b21",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.DimAccount"
							},
							{
								"name": "Destination",
								"value": "dbo.DimAccount"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ParentAccountKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ParentAccountKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AccountCodeAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "AccountCodeAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ParentAccountCodeAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ParentAccountCodeAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AccountDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AccountDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AccountType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Operator",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Operator",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CustomMembers",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CustomMembers",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ValueType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ValueType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CustomMemberOptions",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CustomMemberOptions",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_b21",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_b21",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_b21')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_b21')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_s88')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_s88",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "csvfiles//"
							},
							{
								"name": "Destination",
								"value": "dbo.topmovies"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": {
										"value": "@pipeline().parameters.windowStart",
										"type": "Expression"
									},
									"modifiedDatetimeEnd": {
										"value": "@pipeline().parameters.windowEnd",
										"type": "Expression"
									},
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Index",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Index",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "MovieTitle",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MovieTitle",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_s88",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_s88",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"windowStart": {
						"type": "String"
					},
					"windowEnd": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_s88')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_s88')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbTest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow4",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow4",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"unit": {},
									"EQUIPMENT": {},
									"EQUIPMENTType": {},
									"Manufacturer": {},
									"Controller": {},
									"speed": {},
									"DriveType": {},
									"Identification": {},
									"bUILDING": {},
									"BANK": {},
									"maintenance": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "AzureTocosmosDB"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-29T14:42:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerAddress')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Operating_Unit_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Operating_Unit_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Address_Reference",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Address_Reference",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Customer_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Customer_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Customer_Header_Reference",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Customer_Header_Reference",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Site_Use_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Site_Use_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Primary_Site_Use_Flag",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Primary_Site_Use_Flag",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Location",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Location",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Bill_To_Orig_Address_Reference",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Bill_To_Orig_Address_Reference",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Address_Line_1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Address_Line_1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Address_Line_2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Address_Line_2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Address_Line_3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Address_Line_3",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Address_Line_4",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Address_Line_4",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Address_Lines_Phonetic",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Address_Lines_Phonetic",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "City",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "City",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Province",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Province",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "County",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "County",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Postal_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Postal_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Country",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Country",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Receivables_Account",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Receivables_Account",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Revenue_Account",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Revenue_Account",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Tax_Account",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Tax_Account",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Freight_Account",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Freight_Account",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Clearing_Account",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Clearing_Account",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unbilled_Receivables_Account",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unbilled_Receivables_Account",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unearned_Revenue_Account",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unearned_Revenue_Account",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Payment_Method_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Payment_Method_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Payment_Method_Primary_Flag",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Payment_Method_Primary_Flag",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Customer_Profile",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Customer_Profile",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Site_Use_Tax_Reference",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Site_Use_Tax_Reference",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Time_Zone",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Time_Zone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Language",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Language",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contributor_Class_at_Account_Site",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contributor_Class_at_Account_Site",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Use_Cust_Site_Profile_Flag_at_Account_Site",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Use_Cust_Site_Profile_Flag_at_Account_Site",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contributor_Class_at_Account_Site_Use",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contributor_Class_at_Account_Site_Use",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Use_Cust_Site_Profile_Flag_at_Account_Site_Use",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Use_Cust_Site_Profile_Flag_at_Account_Site_Use",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Economic_Activity",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Economic_Activity",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Payment_Term_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Payment_Term_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Concept_Code_(CR)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Concept_Code_(CR)",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Giro_(CL)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Giro_(CL)",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "US_Remit-to_Address_Mapping",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "US_Remit-to_Address_Mapping",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "US_Tax_Area_Id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "US_Tax_Area_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Union_Local",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Union_Local",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TAID_User_Override",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TAID_User_Override",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TAID_Last_Checked",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TAID_Last_Checked",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TAID_Assignment_Result",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TAID_Assignment_Result",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TAID_Confidence_Indicator",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TAID_Confidence_Indicator",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TAID_Precision",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TAID_Precision",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CRM_Account",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CRM_Account",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ExcelCustomerAddress",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "CustomerOKH"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ExcelCustomerAddress')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerBillToContactsiidl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "/****** Script for SelectTopNRows command from SSMS  ******/\nSELECT  \n      [ï»¿Customer_Header_Reference] as [Customer Header Reference]\n      ,[Address_Reference]\n      --,[Phone_Country_Code]\n      --,[Phone_Extension]\n      ,[Contact_Reference]\n      ,[Contact_Point Reference]\n      ,[Contact_First_Name]\n      ,[Contact_Last_Name]\n      ,[Contact Point_Type]\n      ,[Area_Code]\n      ,[Telephone_Number]\n\t  ,CASE COALESCE([Phone_Extension],'')  when ''  then '' else [Phone_Extension] end as [Phone_Extension]\n      ,[EMAIL_Address]\n      ,[Invoice_Delivery_Method]\n       ,[Operating_Unit_Name]\n  FROM [customer].[CustomerBillToContacts]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Customer Header Reference",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 1
										}
									},
									{
										"source": {
											"name": "Address_Reference",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 2
										}
									},
									{
										"source": {
											"name": "Contact_Reference",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 3
										}
									},
									{
										"source": {
											"name": "Contact_Point Reference",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 4
										}
									},
									{
										"source": {
											"name": "Contact_First_Name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 5
										}
									},
									{
										"source": {
											"name": "Contact_Last_Name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 6
										}
									},
									{
										"source": {
											"name": "Contact Point_Type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 7
										}
									},
									{
										"source": {
											"name": "Area_Code",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 8
										}
									},
									{
										"source": {
											"name": "Telephone_Number",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 9
										}
									},
									{
										"source": {
											"name": "Phone_Extension",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 10
										}
									},
									{
										"source": {
											"name": "EMAIL_Address",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 11
										}
									},
									{
										"source": {
											"name": "Invoice_Delivery_Method",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 12
										}
									},
									{
										"source": {
											"name": "Operating_Unit_Name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 13
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlCustomerBillToContactsidl",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CustomerBillToContactscsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Output"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlCustomerBillToContactsidl')]",
				"[concat(variables('factoryId'), '/datasets/CustomerBillToContactscsv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerContactPoint')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Operating_Unit_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Operating_Unit_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Customer_Header_Reference",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ï»¿Customer_Header_Reference",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Address_Reference",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Address_Reference",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contact_Point_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contact_Point_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contact_Point_Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contact_Point_Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Primary_Flag",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Primary_Flag",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contact_Point_Purpose",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contact_Point_Purpose",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Phone_Country_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Phone_Country_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Phone_Area_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Phone_Area_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Phone_Number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Phone_Number",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Phone_Extension",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Phone_Extension",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Phone_Line_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Phone_Line_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Email_Address",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Email_Address",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Email_Format",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Email_Format",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ExcelCustomerContactPoints",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CustomerContactPointssql",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "CustomerOKH"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ExcelCustomerContactPoints')]",
				"[concat(variables('factoryId'), '/datasets/CustomerContactPointssql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerContactPointsidl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "/****** Script for SelectTopNRows command from SSMS  ******/\nSELECT  \n      [ï»¿Customer_Header_Reference] as [Customer Header Reference]\n      ,[Address_Reference]\n      ,[Contact_Point_Type]\n      ,[Contact_Point_Status]\n      ,[Primary_Flag]\n      ,[Contact_Point_Purpose]\n      ,[Phone_Country_Code]\n      ,[Phone_Area_Code]\n      ,[Phone_Number]\n        ,CASE COALESCE([Phone_Extension],'')  when ''  then '' else [Phone_Extension] end as [Phone_Extension]\n      ,[Phone_Line_Type]\n      ,[Email_Address]\n      ,[Email_Format]\n\t , [Operating_Unit_Name]\n  FROM [customer].[CustomerContactPoints]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Customer Header Reference",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Customer Header Reference",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Address_Reference",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Address_Reference",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Contact_Point_Type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Contact_Point_Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Contact_Point_Status",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Contact_Point_Status",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Primary_Flag",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Primary_Flag",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Contact_Point_Purpose",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Contact_Point_Purpose",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Phone_Country_Code",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Phone_Country_Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Phone_Area_Code",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Phone_Area_Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Phone_Number",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Phone_Number",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Phone_Extension",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Phone_Extension",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Phone_Line_Type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Phone_Line_Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Email_Address",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Email_Address",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Email_Format",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Email_Format",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Operating_Unit_Name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Operating_Unit_Name",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CustomerContactPointsidl",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText5",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Output"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CustomerContactPointsidl')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText5')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerHeader')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Header",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Customer_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Customer_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Customer_Party_Reference_Number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Customer_Party_Reference_Number",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Customer_Account_Reference_Number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Customer_Account_Reference_Number",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Customer_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Customer_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Customer_Profile",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Customer_Profile",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Payment_Method_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Payment_Method_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Payment_Method_Primary_Flag",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Payment_Method_Primary_Flag",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Global_Customer_Flag",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Global_Customer_Flag",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Origin_(AR)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Origin_(AR)",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Primary_ID_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Primary_ID_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Primary_ID_Validation_Digit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Primary_ID_Validation_Digit",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Taxpayer_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Taxpayer_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Fiscal_Classification_Type_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Fiscal_Classification_Type_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Fiscal_Classification_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Fiscal_Classification_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Effective_Date_From",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Effective_Date_From",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Document_Type_(CO)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Document_Type_(CO)",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Taxpayer_ID_(CO)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Taxpayer_ID_(CO)",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Nature_(CO)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Nature_(CO)",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Regimen_(CO)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Regimen_(CO)",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Special_Customer_Flag",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Special_Customer_Flag",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Operating_Unit_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Operating_Unit_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Customer_Class_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Customer_Class_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Payment_Term_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Payment_Term_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Order_Number_of_the_Cedula_(GT)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Order_Number_of_the_Cedula_(GT)",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Register_Number_of_the_Cedula_(GT)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Register_Number_of_the_Cedula_(GT)",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Document_Type_(SV)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Document_Type_(SV)",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contributor_Registry_Number_(SV)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contributor_Registry_Number_(SV)",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Person_Category_(PE)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Person_Category_(PE)",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Person_Type_(PE)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Person_Type_(PE)",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Document_Type_(PE)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Document_Type_(PE)",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Document_Number_(PE)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Document_Number_(PE)",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Last_Name_(PE)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Last_Name_(PE)",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Second_Last_Name_(PE)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Second_Last_Name_(PE)",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "First_Name_(PE)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "First_Name_(PE)",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Middle_Name_(PE)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Middle_Name_(PE)",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Origin",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Origin",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Nature",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Nature",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Document_Type_(UY)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Document_Type_(UY)",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Perception_Agent_(PE)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Perception_Agent_(PE)",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excelheader",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTCustomerHeader",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "customercontactpoint",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Header",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Operating_Unit_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Operating_Unit_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Customer_Header_Reference",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ï»¿Customer_Header_Reference",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Address_Reference",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Address_Reference",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contact_Point_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contact_Point_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contact_Point_Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contact_Point_Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Primary_Flag",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Primary_Flag",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contact_Point_Purpose",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contact_Point_Purpose",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Phone_Country_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Phone_Country_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Phone_Area_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Phone_Area_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Phone_Number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Phone_Number",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Phone_Extension",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Phone_Extension",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Phone_Line_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Phone_Line_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Email_Address",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Email_Address",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Email_Format",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Email_Format",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ExcelCustomerContactPoints",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CustomerContactPointssql",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "customeraddress",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "customercontactpoint",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Operating_Unit_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Operating_Unit_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Address_Reference",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Address_Reference",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Customer_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Customer_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Customer_Header_Reference",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Customer_Header_Reference",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Site_Use_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Site_Use_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Primary_Site_Use_Flag",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Primary_Site_Use_Flag",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Location",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Location",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Bill_To_Orig_Address_Reference",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Bill_To_Orig_Address_Reference",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Address_Line_1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Address_Line_1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Address_Line_2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Address_Line_2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Address_Line_3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Address_Line_3",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Address_Line_4",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Address_Line_4",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Address_Lines_Phonetic",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Address_Lines_Phonetic",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "City",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "City",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Province",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Province",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "County",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "County",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Postal_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Postal_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Country",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Country",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Receivables_Account",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Receivables_Account",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Revenue_Account",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Revenue_Account",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Tax_Account",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Tax_Account",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Freight_Account",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Freight_Account",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Clearing_Account",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Clearing_Account",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unbilled_Receivables_Account",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unbilled_Receivables_Account",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unearned_Revenue_Account",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unearned_Revenue_Account",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Payment_Method_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Payment_Method_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Payment_Method_Primary_Flag",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Payment_Method_Primary_Flag",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Customer_Profile",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Customer_Profile",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Site_Use_Tax_Reference",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Site_Use_Tax_Reference",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Time_Zone",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Time_Zone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Language",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Language",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contributor_Class_at_Account_Site",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contributor_Class_at_Account_Site",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Use_Cust_Site_Profile_Flag_at_Account_Site",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Use_Cust_Site_Profile_Flag_at_Account_Site",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contributor_Class_at_Account_Site_Use",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contributor_Class_at_Account_Site_Use",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Use_Cust_Site_Profile_Flag_at_Account_Site_Use",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Use_Cust_Site_Profile_Flag_at_Account_Site_Use",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Economic_Activity",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Economic_Activity",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Payment_Term_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Payment_Term_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Concept_Code_(CR)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Concept_Code_(CR)",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Giro_(CL)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Giro_(CL)",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "US_Remit-to_Address_Mapping",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "US_Remit-to_Address_Mapping",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "US_Tax_Area_Id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "US_Tax_Area_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Union_Local",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Union_Local",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TAID_User_Override",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TAID_User_Override",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TAID_Last_Checked",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TAID_Last_Checked",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TAID_Assignment_Result",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TAID_Assignment_Result",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TAID_Confidence_Indicator",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TAID_Confidence_Indicator",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TAID_Precision",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TAID_Precision",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CRM_Account",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CRM_Account",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ExcelCustomerAddress",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "customerbilltocontact",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "customeraddress",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Operating_Unit_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Operating_Unit_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Customer_Header_Reference",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ï»¿Customer_Header_Reference",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Address_Reference",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Address_Reference",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Phone_Country_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Phone_Country_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Phone_Extension",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Phone_Extension",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contact_Reference",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contact_Reference",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contact_Point Reference",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contact_Point Reference",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contact_First_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contact_First_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contact_Last_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contact_Last_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contact Point_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contact Point_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Area_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Area_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Telephone_Number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Telephone_Number",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EMAIL_Address",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EMAIL_Address",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Invoice_Delivery_Method",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Invoice_Delivery_Method",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ExcelCustomerBillToContacts",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CustomerBillToContactssql",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "customerdependency",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "customerbilltocontact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[customer].[dependency]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "CustomerOKH"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Excelheader')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTCustomerHeader')]",
				"[concat(variables('factoryId'), '/datasets/ExcelCustomerContactPoints')]",
				"[concat(variables('factoryId'), '/datasets/CustomerContactPointssql')]",
				"[concat(variables('factoryId'), '/datasets/ExcelCustomerAddress')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]",
				"[concat(variables('factoryId'), '/datasets/ExcelCustomerBillToContacts')]",
				"[concat(variables('factoryId'), '/datasets/CustomerBillToContactssql')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DBtoCosmosunit')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"unit1": {},
									"Identification1": {},
									"Bank": {},
									"BUILDING": {},
									"EQUIPMENT": {},
									"EQUIPMENTType": {},
									"Manufacturer": {},
									"Controller": {},
									"speed": {},
									"DriveType": {},
									"office": {},
									"maintenance": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "AzureTocosmosDB"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-29T14:42:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Header_idl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "/****** Script for SelectTopNRows command from SSMS  ******/\nSELECT  [Customer_Name]\n      ,[Customer_Party_Reference_Number]\n      ,[Customer_Account_Reference_Number]\n      ,[Customer_Type]\n      ,[Customer_Profile]\n      ,'' as [Payment_Method_Name]\n      ,'' as [Payment_Method_Primary_Flag]\n      ,[Global_Customer_Flag]\n      ,'' as [Origin_(AR)]\n      ,'' as [Primary_ID_Type]\n      ,'' as [Primary_ID_Validation_Digit]\n      ,'' as [Taxpayer_ID]\n      ,'' as [Fiscal_Classification_Type_Code]\n      ,'' as [Fiscal_Classification_Code]\n      ,'' as [Effective_Date_From]\n      ,'' as [Document_Type_(CO)]\n      ,'' as [Taxpayer_ID_(CO)]\n      , '' as [Nature_(CO)]\n      ,'' as [Regimen_(CO)]\n      ,'' as [Special_Customer_Flag]\n      ,[Operating_Unit_Name]\n      ,'' as [Customer_Class_Code]\n      ,[Payment_Term_Name]\n      ,'' as [Order_Number_of_the_Cedula_(GT)]\n      ,'' as [Register_Number_of_the_Cedula_(GT)]\n      ,'' as [Document_Type_(SV)]\n      ,'' as [Contributor_Registry_Number_(SV)]\n      ,'' as [Person_Category_(PE)]\n      ,'' as [Person_Type_(PE)]\n      ,'' as [Document_Type_(PE)]\n      ,'' as [Document_Number_(PE)]\n      ,'' as [Last_Name_(PE)]\n      ,'' as [Second_Last_Name_(PE)]\n      ,'' as [First_Name_(PE)]\n      ,'' as [Middle_Name_(PE)]\n      ,'' as [Origin]\n      ,'' as [Nature]\n      ,'' as [Document_Type_(UY)]\n      ,'' as [Perception_Agent_(PE)]\n  FROM [customer].[header]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Customer_Name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Customer_Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Customer_Party_Reference_Number",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Customer_Party_Reference_Number",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Customer_Account_Reference_Number",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Customer_Account_Reference_Number",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Customer_Type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Customer_Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Customer_Profile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Customer_Profile",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Payment_Method_Name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Payment_Method_Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Payment_Method_Primary_Flag",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Payment_Method_Primary_Flag",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Global_Customer_Flag",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Global_Customer_Flag",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Origin_(AR)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Origin_(AR)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Primary_ID_Type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Primary_ID_Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Primary_ID_Validation_Digit",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Primary_ID_Validation_Digit",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Taxpayer_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Taxpayer_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Fiscal_Classification_Type_Code",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Fiscal_Classification_Type_Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Fiscal_Classification_Code",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Fiscal_Classification_Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Effective_Date_From",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Effective_Date_From",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Document_Type_(CO)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Document_Type_(CO)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Taxpayer_ID_(CO)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Taxpayer_ID_(CO)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Nature_(CO)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Nature_(CO)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Regimen_(CO)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Regimen_(CO)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Special_Customer_Flag",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Special_Customer_Flag",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Operating_Unit_Name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Operating_Unit_Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Customer_Class_Code",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Customer_Class_Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Payment_Term_Name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Payment_Term_Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Order_Number_of_the_Cedula_(GT)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Order_Number_of_the_Cedula_(GT)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Register_Number_of_the_Cedula_(GT)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Register_Number_of_the_Cedula_(GT)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Document_Type_(SV)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Document_Type_(SV)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Contributor_Registry_Number_(SV)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Contributor_Registry_Number_(SV)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Person_Category_(PE)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Person_Category_(PE)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Person_Type_(PE)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Person_Type_(PE)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Document_Type_(PE)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Document_Type_(PE)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Document_Number_(PE)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Document_Number_(PE)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Last_Name_(PE)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Last_Name_(PE)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Second_Last_Name_(PE)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Second_Last_Name_(PE)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "First_Name_(PE)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "First_Name_(PE)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Middle_Name_(PE)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Middle_Name_(PE)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Origin",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Origin",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Nature",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Nature",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Document_Type_(UY)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Document_Type_(UY)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Perception_Agent_(PE)",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Perception_Agent_(PE)",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText4",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Output"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable3')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Inventory_Transactions_')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ITEM_NUMBER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ITEM_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ORGANIZATION_CODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ORGANIZATION_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SUBINVENTORY_NAME",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SUBINVENTORY_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TRANSACTION_QUANTITY",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TRANSACTION_QUANTITY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TRANSACTION_DATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TRANSACTION_DATE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TRANSACTION_REFERENCE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TRANSACTION_REFERENCE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LOCATOR_NAME",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LOCATOR_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TRANSACTION_COST",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TRANSACTION_COST",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FM_SERIAL_NUMBER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FM_SERIAL_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TO_SERIAL_NUMBER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TO_SERIAL_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Distribution_Account",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Distribution_Account",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ORG_NAME",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ORG_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PE_EXT_ATTRIBUTE1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PE_EXT_ATTRIBUTE1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PE_EXT_ATTRIBUTE2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PE_EXT_ATTRIBUTE2",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Parts_Inventorytransactions",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Azuresqlnventory_transactions",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "ingest/inventory"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Parts_Inventorytransactions')]",
				"[concat(variables('factoryId'), '/datasets/Azuresqlnventory_transactions')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Item_Transactiono')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ITEM_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ITEM_NUMBER",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ORGANIZATION_CODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ORGANIZATION_CODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SUBINVENTORY_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SUBINVENTORY_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LOCATOR_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LOCATOR_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ORG_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ORG_NAME",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlParts_Item_Transaction_Default_Locators",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedItem_Transaction",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "ingest/inventory"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlParts_Item_Transaction_Default_Locators')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedItem_Transaction')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MFG_Part_Number')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "MFG_Part_Number",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlMFG_Part_Number",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "ingest/inventory"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MFG_Part_Number')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlMFG_Part_Number')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/P_SQL_to_ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get-Tables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQLDB_PIPEINE_PARAMETER",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get-Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get-Tables').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SqlServerTable2",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "dsADLS2",
											"type": "DatasetReference",
											"parameters": {
												"table_name": "@{item().Table_Name}",
												"table_catalog_name": "@{item().Table_Catalog}"
											}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "Training"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ASQLDB_PIPEINE_PARAMETER')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerTable2')]",
				"[concat(variables('factoryId'), '/datasets/dsADLS2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parts_Inventory_Transactions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ITEM_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ITEM_NUMBER",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ORGANIZATION_CODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ORGANIZATION_CODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SUBINVENTORY_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SUBINVENTORY_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TRANSACTION_QUANTITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TRANSACTION_QUANTITY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TRANSACTION_DATE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TRANSACTION_DATE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TRANSACTION_REFERENCE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TRANSACTION_REFERENCE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LOCATOR_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LOCATOR_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TRANSACTION_COST",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TRANSACTION_COST",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FM_SERIAL_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FM_SERIAL_NUMBER",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TO_SERIAL_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TO_SERIAL_NUMBER",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Distribution_Account",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Distribution_Account",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ORG_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ORG_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PE_EXT_ATTRIBUTE1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PE_EXT_ATTRIBUTE1",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PE_EXT_ATTRIBUTE2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PE_EXT_ATTRIBUTE2",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Azuresqlnventory_transactions",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedTexParts_Inventory_Transactions",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "ingest/inventory"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Azuresqlnventory_transactions')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedTexParts_Inventory_Transactions')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parts_ItemTransaction_Default_Subinventories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ITEM_NUMBER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ITEM_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ORGANIZATION_CODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ORGANIZATION_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SUBINVENTORY_NAME",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SUBINVENTORY_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ORG_NAME",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ORG_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Parts_Item_Transaction_Default_Subinventories",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlParts_Item_Transaction_Default_Subinventories",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "ingest/inventory"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Parts_Item_Transaction_Default_Subinventories')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlParts_Item_Transaction_Default_Subinventories')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parts_Item_Category_Assignment')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ITEM_NUMBER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ITEM_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CATEGORY_SET_NAME",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CATEGORY_SET_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CONCAT_CATEGORY_NAME",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CONCAT_CATEGORY_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ORANIZATION_CODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ORANIZATION_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ORG_NAME",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ORG_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Parts_Item_Category_Assignment",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlParts_Item_Category_Assignment",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "ingest/inventory"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Parts_Item_Category_Assignment')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlParts_Item_Category_Assignment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parts_Item_Category_Assignmentout')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ITEM_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ITEM_NUMBER",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CATEGORY_SET_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CATEGORY_SET_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CONCAT_CATEGORY_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CONCAT_CATEGORY_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ORANIZATION_CODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ORANIZATION_CODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ORG_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ORG_NAME",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlParts_Item_Category_Assignment",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedTParts_Item_Category_Assignment",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "ingest/inventory"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlParts_Item_Category_Assignment')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedTParts_Item_Category_Assignment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parts_Item_Cross_Reference')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ITEM_NUMBER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ITEM_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CROSS_REFERENCE_TYPE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CROSS_REFERENCE_TYPE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CROSS_REFERENCE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CROSS_REFERENCE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DESCRIPTION",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DESCRIPTION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ORGANIZATION_CODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ORGANIZATION_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ORG_NAME",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ORG_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Parts_Item_Cross_Reference",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlParts_Item_Cross_Reference",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "ingest/inventory"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Parts_Item_Cross_Reference')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlParts_Item_Cross_Reference')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parts_Item_Header')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ITEM_NUMBER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ITEM_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DESCRIPTION",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DESCRIPTION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DESCRIPTION_ESA",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DESCRIPTION_ESA",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ORANIZATION_CODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ORANIZATION_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TEMPLATE_NAME",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TEMPLATE_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LIST_PRICE_PER_UNIT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LIST_PRICE_PER_UNIT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UOM_CODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "UOM_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WEIGHT_UOM_CODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WEIGHT_UOM_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UNIT_WEIGHT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "UNIT_WEIGHT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "VOLUME_UOM_CODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VOLUME_UOM_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UNIT_VOLUME",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "UNIT_VOLUME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MIN_MINMAX_QUANTITY",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MIN_MINMAX_QUANTITY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MAX_MINMAX_QUANTITY",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MAX_MINMAX_QUANTITY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FULL_LEAD_TIME",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FULL_LEAD_TIME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FIXED_LOT_MULTIPLIER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FIXED_LOT_MULTIPLIER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FIXED_ORDER_QUANTITY",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FIXED_ORDER_QUANTITY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MINIMUM_ORDER_QUANTITY",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MINIMUM_ORDER_QUANTITY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MAXIMUM_ORDER_QUANTITY",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MAXIMUM_ORDER_QUANTITY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LONG_DESCRIPTION",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LONG_DESCRIPTION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ITEM_INV_APPLICATION",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ITEM_INV_APPLICATION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TRANSACTION_CONDITION_CODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TRANSACTION_CONDITION_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADJUSTMENT_ACCOUNT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ADJUSTMENT_ACCOUNT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CORRECTION_ACCOUNT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CORRECTION_ACCOUNT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SALES_COST_ACCOUNT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SALES_COST_ACCOUNT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FOUR_DIGIT_CODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FOUR_DIGIT_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ORG_NAME",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ORG_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PE_EXT_ATTRIBUTE1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PE_EXT_ATTRIBUTE1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PE_EXT_ATTRIBUTE2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PE_EXT_ATTRIBUTE2",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Parts_Item_Header",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqParts_Item_Header",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "ingest/inventory"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Parts_Item_Header')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqParts_Item_Header')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parts_Item_Headero')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ITEM_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ITEM_NUMBER",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DESCRIPTION",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DESCRIPTION",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DESCRIPTION_ESA",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DESCRIPTION_ESA",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ORANIZATION_CODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ORANIZATION_CODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TEMPLATE_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TEMPLATE_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LIST_PRICE_PER_UNIT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LIST_PRICE_PER_UNIT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "UOM_CODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UOM_CODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "WEIGHT_UOM_CODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WEIGHT_UOM_CODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "UNIT_WEIGHT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UNIT_WEIGHT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "VOLUME_UOM_CODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "VOLUME_UOM_CODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "UNIT_VOLUME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UNIT_VOLUME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MIN_MINMAX_QUANTITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MIN_MINMAX_QUANTITY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MAX_MINMAX_QUANTITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MAX_MINMAX_QUANTITY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FULL_LEAD_TIME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FULL_LEAD_TIME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FIXED_LOT_MULTIPLIER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FIXED_LOT_MULTIPLIER",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FIXED_ORDER_QUANTITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FIXED_ORDER_QUANTITY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MINIMUM_ORDER_QUANTITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MINIMUM_ORDER_QUANTITY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MAXIMUM_ORDER_QUANTITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MAXIMUM_ORDER_QUANTITY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LONG_DESCRIPTION",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LONG_DESCRIPTION",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ITEM_INV_APPLICATION",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ITEM_INV_APPLICATION",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TRANSACTION_CONDITION_CODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TRANSACTION_CONDITION_CODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ADJUSTMENT_ACCOUNT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADJUSTMENT_ACCOUNT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CORRECTION_ACCOUNT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CORRECTION_ACCOUNT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SALES_COST_ACCOUNT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SALES_COST_ACCOUNT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FOUR_DIGIT_CODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FOUR_DIGIT_CODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ORG_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ORG_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PE_EXT_ATTRIBUTE1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PE_EXT_ATTRIBUTE1",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PE_EXT_ATTRIBUTE2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PE_EXT_ATTRIBUTE2",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqParts_Item_Header",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedParts_Item_Header",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "ingest/inventory"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqParts_Item_Header')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedParts_Item_Header')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parts_Item_Transaction_Default_Subinventor')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ITEM_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ITEM_NUMBER",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ORGANIZATION_CODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ORGANIZATION_CODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SUBINVENTORY_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SUBINVENTORY_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ORG_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ORG_NAME",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlParts_Item_Transaction_Default_Locators",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parts_Item_Transaction_Default_Subinv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "ingest/inventory"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlParts_Item_Transaction_Default_Locators')]",
				"[concat(variables('factoryId'), '/datasets/Parts_Item_Transaction_Default_Subinv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parts_MFG_Part_Number')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "MANUFACTURER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MANUFACTURER",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DESCRIPTION",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DESCRIPTION",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PART_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PART_NUMBER",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ITEM_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ITEM_NUMBER",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ORG_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ORG_NAME",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlMFG_Part_Number",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Delimitedmfg",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "ingest/inventory/transform"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlMFG_Part_Number')]",
				"[concat(variables('factoryId'), '/datasets/Delimitedmfg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/am_da_pl_CD_02_inventory_Project')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata_Transactions",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Excel4",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Filter_transaction",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata_Transactions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata_Transactions').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,variables('Parts_Inventory_Transactions'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Filter_transaction",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@activity('Filter_transaction').output.value[0].name\n\n",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [inventory].[Parts_Inventory_Transactions]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel4",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy file to processed transaction",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@activity('Filter_transaction').output.value[0].name\n",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel4",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText10",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy file to processed transaction",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Excel4",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "ADLS2",
									"type": "LinkedServiceReference"
								},
								"path": "log"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"wildcardFileName": {
									"value": "@{activity('Filter_transaction').output.value[0].name}",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "GetMetadataItem_category_assignment",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ExcelItem_Category_Assignment",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Filter Item_Category_Assignment",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetMetadataItem_category_assignment",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetMetadataItem_category_assignment').output.childItems\n",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,variables('Parts_Item_Category_Assignment'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Filter Item_Category_Assignment",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@activity('Filter Item_Category_Assignment').output.value[0].name",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "  truncate table [inventory].[Parts_Item_Category_Assignment]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ExcelItem_Category_Assignment",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTAzureSqlParts_Item_Category_Assignment",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy file to processed Category_Assignment",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@activity('Filter Item_Category_Assignment').output.value[0].name",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ExcelItem_Category_Assignment",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText10",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete2",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy file to processed Category_Assignment",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ExcelItem_Category_Assignment",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "ADLS2",
									"type": "LinkedServiceReference"
								},
								"path": "log"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"wildcardFileName": " @activity('Filter Item_Category_Assignment').output.value[0].name",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "GetMetadataItem_cCross_Reference",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ExcelCross_Reference",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Filter Cross_Reference",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetMetadataItem_cCross_Reference",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetMetadataItem_cCross_Reference').output.childItems\n",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,variables('Parts_Item_Cross_Reference'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data3",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Filter Cross_Reference",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@activity('Filter Cross_Reference').output.value[0].name",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "  truncate table [inventory].[Parts_Item_Cross_Reference]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ExcelCross_Reference",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlParts_Item_Cross_Reference",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy file to processed Cross_Reference",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@activity('Filter Cross_Reference').output.value[0].name",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Parts_Item_Cross_Reference",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText10",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Get Item_Header",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Item_Header",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Filter Item_Header",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Item_Header",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Item_Header').output.childItems\n",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,variables('Parts_Item_Header'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data3_copy1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Filter Item_Header",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@activity('Filter Item_Header').output.value[0].name",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "  truncate table [inventory].[Parts_Item_Header]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Item_Header",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqParts_Item_Header",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Get ITrans_D_Loc",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Parts_Item_Transaction_Default_Locators",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Filter Item_header2",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get ITrans_D_Loc",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get ITrans_D_Loc').output.childItems\n",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,variables('Parts_Item_Transaction_Default_Locators'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data3_copy1_copy1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Filter Item_header2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@activity('Filter Item_header2').output.value[0].name",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [inventory].[Parts_Item_Transaction_Default_Locators]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Parts_Item_Transaction_Default_Locators",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlParts_Item_Transaction_Default_Locators",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "GetMetadataItem_MFG",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ExcelMFG",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Filter mfg",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetMetadataItem_MFG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetMetadataItem_MFG').output.childItems\n",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,variables('Parts_MFG_Part_Number'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy mfg",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Filter mfg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@activity('Filter mfg').output.value[0].name",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [inventory].[Parts_MFG_Part_Number]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ExcelMFG",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlMFG",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Get_Default_Subinventories",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ExcelDefault_Subinventories",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Filter Subinventories",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get_Default_Subinventories",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get_Default_Subinventories').output.childItems\n",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,variables('Parts_Item_Transaction_Default_Locators_subinventory'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy Subinventories",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Filter Subinventories",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@activity('Filter Subinventories').output.value[0].name",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [inventory].[Parts_Item_Transaction_Default_Subinventories]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ExcelDefault_Subinventories",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlSubinventories",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete2_copy1",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy file to processed Cross_Reference",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Parts_Item_Cross_Reference",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "ADLS2",
									"type": "LinkedServiceReference"
								},
								"path": "log"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": {
									"value": "@{activity('Filter Cross_Reference').output.value[0].name}",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Copy file to processed Cross_Reference_copy1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data3_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@activity('Filter Item_Header').output.value[0].name",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Item_Header",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText10",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete2_copy1_copy1",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy file to processed Cross_Reference_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Parts_Item_Cross_Reference",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "ADLS2",
									"type": "LinkedServiceReference"
								},
								"path": "log"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": {
									"value": "@{activity('Filter Item_Header').output.value[0].name}",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Copy file to processed Cross_Reference_copy1_copy1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data3_copy1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@activity('Filter Item_header2').output.value[0].name",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Parts_Item_Transaction_Default_Locators",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText10",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete2_copy1_copy1_copy1",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy file to processed Cross_Reference_copy1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Parts_Item_Transaction_Default_Locators",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "ADLS2",
									"type": "LinkedServiceReference"
								},
								"path": "log"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": {
									"value": "@{activity('Filter Item_header2').output.value[0].name}",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "mfg",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy mfg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@activity('Filter mfg').output.value[0].name",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ExcelMFG",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText10",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete3",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "mfg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ExcelMFG",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "ADLS2",
									"type": "LinkedServiceReference"
								},
								"path": "log"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"wildcardFileName": {
									"value": "@{activity('Filter mfg').output.value[0].name}",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "mfg_copy1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Subinventories",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@activity('Filter Subinventories').output.value[0].name",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ExcelDefault_Subinventories",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText10",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete3_copy1",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "mfg_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ExcelDefault_Subinventories",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "ADLS2",
									"type": "LinkedServiceReference"
								},
								"path": "log"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"wildcardFileName": {
									"value": "@{activity('Filter Subinventories').output.value[0].name}",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"variables": {
					"Parts_Inventory_Transactions": {
						"type": "String",
						"defaultValue": "Parts_Inventory_Transactions"
					},
					"Parts_Item_Category_Assignment": {
						"type": "String",
						"defaultValue": "Parts_Item_Category_Assignment"
					},
					"Parts_Item_Cross_Reference": {
						"type": "String",
						"defaultValue": "Parts_Item_Cross_Reference"
					},
					"Parts_Item_Header": {
						"type": "String",
						"defaultValue": "Parts_Item_Header"
					},
					"Parts_Item_Transaction_Default_Locators": {
						"type": "String",
						"defaultValue": "Parts_Item_Transaction_Default_Locators"
					},
					"Parts_MFG_Part_Number": {
						"type": "String",
						"defaultValue": "Parts_MFG_Part_Number"
					},
					"Parts_Item_Transaction_Default_Locators_subinventory": {
						"type": "String",
						"defaultValue": "Parts_Item_Transaction_Default_Subinventories"
					},
					"emptyinteger": {
						"type": "String",
						"defaultValue": "\"\""
					}
				},
				"folder": {
					"name": "inventory"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Excel4')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText10')]",
				"[concat(variables('factoryId'), '/datasets/ExcelItem_Category_Assignment')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTAzureSqlParts_Item_Category_Assignment')]",
				"[concat(variables('factoryId'), '/datasets/ExcelCross_Reference')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlParts_Item_Cross_Reference')]",
				"[concat(variables('factoryId'), '/datasets/Parts_Item_Cross_Reference')]",
				"[concat(variables('factoryId'), '/datasets/Item_Header')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqParts_Item_Header')]",
				"[concat(variables('factoryId'), '/datasets/Parts_Item_Transaction_Default_Locators')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlParts_Item_Transaction_Default_Locators')]",
				"[concat(variables('factoryId'), '/datasets/ExcelMFG')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlMFG')]",
				"[concat(variables('factoryId'), '/datasets/ExcelDefault_Subinventories')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlSubinventories')]",
				"[concat(variables('factoryId'), '/linkedServices/ADLS2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/building1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "metaGetExcell",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "building3",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "Filterxlsx",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "metaGetExcell",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('metaGetExcell').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,variables('buildingv'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy file to proceed",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Filterxlsx",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"throwExceptionWhenNavigateEmptyFolder": false,
									"recursive": true,
									"wildcardFolderPath": "Source",
									"wildcardFileName": {
										"value": "@activity('Filterxlsx').output.value[0].name",
										"type": "Expression"
									}
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "  truncate table [customer].[Building]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "building3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlbuilding",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "usp_viewBuilding_api_add",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[building].[usp_viewBuilding_api_add]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy file to proceed",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [customer].[Building1] ",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ExternalBuildingId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ExternalBuildingId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BuildingName_local",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BuildingName_local",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "StreetAddress_Local",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "StreetAddress_Local",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "City_Local",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "City_Local",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Postcode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Postcode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MainTypeViewId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MainTypeViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MainTypeName_En",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MainTypeName_En",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SubTypeViewId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SubTypeViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SubTypeName_En",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SubTypeName_En",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BuildingNo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BuildingNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CustomerNo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CustomerNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SumOfTotalUnits",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SumOfTotalUnits",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SumOfUnitsInService",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SumOfUnitsInService",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OfficeViewId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OfficeViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OfficeName_En",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OfficeName_En",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UnitsScheduleHours",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UnitsScheduleHours",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UnitsScheduleHoursViewId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UnitsScheduleHoursViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UnitsScheduleTime",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UnitsScheduleTime",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UnitsScheduleTimeViewId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UnitsScheduleTimeViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TargetCallRate",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TargetCallRate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RunInfo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RunInfo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RunTypeViewId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RunTypeViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RunTypeName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RunTypeName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RunViewId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RunViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RunName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RunName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BHSWPResponse",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BHSWPResponse",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BHStopResponse",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BHStopResponse",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BHOthersResponse",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BHOthersResponse",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AHSWPResponse",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AHSWPResponse",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AHStopResponse",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AHStopResponse",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AHOthersResponse",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AHOthersResponse",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Notes",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Notes",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BusinessHourContactInfo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BusinessHourContactInfo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BHSiteContact",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BHSiteContact",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BHContactPhone1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BHContactPhone1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BHContactMobile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BHContactMobile",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BHContactRoleViewId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BHContactRoleViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BHContactRoleName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BHContactRoleName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AfterHourContactInfo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AfterHourContactInfo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AHSiteContact",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AHSiteContact",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AHContactPhone1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AHContactPhone1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AHContactMobile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AHContactMobile",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AHContactRoleViewId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AHContactRoleViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AHContactRoleViewName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AHContactRoleViewName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ViewId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ViewId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TimeZone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TimeZone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CustomerCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CustomerCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastModifytime",
											"physicalType": "timestamp"
										},
										"sink": {
											"name": "LastModifytime",
											"physicalType": "timestamp"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlbuilding",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "customerBuilding1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"variables": {
					"buildingv": {
						"type": "String",
						"defaultValue": "View_Building"
					}
				},
				"folder": {
					"name": "ingest"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/building3')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlbuilding')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]",
				"[concat(variables('factoryId'), '/datasets/customerBuilding1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/building_output')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from  [building].[Viewbuilding_API_add]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [building].[am_da_ds_dst_exviewBuildingapi]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CustomerCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CustomerCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Data",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Data",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HashKey",
											"type": "Byte[]",
											"physicalType": "varbinary"
										},
										"sink": {
											"name": "HashKey",
											"type": "Byte[]",
											"physicalType": "varbinary"
										}
									},
									{
										"source": {
											"name": "ETL_Load_Date_Time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ETL_Load_Date_Time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Azuremaintenance",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "am_da_ds_dst_exviewBuildingapi",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Output"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Azuremaintenance')]",
				"[concat(variables('factoryId'), '/datasets/am_da_ds_dst_exviewBuildingapi')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/buildingjson2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[customer].[BuildingToJson]",
								"storedProcedureParameters": {
									"result": {
										"type": "String",
										"value": null
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "BuildingToJson",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Jsonbuilding",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Building"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/BuildingToJson')]",
				"[concat(variables('factoryId'), '/datasets/Jsonbuilding')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/customerbilltocontact')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Operating_Unit_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Operating_Unit_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Customer_Header_Reference",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ï»¿Customer_Header_Reference",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Address_Reference",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Address_Reference",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Phone_Country_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Phone_Country_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Phone_Extension",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Phone_Extension",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contact_Reference",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contact_Reference",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contact_Point Reference",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contact_Point Reference",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contact_First_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contact_First_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contact_Last_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contact_Last_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contact Point_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contact Point_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Area_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Area_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Telephone_Number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Telephone_Number",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EMAIL_Address",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EMAIL_Address",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Invoice_Delivery_Method",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Invoice_Delivery_Method",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ExcelCustomerBillToContacts",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CustomerBillToContactssql",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "CustomerOKH"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ExcelCustomerBillToContacts')]",
				"[concat(variables('factoryId'), '/datasets/CustomerBillToContactssql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/customerheader1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "metaGetExcell",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Excelheader",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							}
						}
					}
				],
				"folder": {
					"name": "ingest"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Excelheader')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetMetadataItem_category_assignment",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ExcelItem_Category_Assignment",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Filter Item_Category_Assignment",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetMetadataItem_category_assignment",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetMetadataItem_category_assignment').output.childItems\n",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,variables('Parts_Item_Category_Assignment'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Filter Item_Category_Assignment",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@activity('Filter Item_Category_Assignment').output.value[0].name",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "  truncate table [inventory].[Parts_Item_Category_Assignment]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ExcelItem_Category_Assignment",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTAzureSqlParts_Item_Category_Assignment",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy file to processed Category_Assignment",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@activity('Filter Item_Category_Assignment').output.value[0].name",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ExcelItem_Category_Assignment",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Category_Assignmentarchive",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete2",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy file to processed Category_Assignment",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Category_Assignmentarchive",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "ADLS2",
									"type": "LinkedServiceReference"
								},
								"path": "log"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"wildcardFileName": " @activity('Filter Item_Category_Assignment').output.value[0].name",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"variables": {
					"Parts_Item_Category_Assignment": {
						"type": "String",
						"defaultValue": "Parts_Item_Category_Assignment"
					}
				},
				"folder": {
					"name": "inventory"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ExcelItem_Category_Assignment')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTAzureSqlParts_Item_Category_Assignment')]",
				"[concat(variables('factoryId'), '/datasets/Category_Assignmentarchive')]",
				"[concat(variables('factoryId'), '/linkedServices/ADLS2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "MANUFACTURER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MANUFACTURER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DESCRIPTION",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DESCRIPTION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PART_NUMBER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PART_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ITEM_NUMBER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ITEM_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ORG_NAME",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ORG_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable4",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "ingest/inventory"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Excel3')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/flattenedbuildingtocsv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[flattened building]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CustomerCode",
											"type": "String"
										},
										"sink": {
											"name": "CustomerCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "HashKey",
											"type": "Byte[]"
										},
										"sink": {
											"name": "HashKey",
											"type": "Byte[]"
										}
									},
									{
										"source": {
											"name": "ETL_Load_Date_Time",
											"type": "DateTime"
										},
										"sink": {
											"name": "ETL_Load_Date_Time",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "type",
											"type": "String"
										},
										"sink": {
											"name": "type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ExternalBuildingId",
											"type": "String"
										},
										"sink": {
											"name": "ExternalBuildingId",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BuildingName_local",
											"type": "String"
										},
										"sink": {
											"name": "BuildingName_local",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "StreetAddress_Local",
											"type": "String"
										},
										"sink": {
											"name": "StreetAddress_Local",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "City_Local",
											"type": "String"
										},
										"sink": {
											"name": "City_Local",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Postcode",
											"type": "String"
										},
										"sink": {
											"name": "Postcode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MainTypeViewId",
											"type": "String"
										},
										"sink": {
											"name": "MainTypeViewId",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MainTypeName_En",
											"type": "String"
										},
										"sink": {
											"name": "MainTypeName_En",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SubTypeViewId",
											"type": "String"
										},
										"sink": {
											"name": "SubTypeViewId",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SubTypeName_En",
											"type": "String"
										},
										"sink": {
											"name": "SubTypeName_En",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BuildingNo",
											"type": "String"
										},
										"sink": {
											"name": "BuildingNo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CustomerNo",
											"type": "String"
										},
										"sink": {
											"name": "CustomerNo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SumOfTotalUnits",
											"type": "String"
										},
										"sink": {
											"name": "SumOfTotalUnits",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SumOfUnitsInService",
											"type": "String"
										},
										"sink": {
											"name": "SumOfUnitsInService",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TargetCallRate",
											"type": "String"
										},
										"sink": {
											"name": "TargetCallRate",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Notes",
											"type": "String"
										},
										"sink": {
											"name": "Notes",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BHContactPhone1",
											"type": "String"
										},
										"sink": {
											"name": "BHContactPhone1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String"
										},
										"sink": {
											"name": "State",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TimeZone",
											"type": "String"
										},
										"sink": {
											"name": "TimeZone",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "flattenedbuilding",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedTextflattenedbuilding",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Output"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/flattenedbuilding')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedTextflattenedbuilding')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/idl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Inventory_Transactions",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT  [ITEM_NUMBER]\n      ,[ORGANIZATION_CODE]\n      ,[SUBINVENTORY_NAME]\n      ,[TRANSACTION_QUANTITY]\n      ,[TRANSACTION_DATE]\n      ,[TRANSACTION_REFERENCE]\n      ,[LOCATOR_NAME]\n      ,[TRANSACTION_COST]\n      ,[FM_SERIAL_NUMBER]\n      ,[TO_SERIAL_NUMBER]\n      ,[Distribution_Account]\n      ,[ORG_NAME]\n      ,[PE_EXT_ATTRIBUTE1]\n      ,[PE_EXT_ATTRIBUTE2]\n  FROM [inventory].[Parts_Inventory_Transactions]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Buildingsql",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dtInventory_Transactions",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Item_Category_Assignment",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [ITEM_NUMBER]\n      ,[CATEGORY_SET_NAME]\n      ,[CONCAT_CATEGORY_NAME]\n      ,[ORANIZATION_CODE]\n      ,[ORG_NAME]\n  FROM [inventory].[Parts_Item_Category_Assignment]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlParts_Item_Category_Assignment",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dtCategory_Assignment",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Cross_Reference",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT  [ITEM_NUMBER]\n      ,[CROSS_REFERENCE_TYPE]\n      ,[CROSS_REFERENCE]\n      ,[DESCRIPTION]\n      ,[ORGANIZATION_CODE]\n      ,[ORG_NAME]\n  FROM [inventory].[Parts_Item_Cross_Reference]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Azuremaintenance",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dtCross_Reference",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Item_Header",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "/****** Script for SelectTopNRows command from SSMS  ******/\nSELECT  [ITEM_NUMBER]\n      ,[DESCRIPTION]\n      ,[DESCRIPTION_ESA]\n      ,[ORANIZATION_CODE]\n      ,[TEMPLATE_NAME]\n      ,[LIST_PRICE_PER_UNIT]\n      ,[UOM_CODE]\n      ,[WEIGHT_UOM_CODE]\n      ,[UNIT_WEIGHT]\n      ,[VOLUME_UOM_CODE]\n      ,[UNIT_VOLUME]\n      ,[MIN_MINMAX_QUANTITY]\n      ,[MAX_MINMAX_QUANTITY]\n      ,[FULL_LEAD_TIME]\n      ,[FIXED_LOT_MULTIPLIER]\n      ,[FIXED_ORDER_QUANTITY]\n      ,[MINIMUM_ORDER_QUANTITY]\n      ,[MAXIMUM_ORDER_QUANTITY]\n      ,[LONG_DESCRIPTION]\n      ,[ITEM_INV_APPLICATION]\n      ,[TRANSACTION_CONDITION_CODE]\n      ,[ADJUSTMENT_ACCOUNT]\n      ,[CORRECTION_ACCOUNT]\n      ,[SALES_COST_ACCOUNT]\n      ,[FOUR_DIGIT_CODE]\n      ,[ORG_NAME]\n      ,[PE_EXT_ATTRIBUTE1]\n      ,[PE_EXT_ATTRIBUTE2]\n  FROM [inventory].[Parts_Item_Header]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "am_da_ds_dst_exviewBuildingapi",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dtItem_Header",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Transaction_Default_Locators",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT  [ITEM_NUMBER]\n      ,[ORGANIZATION_CODE]\n      ,[SUBINVENTORY_NAME]\n      ,[LOCATOR_NAME]\n      ,[ORG_NAME]\n  FROM [inventory].[Parts_Item_Transaction_Default_Locators]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlParts_Item_Transaction_Default_Locators",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dtTransaction_Default_Locators",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "MFG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT  [MANUFACTURER]\n      ,[DESCRIPTION]\n      ,[PART_NUMBER]\n      ,[ITEM_NUMBER]\n      ,[ORG_NAME]\n  FROM [inventory].[Parts_MFG_Part_Number]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlMFG",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dtmfg",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Transaction_Default_Subinventories",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [ITEM_NUMBER]\n      ,[ORGANIZATION_CODE]\n      ,[SUBINVENTORY_NAME]\n      ,[ORG_NAME]\n  FROM [inventory].[Parts_Item_Transaction_Default_Subinventories]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "am_da_ds_dst_exviewBuildingapi",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dtDefault_Subinventories",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Output/inventory"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Buildingsql')]",
				"[concat(variables('factoryId'), '/datasets/dtInventory_Transactions')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlParts_Item_Category_Assignment')]",
				"[concat(variables('factoryId'), '/datasets/dtCategory_Assignment')]",
				"[concat(variables('factoryId'), '/datasets/Azuremaintenance')]",
				"[concat(variables('factoryId'), '/datasets/dtCross_Reference')]",
				"[concat(variables('factoryId'), '/datasets/am_da_ds_dst_exviewBuildingapi')]",
				"[concat(variables('factoryId'), '/datasets/dtItem_Header')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlParts_Item_Transaction_Default_Locators')]",
				"[concat(variables('factoryId'), '/datasets/dtTransaction_Default_Locators')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlMFG')]",
				"[concat(variables('factoryId'), '/datasets/dtmfg')]",
				"[concat(variables('factoryId'), '/datasets/dtDefault_Subinventories')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/incrementalload')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "lookupOldWaterMark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT waterMarkVal\nFROM [dbo].[WaterMark]\nWHERE tableName = '@{pipeline().parameters.finalTableName}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlWatermark",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "lookupNewWaterMark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(@{pipeline().parameters.waterMarkCol}) AS NewwaterMarkVal\nFROM @{pipeline().parameters.srcTableName}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerStudent",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CopytoStaging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "lookupOldWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "lookupNewWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "select * from @{pipeline().parameters.srcTableName}\nwhere @{pipeline().parameters.waterMarkCol} > \n'@{activity('lookupOldWaterMark').output.firstRow.waterMarkVal}' \nand @{pipeline().parameters.waterMarkCol} <= \n'@{activity('lookupNewWaterMark').output.firstRow.NewwaterMarkVal}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "--pre copy script for sink\nTRUNCATE TABLE @{pipeline().parameters.stgTableName}",
									"type": "Expression"
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerStudent",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlstgstdent",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "usp_upsert_Student",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopytoStaging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_upsert_Student]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "usp_write_watermark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "usp_upsert_Student",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_write_watermark]",
							"storedProcedureParameters": {
								"LastModifiedtime": {
									"value": {
										"value": "@activity('lookupNewWaterMark').output.firstRow.NewwaterMarkVal",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": {
										"value": "@{pipeline().parameters.finalTableName}",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase2",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"finalTableName": {
						"type": "string",
						"defaultValue": "Student"
					},
					"srcTableName": {
						"type": "string",
						"defaultValue": "Student"
					},
					"waterMarkCol": {
						"type": "string",
						"defaultValue": "updateDate"
					},
					"stgTableName": {
						"type": "string",
						"defaultValue": "stgStudent"
					},
					"storedProcUpsert": {
						"type": "string",
						"defaultValue": "usp_upsert_Student"
					},
					"storedProcWaterMark": {
						"type": "string",
						"defaultValue": "usp_update_WaterMark"
					}
				},
				"folder": {
					"name": "Training"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlWatermark')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerStudent')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlstgstdent')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"unit1": {},
									"Identification1": {},
									"Bank": {},
									"BUILDING": {},
									"EQUIPMENT": {},
									"EQUIPMENTType": {},
									"Manufacturer": {},
									"Controller": {},
									"speed": {},
									"DriveType": {},
									"office": {},
									"maintenance": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "AzureTocosmosDB"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-29T14:42:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "AzureTocosmosDB"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-29T14:42:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT \nQUOTENAME(table_Schema) + '.' + QUOTENAME(TABLE_NAME) AS Table_Name, TABLE_CATALOG\n   FROM information_Schema.tables\n   WHERE TABLE_TYPE = 'BASE TABLE'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Table_Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Table_Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TABLE_CATALOG",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "TABLE_CATALOG",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASQLDB_PIPEINE_PARAMETER",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Training"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable2')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASQLDB_PIPEINE_PARAMETER')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline8')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetMetadataItem_category_assignment",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ExcelItem_Category_Assignment",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Filter Item_Category_Assignment",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetMetadataItem_category_assignment",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetMetadataItem_category_assignment').output.childItems\n",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,variables('Parts_Item_Category_Assignment'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Filter Item_Category_Assignment",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@activity('Filter Item_Category_Assignment').output.value[0].name",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "  truncate table [inventory].[Parts_Item_Category_Assignment]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ExcelItem_Category_Assignment",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTAzureSqlParts_Item_Category_Assignment",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy file to processed Category_Assignment",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "\n@activity('Filter Item_Category_Assignment').output.value[0].name",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ExcelItem_Category_Assignment",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText10",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete2",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy file to processed Category_Assignment",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ExcelItem_Category_Assignment",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "ADLS2",
									"type": "LinkedServiceReference"
								},
								"path": "log"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"wildcardFileName": " @activity('Filter Item_Category_Assignment').output.value[0].name",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"variables": {
					"Parts_Item_Category_Assignment": {
						"type": "String",
						"defaultValue": "Parts_Item_Category_Assignment"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ExcelItem_Category_Assignment')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTAzureSqlParts_Item_Category_Assignment')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText10')]",
				"[concat(variables('factoryId'), '/linkedServices/ADLS2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineunit')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Unit_ViewID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit_ViewID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unit_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_UnitAttributes",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_UnitAttributes",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_EquipmentIdentification",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_EquipmentIdentification",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_Building",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_Building",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_ViewID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_ViewID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_ExternalID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_ExternalID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_BuildingNo",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_BuildingNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Building_Name2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Building_Name2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MarketSegment",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MarketSegment",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Service_Address1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Service_Address1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Service_Address2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Service_Address2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Service_City",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Service_City",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Service_State",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Service_State",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ServiceLocation_Zip",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ServiceLocation_Zip",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_ElevatorBank",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_ElevatorBank",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ElevatorBank_ViewID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ElevatorBank_ViewID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ElevatorBank_ExternalID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ElevatorBank_ExternalID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ElevatorBank_BankName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ElevatorBank_BankName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ElevatorBank_AccessCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ElevatorBank_AccessCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_Branch",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_Branch",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Branch_ViewID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Branch_ViewID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BranchName1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BranchName1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BranchName2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BranchName2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unit_GovernmentID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit_GovernmentID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unit_NickName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit_NickName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Customer_BillingReference",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Customer_BillingReference",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unit_DownInd",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit_DownInd",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unit_RegisteredNo",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit_RegisteredNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unit_MfgYear",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit_MfgYear",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_Equipment",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_Equipment",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_EquipmentType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_EquipmentType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EquipmentType_Okeefe_EquipName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EquipmentType_Okeefe_EquipName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EquipmentType_TKE_EquipName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EquipmentType_TKE_EquipName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EquipmentType_TKE_EquipClassification",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EquipmentType_TKE_EquipClassification",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_Manufacturer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_Manufacturer",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Manufacturer_VIEWId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Manufacturer_VIEWId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Manufacturer_ExternalID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Manufacturer_ExternalID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Manufacturer_Name1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Manufacturer_Name1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Manufacturer_Name2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Manufacturer_Name2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_Controller1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_Controller1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Controller_Name1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Controller_Name1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_DriveType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_DriveType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DriveType_Name1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DriveType_Name1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "NumberofFloors",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NumberofFloors",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "NumberofFrontOpenings",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NumberofFrontOpenings",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_Maintenance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_Maintenance",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_MaintenanceRun",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_MaintenanceRun",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MaintenanceRun_ViewID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MaintenanceRun_ViewID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MaintenanceRun_ExternalID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MaintenanceRun_ExternalID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MaintenanceRun_RouteNo_TerritoryCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MaintenanceRun_RouteNo_TerritoryCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_DefaultScheduling",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_DefaultScheduling",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_HoursPerVisit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_HoursPerVisit",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HoursPerVisit_ViewID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HoursPerVisit_ViewID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HoursPerVisit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HoursPerVisit",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "VisitsPerYear",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VisitsPerYear",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SLA_AnnualVisitsRequired",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLA_AnnualVisitsRequired",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SLA_VisitsRequired",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLA_VisitsRequired",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SLA_HoursRequiredPerVisit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLA_HoursRequiredPerVisit",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SLA_HoursRequired",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLA_HoursRequired",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SLA_Comments",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLA_Comments",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TechnicianNotes",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TechnicianNotes",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unit_WarrantyStartDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit_WarrantyStartDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unit_WarrantyEndDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit_WarrantyEndDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unit_InstallDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit_InstallDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unit_HandoverDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit_HandoverDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AnnualSafetyTest_LastInspectionDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AnnualSafetyTest_LastInspectionDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AnnualSafetyTest_NextInspectionDueDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AnnualSafetyTest_NextInspectionDueDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AnnualSafetyTest_CoveredInContract",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AnnualSafetyTest_CoveredInContract",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PeriodicSafetyTest_LastInspectionDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PeriodicSafetyTest_LastInspectionDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PeriodicSafetyTest_Frequency",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PeriodicSafetyTest_Frequency",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PeriodicSafetyTest_NextInspectionDueDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PeriodicSafetyTest_NextInspectionDueDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PeriodicSafetyTest_CoveredInContract",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PeriodicSafetyTest_CoveredInContract",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FiremansRecall_LastInspectionDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FiremansRecall_LastInspectionDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FiremansRecall_ Frequency",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FiremansRecall_ Frequency",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unit_JobNo",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit_JobNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unit_FactorySerialNo",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit_FactorySerialNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unit_Smart_ExternalID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit_Smart_ExternalID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unit_Smart_InstallationDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit_Smart_InstallationDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_Contract",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_Contract",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contract_ViewID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contract_ViewID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contract_ExternalID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contract_ExternalID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contract_StartDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contract_StartDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contract_EndDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contract_EndDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contract_MoValue",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contract_MoValue",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ContractNo",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ContractNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ContractCoverage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ContractCoverage",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "NumberofRearOpenings",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NumberofRearOpenings",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Unit_CapacityLbs",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit_CapacityLbs",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_Speed",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_Speed",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Speed_ViewID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Speed_ViewID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Speed_FPM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Speed_FPM",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_FrontDoorComplexity",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_FrontDoorComplexity",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FrontDoorComplexity_ViewID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FrontDoorComplexity_ViewID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FrontDoorComplexity_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FrontDoorComplexity_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Array_RearDoorComplexity",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Array_RearDoorComplexity",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RearDoorComplexity_ViewID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RearDoorComplexity_ViewID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RearDoorComplexity_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RearDoorComplexity_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FullRawDataExtract20201005",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "stgunit",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-10-07T23:18:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/FullRawDataExtract20201005')]",
				"[concat(variables('factoryId'), '/datasets/stgunit')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ssis')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute SSIS package1",
						"type": "ExecuteSSISPackage",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"packageLocation": {
								"packagePath": "test/testp/Package1.dtsx",
								"type": "SSISDB"
							},
							"environmentPath": null,
							"connectVia": {
								"referenceName": "integrationRuntime3",
								"type": "IntegrationRuntimeReference"
							},
							"loggingLevel": "Basic",
							"projectConnectionManagers": {},
							"packageConnectionManagers": {}
						}
					}
				],
				"folder": {
					"name": "Training"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSpeed')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UnitId FK",
						"type": "varchar"
					},
					{
						"name": "Equipment Id FK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Speed_ViewID",
						"type": "varchar"
					},
					{
						"name": "Speed_FPM",
						"type": "varchar"
					},
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "unit",
					"table": "Speed"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqController')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UnitId FK",
						"type": "varchar"
					},
					{
						"name": "Equipment Id FK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Controller_Name1",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "unit",
					"table": "Controller"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqParts_Item_Header')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ITEM_NUMBER",
						"type": "varchar"
					},
					{
						"name": "DESCRIPTION",
						"type": "varchar"
					},
					{
						"name": "DESCRIPTION_ESA",
						"type": "varchar"
					},
					{
						"name": "ORANIZATION_CODE",
						"type": "varchar"
					},
					{
						"name": "TEMPLATE_NAME",
						"type": "varchar"
					},
					{
						"name": "LIST_PRICE_PER_UNIT",
						"type": "varchar"
					},
					{
						"name": "UOM_CODE",
						"type": "varchar"
					},
					{
						"name": "WEIGHT_UOM_CODE",
						"type": "varchar"
					},
					{
						"name": "UNIT_WEIGHT",
						"type": "varchar"
					},
					{
						"name": "VOLUME_UOM_CODE",
						"type": "varchar"
					},
					{
						"name": "UNIT_VOLUME",
						"type": "varchar"
					},
					{
						"name": "MIN_MINMAX_QUANTITY",
						"type": "varchar"
					},
					{
						"name": "MAX_MINMAX_QUANTITY",
						"type": "varchar"
					},
					{
						"name": "FULL_LEAD_TIME",
						"type": "varchar"
					},
					{
						"name": "FIXED_LOT_MULTIPLIER",
						"type": "varchar"
					},
					{
						"name": "FIXED_ORDER_QUANTITY",
						"type": "varchar"
					},
					{
						"name": "MINIMUM_ORDER_QUANTITY",
						"type": "varchar"
					},
					{
						"name": "MAXIMUM_ORDER_QUANTITY",
						"type": "varchar"
					},
					{
						"name": "LONG_DESCRIPTION",
						"type": "varchar"
					},
					{
						"name": "ITEM_INV_APPLICATION",
						"type": "varchar"
					},
					{
						"name": "TRANSACTION_CONDITION_CODE",
						"type": "varchar"
					},
					{
						"name": "ADJUSTMENT_ACCOUNT",
						"type": "varchar"
					},
					{
						"name": "CORRECTION_ACCOUNT",
						"type": "varchar"
					},
					{
						"name": "SALES_COST_ACCOUNT",
						"type": "varchar"
					},
					{
						"name": "FOUR_DIGIT_CODE",
						"type": "varchar"
					},
					{
						"name": "ORG_NAME",
						"type": "varchar"
					},
					{
						"name": "PE_EXT_ATTRIBUTE1",
						"type": "varchar"
					},
					{
						"name": "PE_EXT_ATTRIBUTE2",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "inventory",
					"table": "Parts_Item_Header"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlBank')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Identification FK",
						"type": "varchar"
					},
					{
						"name": "UnitId FK",
						"type": "varchar"
					},
					{
						"name": "ElevatorBank_ViewID",
						"type": "varchar"
					},
					{
						"name": "ElevatorBank_ExternalID",
						"type": "varchar"
					},
					{
						"name": "ElevatorBank_BankName",
						"type": "varchar"
					},
					{
						"name": "ElevatorBank_AccessCode",
						"type": "varchar"
					},
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "unit",
					"table": "BANK"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlController')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UnitId FK",
						"type": "varchar"
					},
					{
						"name": "Equipment Id FK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Controller_Name1",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "unit",
					"table": "Controller"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlCustomerBillToContactsidl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDriveType')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UnitId FK",
						"type": "varchar"
					},
					{
						"name": "Equipment Id FK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DriveType_ViewID",
						"type": "varchar"
					},
					{
						"name": "DriveType_ExternalID",
						"type": "varchar"
					},
					{
						"name": "DriveType_Name1",
						"type": "varchar"
					},
					{
						"name": "DriveType_Name2",
						"type": "varchar"
					},
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "unit",
					"table": "DriveType"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlIdentification')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UnitId FK",
						"type": "varchar"
					},
					{
						"name": "Unit_GovernmentID",
						"type": "varchar"
					},
					{
						"name": "Unit_NickName",
						"type": "varchar"
					},
					{
						"name": "Customer_BillingReference",
						"type": "varchar"
					},
					{
						"name": "Unit_DownInd",
						"type": "varchar"
					},
					{
						"name": "Unit_RegisteredNo",
						"type": "varchar"
					},
					{
						"name": "Unit_MfgYear",
						"type": "varchar"
					},
					{
						"name": "Unit_WarrantyStartDate",
						"type": "varchar"
					},
					{
						"name": "Unit_WarrantyEndDate",
						"type": "varchar"
					},
					{
						"name": "Unit_InstallDate",
						"type": "varchar"
					},
					{
						"name": "Unit_HandoverDate",
						"type": "varchar"
					},
					{
						"name": "AnnualSafetyTest_LastInspectionDate",
						"type": "varchar"
					},
					{
						"name": "Unit_JobNo",
						"type": "varchar"
					},
					{
						"name": "Unit_FactorySerialNo",
						"type": "varchar"
					},
					{
						"name": "Unit_Smart_ViewID",
						"type": "varchar"
					},
					{
						"name": "Unit_Smart_ExternalID",
						"type": "varchar"
					},
					{
						"name": "Unit_Smart_InstallationDate",
						"type": "varchar"
					},
					{
						"name": "Unit_SmartMAX_ViewID",
						"type": "varchar"
					},
					{
						"name": "Unit_SmartMAX_ExternalID",
						"type": "varchar"
					},
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "unit",
					"table": "Identification"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlMFG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "MANUFACTURER",
						"type": "varchar"
					},
					{
						"name": "DESCRIPTION",
						"type": "varchar"
					},
					{
						"name": "PART_NUMBER",
						"type": "varchar"
					},
					{
						"name": "ITEM_NUMBER",
						"type": "varchar"
					},
					{
						"name": "ORG_NAME",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "inventory",
					"table": "Parts_MFG_Part_Number"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlMFG_Part_Number')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "MANUFACTURER",
						"type": "varchar"
					},
					{
						"name": "DESCRIPTION",
						"type": "varchar"
					},
					{
						"name": "PART_NUMBER",
						"type": "varchar"
					},
					{
						"name": "ITEM_NUMBER",
						"type": "varchar"
					},
					{
						"name": "ORG_NAME",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "inventory.[Parts_MFG_Part_Number"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlParts_Item_Category_Assignment')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ITEM_NUMBER",
						"type": "varchar"
					},
					{
						"name": "CATEGORY_SET_NAME",
						"type": "varchar"
					},
					{
						"name": "CONCAT_CATEGORY_NAME",
						"type": "varchar"
					},
					{
						"name": "ORANIZATION_CODE",
						"type": "varchar"
					},
					{
						"name": "ORG_NAME",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "inventory",
					"table": "Parts_Item_Category_Assignment"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlParts_Item_Cross_Reference')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ITEM_NUMBER",
						"type": "varchar"
					},
					{
						"name": "CROSS_REFERENCE_TYPE",
						"type": "varchar"
					},
					{
						"name": "CROSS_REFERENCE",
						"type": "varchar"
					},
					{
						"name": "DESCRIPTION",
						"type": "varchar"
					},
					{
						"name": "ORGANIZATION_CODE",
						"type": "varchar"
					},
					{
						"name": "ORG_NAME",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "inventory",
					"table": "Parts_Item_Cross_Reference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlParts_Item_Transaction_Default_Locators')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ITEM_NUMBER",
						"type": "varchar"
					},
					{
						"name": "ORGANIZATION_CODE",
						"type": "varchar"
					},
					{
						"name": "SUBINVENTORY_NAME",
						"type": "varchar"
					},
					{
						"name": "ORG_NAME",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "inventory",
					"table": "Parts_Item_Transaction_Default_Locators"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlParts_Item_Transaction_Default_Subinventories')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "inventory",
					"table": "Parts_Item_Transaction_Default_Subinventories"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlSpeed')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UnitId FK",
						"type": "varchar"
					},
					{
						"name": "Equipment Id FK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Speed_ViewID",
						"type": "varchar"
					},
					{
						"name": "Speed_FPM",
						"type": "varchar"
					},
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "unit",
					"table": "Speed"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlSubinventories')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ITEM_NUMBER",
						"type": "varchar"
					},
					{
						"name": "ORGANIZATION_CODE",
						"type": "varchar"
					},
					{
						"name": "SUBINVENTORY_NAME",
						"type": "varchar"
					},
					{
						"name": "ORG_NAME",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "inventory",
					"table": "Parts_Item_Transaction_Default_Subinventories"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTAzureSqlParts_Item_Category_Assignment')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ITEM_NUMBER",
						"type": "varchar"
					},
					{
						"name": "CATEGORY_SET_NAME",
						"type": "varchar"
					},
					{
						"name": "CONCAT_CATEGORY_NAME",
						"type": "varchar"
					},
					{
						"name": "ORANIZATION_CODE",
						"type": "varchar"
					},
					{
						"name": "ORG_NAME",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "inventory",
					"table": "Parts_Item_Category_Assignment"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTCustomerHeader')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Customer_Name",
						"type": "varchar"
					},
					{
						"name": "Customer_Party_Reference_Number",
						"type": "varchar"
					},
					{
						"name": "Customer_Account_Reference_Number",
						"type": "varchar"
					},
					{
						"name": "Customer_Type",
						"type": "varchar"
					},
					{
						"name": "Customer_Profile",
						"type": "varchar"
					},
					{
						"name": "Payment_Method_Name",
						"type": "varchar"
					},
					{
						"name": "Payment_Method_Primary_Flag",
						"type": "varchar"
					},
					{
						"name": "Global_Customer_Flag",
						"type": "varchar"
					},
					{
						"name": "Origin_(AR)",
						"type": "varchar"
					},
					{
						"name": "Primary_ID_Type",
						"type": "varchar"
					},
					{
						"name": "Primary_ID_Validation_Digit",
						"type": "varchar"
					},
					{
						"name": "Taxpayer_ID",
						"type": "varchar"
					},
					{
						"name": "Fiscal_Classification_Type_Code",
						"type": "varchar"
					},
					{
						"name": "Fiscal_Classification_Code",
						"type": "varchar"
					},
					{
						"name": "Effective_Date_From",
						"type": "varchar"
					},
					{
						"name": "Document_Type_(CO)",
						"type": "varchar"
					},
					{
						"name": "Taxpayer_ID_(CO)",
						"type": "varchar"
					},
					{
						"name": "Nature_(CO)",
						"type": "varchar"
					},
					{
						"name": "Regimen_(CO)",
						"type": "varchar"
					},
					{
						"name": "Special_Customer_Flag",
						"type": "varchar"
					},
					{
						"name": "Operating_Unit_Name",
						"type": "varchar"
					},
					{
						"name": "Customer_Class_Code",
						"type": "varchar"
					},
					{
						"name": "Payment_Term_Name",
						"type": "varchar"
					},
					{
						"name": "Order_Number_of_the_Cedula_(GT)",
						"type": "varchar"
					},
					{
						"name": "Register_Number_of_the_Cedula_(GT)",
						"type": "varchar"
					},
					{
						"name": "Document_Type_(SV)",
						"type": "varchar"
					},
					{
						"name": "Contributor_Registry_Number_(SV)",
						"type": "varchar"
					},
					{
						"name": "Person_Category_(PE)",
						"type": "varchar"
					},
					{
						"name": "Person_Type_(PE)",
						"type": "varchar"
					},
					{
						"name": "Document_Type_(PE)",
						"type": "varchar"
					},
					{
						"name": "Document_Number_(PE)",
						"type": "varchar"
					},
					{
						"name": "Last_Name_(PE)",
						"type": "varchar"
					},
					{
						"name": "Second_Last_Name_(PE)",
						"type": "varchar"
					},
					{
						"name": "First_Name_(PE)",
						"type": "varchar"
					},
					{
						"name": "Middle_Name_(PE)",
						"type": "varchar"
					},
					{
						"name": "Origin",
						"type": "varchar"
					},
					{
						"name": "Nature",
						"type": "varchar"
					},
					{
						"name": "Document_Type_(UY)",
						"type": "varchar"
					},
					{
						"name": "Perception_Agent_(PE)",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "customer",
					"table": "header"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTEQUIPMENT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UnitId FK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Floors",
						"type": "varchar"
					},
					{
						"name": "NumberofFrontOpenings",
						"type": "varchar"
					},
					{
						"name": "NumberofRearOpenings",
						"type": "varchar"
					},
					{
						"name": "Unit_CapacityLbs",
						"type": "varchar"
					},
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "unit",
					"table": "EQUIPMENT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase5",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "buildingCode",
						"type": "nvarchar"
					},
					{
						"name": "Data",
						"type": "nvarchar"
					},
					{
						"name": "HashKey",
						"type": "varbinary"
					},
					{
						"name": "ETL_Load_Date_Time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "inventory",
					"table": "Parts_Inventory_Transactions"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase5')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Operating_Unit_Name",
						"type": "varchar"
					},
					{
						"name": "Address_Reference",
						"type": "varchar"
					},
					{
						"name": "Customer_Name",
						"type": "varchar"
					},
					{
						"name": "Customer_Header_Reference",
						"type": "varchar"
					},
					{
						"name": "Site_Use_Code",
						"type": "varchar"
					},
					{
						"name": "Primary_Site_Use_Flag",
						"type": "varchar"
					},
					{
						"name": "Location",
						"type": "varchar"
					},
					{
						"name": "Bill_To_Orig_Address_Reference",
						"type": "varchar"
					},
					{
						"name": "Address_Line_1",
						"type": "varchar"
					},
					{
						"name": "Address_Line_2",
						"type": "varchar"
					},
					{
						"name": "Address_Line_3",
						"type": "varchar"
					},
					{
						"name": "Address_Line_4",
						"type": "varchar"
					},
					{
						"name": "Address_Lines_Phonetic",
						"type": "varchar"
					},
					{
						"name": "City",
						"type": "varchar"
					},
					{
						"name": "Province",
						"type": "varchar"
					},
					{
						"name": "State",
						"type": "varchar"
					},
					{
						"name": "County",
						"type": "varchar"
					},
					{
						"name": "Postal_Code",
						"type": "varchar"
					},
					{
						"name": "Country",
						"type": "varchar"
					},
					{
						"name": "Receivables_Account",
						"type": "varchar"
					},
					{
						"name": "Revenue_Account",
						"type": "varchar"
					},
					{
						"name": "Tax_Account",
						"type": "varchar"
					},
					{
						"name": "Freight_Account",
						"type": "varchar"
					},
					{
						"name": "Clearing_Account",
						"type": "varchar"
					},
					{
						"name": "Unbilled_Receivables_Account",
						"type": "varchar"
					},
					{
						"name": "Unearned_Revenue_Account",
						"type": "varchar"
					},
					{
						"name": "Payment_Method_Name",
						"type": "varchar"
					},
					{
						"name": "Payment_Method_Primary_Flag",
						"type": "varchar"
					},
					{
						"name": "Customer_Profile",
						"type": "varchar"
					},
					{
						"name": "Site_Use_Tax_Reference",
						"type": "varchar"
					},
					{
						"name": "Time_Zone",
						"type": "varchar"
					},
					{
						"name": "Language",
						"type": "varchar"
					},
					{
						"name": "Contributor_Class_at_Account_Site",
						"type": "varchar"
					},
					{
						"name": "Use_Cust_Site_Profile_Flag_at_Account_Site",
						"type": "varchar"
					},
					{
						"name": "Contributor_Class_at_Account_Site_Use",
						"type": "varchar"
					},
					{
						"name": "Use_Cust_Site_Profile_Flag_at_Account_Site_Use",
						"type": "varchar"
					},
					{
						"name": "Economic_Activity",
						"type": "varchar"
					},
					{
						"name": "Payment_Term_Name",
						"type": "varchar"
					},
					{
						"name": "Concept_Code_(CR)",
						"type": "varchar"
					},
					{
						"name": "Giro_(CL)",
						"type": "varchar"
					},
					{
						"name": "US_Remit-to_Address_Mapping",
						"type": "varchar"
					},
					{
						"name": "US_Tax_Area_Id",
						"type": "varchar"
					},
					{
						"name": "Union_Local",
						"type": "varchar"
					},
					{
						"name": "TAID_User_Override",
						"type": "varchar"
					},
					{
						"name": "TAID_Last_Checked",
						"type": "varchar"
					},
					{
						"name": "TAID_Assignment_Result",
						"type": "varchar"
					},
					{
						"name": "TAID_Confidence_Indicator",
						"type": "varchar"
					},
					{
						"name": "TAID_Precision",
						"type": "varchar"
					},
					{
						"name": "CRM_Account",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "customer",
					"table": "CustomerAddress"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "MANUFACTURER",
						"type": "varchar"
					},
					{
						"name": "DESCRIPTION",
						"type": "varchar"
					},
					{
						"name": "PART_NUMBER",
						"type": "varchar"
					},
					{
						"name": "ITEM_NUMBER",
						"type": "varchar"
					},
					{
						"name": "ORG_NAME",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "inventory.[Parts_MFG_Part_Number"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable4DimAccount')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AccountKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ParentAccountKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AccountCodeAlternateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ParentAccountCodeAlternateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AccountDescription",
						"type": "nvarchar"
					},
					{
						"name": "AccountType",
						"type": "nvarchar"
					},
					{
						"name": "Operator",
						"type": "nvarchar"
					},
					{
						"name": "CustomMembers",
						"type": "nvarchar"
					},
					{
						"name": "ValueType",
						"type": "nvarchar"
					},
					{
						"name": "CustomMemberOptions",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimAccount"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlUILDING')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UnitId FK",
						"type": "varchar"
					},
					{
						"name": "identification FK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Building_ViewID",
						"type": "varchar"
					},
					{
						"name": "Building_ExternalID",
						"type": "varchar"
					},
					{
						"name": "Building_BuildingNo",
						"type": "varchar"
					},
					{
						"name": "Name_en",
						"type": "varchar"
					},
					{
						"name": "Name_local",
						"type": "varchar"
					},
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "unit",
					"table": "BUILDING"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlWatermark')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "training"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "tableName",
						"type": "varchar"
					},
					{
						"name": "waterMarkVal",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "WaterMark"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqladdress')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Operating Unit Name",
						"type": "varchar"
					},
					{
						"name": "Customer Header Reference",
						"type": "varchar"
					},
					{
						"name": "Address Reference",
						"type": "varchar"
					},
					{
						"name": "Customer Name",
						"type": "varchar"
					},
					{
						"name": "Site Use Code",
						"type": "varchar"
					},
					{
						"name": "Primary Site Use Flag",
						"type": "varchar"
					},
					{
						"name": " Location",
						"type": "varchar"
					},
					{
						"name": "Bill To Orig Address Reference",
						"type": "varchar"
					},
					{
						"name": "Address Line 1",
						"type": "varchar"
					},
					{
						"name": "Address Line 2",
						"type": "varchar"
					},
					{
						"name": "Address Line 3",
						"type": "varchar"
					},
					{
						"name": "Address Line 4",
						"type": "varchar"
					},
					{
						"name": "Address Lines Phonetic",
						"type": "varchar"
					},
					{
						"name": "City",
						"type": "varchar"
					},
					{
						"name": "Province",
						"type": "varchar"
					},
					{
						"name": "State",
						"type": "varchar"
					},
					{
						"name": "County",
						"type": "varchar"
					},
					{
						"name": "Postal Code",
						"type": "varchar"
					},
					{
						"name": "Country",
						"type": "varchar"
					},
					{
						"name": "Receivables Account",
						"type": "varchar"
					},
					{
						"name": "Revenue Account",
						"type": "varchar"
					},
					{
						"name": "Tax Account",
						"type": "varchar"
					},
					{
						"name": "Freight Account",
						"type": "varchar"
					},
					{
						"name": "Clearing Account",
						"type": "varchar"
					},
					{
						"name": "Unbilled Receivables Account",
						"type": "varchar"
					},
					{
						"name": "Unearned Revenue Account",
						"type": "varchar"
					},
					{
						"name": "Payment Method Name",
						"type": "varchar"
					},
					{
						"name": "Payment Method Primary Flag",
						"type": "varchar"
					},
					{
						"name": "Customer Profile",
						"type": "varchar"
					},
					{
						"name": "Site Use Tax Reference",
						"type": "varchar"
					},
					{
						"name": "Time Zone",
						"type": "varchar"
					},
					{
						"name": "Language",
						"type": "varchar"
					},
					{
						"name": "Contributor Class at Account Site",
						"type": "varchar"
					},
					{
						"name": "Use Cust Site Profile Flag at Account Site",
						"type": "varchar"
					},
					{
						"name": "Contributor Class at Account Site Use",
						"type": "varchar"
					},
					{
						"name": "Use Cust Site Profile Flag at Account Site Use",
						"type": "varchar"
					},
					{
						"name": "Economic Activity",
						"type": "varchar"
					},
					{
						"name": "Payment Term Name",
						"type": "varchar"
					},
					{
						"name": "Concept Code (CR)",
						"type": "varchar"
					},
					{
						"name": "Giro (CL)",
						"type": "varchar"
					},
					{
						"name": "US Remit-to Address Mapping",
						"type": "varchar"
					},
					{
						"name": "US Tax Area Id",
						"type": "varchar"
					},
					{
						"name": "Union Local",
						"type": "varchar"
					},
					{
						"name": "TAID User Override",
						"type": "varchar"
					},
					{
						"name": "TAID Last Checked",
						"type": "varchar"
					},
					{
						"name": "TAID Assignment Result",
						"type": "varchar"
					},
					{
						"name": "TAID Confidence Indicator",
						"type": "varchar"
					},
					{
						"name": "TAID Precision",
						"type": "varchar"
					},
					{
						"name": "CRM Account",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "address"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlbuilding')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ExternalBuildingId",
						"type": "varchar"
					},
					{
						"name": "BuildingName_local",
						"type": "varchar"
					},
					{
						"name": "StreetAddress_Local",
						"type": "varchar"
					},
					{
						"name": "City_Local",
						"type": "varchar"
					},
					{
						"name": "Postcode",
						"type": "varchar"
					},
					{
						"name": "MainTypeViewId",
						"type": "varchar"
					},
					{
						"name": "MainTypeName_En",
						"type": "varchar"
					},
					{
						"name": "SubTypeViewId",
						"type": "varchar"
					},
					{
						"name": "SubTypeName_En",
						"type": "varchar"
					},
					{
						"name": "BuildingNo",
						"type": "varchar"
					},
					{
						"name": "CustomerNo",
						"type": "varchar"
					},
					{
						"name": "SumOfTotalUnits",
						"type": "varchar"
					},
					{
						"name": "SumOfUnitsInService",
						"type": "varchar"
					},
					{
						"name": "OfficeViewId",
						"type": "varchar"
					},
					{
						"name": "OfficeName_En",
						"type": "varchar"
					},
					{
						"name": "UnitsScheduleHours",
						"type": "varchar"
					},
					{
						"name": "UnitsScheduleHoursViewId",
						"type": "varchar"
					},
					{
						"name": "UnitsScheduleTime",
						"type": "varchar"
					},
					{
						"name": "UnitsScheduleTimeViewId",
						"type": "varchar"
					},
					{
						"name": "TargetCallRate",
						"type": "varchar"
					},
					{
						"name": "RunInfo",
						"type": "varchar"
					},
					{
						"name": "RunTypeViewId",
						"type": "varchar"
					},
					{
						"name": "RunTypeName",
						"type": "varchar"
					},
					{
						"name": "RunViewId",
						"type": "varchar"
					},
					{
						"name": "RunName",
						"type": "varchar"
					},
					{
						"name": "BHSWPResponse",
						"type": "varchar"
					},
					{
						"name": "BHStopResponse",
						"type": "varchar"
					},
					{
						"name": "BHOthersResponse",
						"type": "varchar"
					},
					{
						"name": "AHSWPResponse",
						"type": "varchar"
					},
					{
						"name": "AHStopResponse",
						"type": "varchar"
					},
					{
						"name": "AHOthersResponse",
						"type": "varchar"
					},
					{
						"name": "Notes",
						"type": "varchar"
					},
					{
						"name": "BusinessHourContactInfo",
						"type": "varchar"
					},
					{
						"name": "BHSiteContact",
						"type": "varchar"
					},
					{
						"name": "BHContactPhone1",
						"type": "varchar"
					},
					{
						"name": "BHContactMobile",
						"type": "varchar"
					},
					{
						"name": "BHContactRoleViewId",
						"type": "varchar"
					},
					{
						"name": "BHContactRoleName",
						"type": "varchar"
					},
					{
						"name": "AfterHourContactInfo",
						"type": "varchar"
					},
					{
						"name": "AHSiteContact",
						"type": "varchar"
					},
					{
						"name": "AHContactPhone1",
						"type": "varchar"
					},
					{
						"name": "AHContactMobile",
						"type": "varchar"
					},
					{
						"name": "AHContactRoleViewId",
						"type": "varchar"
					},
					{
						"name": "AHContactRoleViewName",
						"type": "varchar"
					},
					{
						"name": "State",
						"type": "varchar"
					},
					{
						"name": "ViewId",
						"type": "varchar"
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "TimeZone",
						"type": "varchar"
					},
					{
						"name": "CustomerCode",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "customer",
					"table": "Building"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlcustomerContactpoints')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Operating Unit Name",
						"type": "varchar"
					},
					{
						"name": "Customer Header Reference",
						"type": "varchar"
					},
					{
						"name": "Address Reference",
						"type": "varchar"
					},
					{
						"name": "Contact Point Type",
						"type": "varchar"
					},
					{
						"name": "Contact Point Status",
						"type": "varchar"
					},
					{
						"name": "Primary Flag",
						"type": "varchar"
					},
					{
						"name": "Contact point Purpose",
						"type": "varchar"
					},
					{
						"name": "Phone Country Code",
						"type": "varchar"
					},
					{
						"name": "Phone Area Code",
						"type": "varchar"
					},
					{
						"name": "Phone Number",
						"type": "varchar"
					},
					{
						"name": "Phone Extension",
						"type": "varchar"
					},
					{
						"name": "Phone Line Type",
						"type": "varchar"
					},
					{
						"name": "Email Address",
						"type": "varchar"
					},
					{
						"name": "Email Format",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "customerContactpoints"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlcustomerbillTocontacts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Operating Unit Name",
						"type": "varchar"
					},
					{
						"name": "Customer Header Reference",
						"type": "varchar"
					},
					{
						"name": "Address Reference",
						"type": "varchar"
					},
					{
						"name": "Contact Reference",
						"type": "varchar"
					},
					{
						"name": "Contact Point Reference",
						"type": "varchar"
					},
					{
						"name": "Contact_First_Name",
						"type": "varchar"
					},
					{
						"name": "Contact_Last_Name",
						"type": "varchar"
					},
					{
						"name": "Contact Point Type",
						"type": "varchar"
					},
					{
						"name": "Phone Country Code",
						"type": "varchar"
					},
					{
						"name": "Area Code",
						"type": "varchar"
					},
					{
						"name": "Telephone Number",
						"type": "varchar"
					},
					{
						"name": "Phone Extension",
						"type": "varchar"
					},
					{
						"name": "EMAIL Address",
						"type": "varchar"
					},
					{
						"name": "Invoice Delivery Method",
						"type": "varchar"
					},
					{
						"name": "Column 14",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "customerbillTocontacts"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqldemomfg')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "MANUFACTURER",
						"type": "varchar"
					},
					{
						"name": "DESCRIPTION",
						"type": "varchar"
					},
					{
						"name": "PART_NUMBER",
						"type": "varchar"
					},
					{
						"name": "ITEM_NUMBER",
						"type": "varchar"
					},
					{
						"name": "ORG_NAME",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "inventory",
					"table": "Parts_MFG_Part_Number"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlheader')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Customer Name",
						"type": "varchar"
					},
					{
						"name": "Customer Party Reference Number",
						"type": "varchar"
					},
					{
						"name": "Customer Account Reference Number",
						"type": "varchar"
					},
					{
						"name": "Customer Type",
						"type": "varchar"
					},
					{
						"name": "Customer Profile",
						"type": "varchar"
					},
					{
						"name": "Payment Method Name",
						"type": "varchar"
					},
					{
						"name": "Payment Method Primary Flag",
						"type": "varchar"
					},
					{
						"name": "Global Customer Flag",
						"type": "varchar"
					},
					{
						"name": "Origin (AR)",
						"type": "varchar"
					},
					{
						"name": "Primary ID Type",
						"type": "varchar"
					},
					{
						"name": "Primary ID Validation Digit",
						"type": "varchar"
					},
					{
						"name": "Taxpayer ID",
						"type": "varchar"
					},
					{
						"name": "Fiscal Classification Type Code",
						"type": "varchar"
					},
					{
						"name": "Fiscal Classification Code",
						"type": "varchar"
					},
					{
						"name": "Effective Date From",
						"type": "varchar"
					},
					{
						"name": "Document Type (CO)",
						"type": "varchar"
					},
					{
						"name": "Taxpayer ID (CO)",
						"type": "varchar"
					},
					{
						"name": "Nature (CO)",
						"type": "varchar"
					},
					{
						"name": "Regimen (CO)",
						"type": "varchar"
					},
					{
						"name": "Special Customer Flag",
						"type": "varchar"
					},
					{
						"name": "Operating Unit Name",
						"type": "varchar"
					},
					{
						"name": "Customer Class Code",
						"type": "varchar"
					},
					{
						"name": "Payment Term Name",
						"type": "varchar"
					},
					{
						"name": "Order Number of the Cedula (GT)",
						"type": "varchar"
					},
					{
						"name": "Register Number of the Cedula (GT)",
						"type": "varchar"
					},
					{
						"name": "Document Type (SV)",
						"type": "varchar"
					},
					{
						"name": "Contributor Regristry number (SV)",
						"type": "varchar"
					},
					{
						"name": "Person Category (PE)",
						"type": "varchar"
					},
					{
						"name": "Person Type (PE)",
						"type": "varchar"
					},
					{
						"name": "Document Type (PE)",
						"type": "varchar"
					},
					{
						"name": "Document Number (PE)",
						"type": "varchar"
					},
					{
						"name": "Last Name (PE)",
						"type": "varchar"
					},
					{
						"name": "Second Last Name (PE)",
						"type": "varchar"
					},
					{
						"name": "First Name (PE)",
						"type": "varchar"
					},
					{
						"name": "Middle Name (PE)",
						"type": "varchar"
					},
					{
						"name": "Origin",
						"type": "varchar"
					},
					{
						"name": "Nature",
						"type": "varchar"
					},
					{
						"name": "Document Type (UY)",
						"type": "varchar"
					},
					{
						"name": "Perception Agent (PE)",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Header stg"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlmaintenance')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UnitId FK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Array_MaintenanceRun",
						"type": "varchar"
					},
					{
						"name": "MaintenanceRun_RouteNo_TerritoryCode",
						"type": "varchar"
					},
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "unit",
					"table": "maintenance"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlquery')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlstgstdent')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "studentId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "studentName",
						"type": "varchar"
					},
					{
						"name": "stream",
						"type": "varchar"
					},
					{
						"name": "marks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "createDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "updateDate",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "stgStudent"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlunit')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Unit_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TechnicianNotes",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "unit",
					"table": "unit"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azuremaintenance')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UnitId FK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Array_MaintenanceRun",
						"type": "varchar"
					},
					{
						"name": "MaintenanceRun_RouteNo_TerritoryCode",
						"type": "varchar"
					},
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "unit",
					"table": "maintenance"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azuresqlnventory_transactions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ITEM_NUMBER",
						"type": "varchar"
					},
					{
						"name": "ORGANIZATION_CODE",
						"type": "varchar"
					},
					{
						"name": "SUBINVENTORY_NAME",
						"type": "varchar"
					},
					{
						"name": "TRANSACTION_QUANTITY",
						"type": "varchar"
					},
					{
						"name": "TRANSACTION_DATE",
						"type": "varchar"
					},
					{
						"name": "TRANSACTION_REFERENCE",
						"type": "varchar"
					},
					{
						"name": "LOCATOR_NAME",
						"type": "varchar"
					},
					{
						"name": "TRANSACTION_COST",
						"type": "varchar"
					},
					{
						"name": "FM_SERIAL_NUMBER",
						"type": "varchar"
					},
					{
						"name": "TO_SERIAL_NUMBER",
						"type": "varchar"
					},
					{
						"name": "Distribution_Account",
						"type": "varchar"
					},
					{
						"name": "ORG_NAME",
						"type": "varchar"
					},
					{
						"name": "PE_EXT_ATTRIBUTE1",
						"type": "varchar"
					},
					{
						"name": "PE_EXT_ATTRIBUTE2",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "inventory",
					"table": "Parts_Inventory_Transactions"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BUILDING1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UnitId FK",
						"type": "varchar"
					},
					{
						"name": "identification FK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Building_ViewID",
						"type": "varchar"
					},
					{
						"name": "Building_ExternalID",
						"type": "varchar"
					},
					{
						"name": "Building_BuildingNo",
						"type": "varchar"
					},
					{
						"name": "Name_en",
						"type": "varchar"
					},
					{
						"name": "Name_local",
						"type": "varchar"
					},
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "unit",
					"table": "BUILDING"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BuildingName_en')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSMohamed",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "customerdm11032020"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSMohamed')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BuildingToJson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Buildingsql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Building_ExternalBuildingId",
						"type": "varchar"
					},
					{
						"name": "Building_BuildingName_local",
						"type": "varchar"
					},
					{
						"name": "Building_BuildingName_en",
						"type": "varchar"
					},
					{
						"name": "Building_Height",
						"type": "varchar"
					},
					{
						"name": "Building_StreetAddress_En",
						"type": "varchar"
					},
					{
						"name": "Building_StreetAddress_Local",
						"type": "varchar"
					},
					{
						"name": "Building_Suburb_En",
						"type": "varchar"
					},
					{
						"name": "Building_Suburb_Local",
						"type": "varchar"
					},
					{
						"name": "Building_City_En",
						"type": "varchar"
					},
					{
						"name": "Building_City_Local",
						"type": "varchar"
					},
					{
						"name": "Building_Postcode",
						"type": "varchar"
					},
					{
						"name": "Building_MainTypeViewId",
						"type": "varchar"
					},
					{
						"name": "Building_MainTypeName_En",
						"type": "varchar"
					},
					{
						"name": "Building_MainTypeName_Local",
						"type": "varchar"
					},
					{
						"name": "Building_SubTypeViewId",
						"type": "varchar"
					},
					{
						"name": "Building_SubTypeName_En",
						"type": "varchar"
					},
					{
						"name": "Building_SubTypeName_Local",
						"type": "varchar"
					},
					{
						"name": "Building_BuildingNo",
						"type": "varchar"
					},
					{
						"name": "Building_IsStandbybuilding",
						"type": "varchar"
					},
					{
						"name": "Building_CostingNo",
						"type": "varchar"
					},
					{
						"name": "Building_CustomerNo",
						"type": "varchar"
					},
					{
						"name": "Building_SumOfTotalUnits",
						"type": "varchar"
					},
					{
						"name": "Building_SumOfUnitsInService",
						"type": "varchar"
					},
					{
						"name": "Building_QuickTurnover",
						"type": "varchar"
					},
					{
						"name": "Building_Latitude",
						"type": "varchar"
					},
					{
						"name": "Building_Longitude",
						"type": "varchar"
					},
					{
						"name": "Building_OfficeViewId",
						"type": "varchar"
					},
					{
						"name": "Building_OfficeName_En",
						"type": "varchar"
					},
					{
						"name": "Building_OfficeName_Local",
						"type": "varchar"
					},
					{
						"name": "Building_TKManagerEmployeeViewId",
						"type": "varchar"
					},
					{
						"name": "Building_TKManagerEmployeeExternalId",
						"type": "varchar"
					},
					{
						"name": "Building_TKManagerName",
						"type": "varchar"
					},
					{
						"name": "Building_IsRepairCorres",
						"type": "varchar"
					},
					{
						"name": "Building_IsCalendar",
						"type": "varchar"
					},
					{
						"name": "Building_IsGeneralCorres",
						"type": "varchar"
					},
					{
						"name": "Building_IsCard",
						"type": "varchar"
					},
					{
						"name": "Building_IsMonthlyReport",
						"type": "varchar"
					},
					{
						"name": "Building_UnitsScheduleHours",
						"type": "varchar"
					},
					{
						"name": "Building_UnitsScheduleHoursViewId",
						"type": "varchar"
					},
					{
						"name": "Building_UnitsScheduleTime",
						"type": "varchar"
					},
					{
						"name": "Building_UnitsScheduleTimeViewId",
						"type": "varchar"
					},
					{
						"name": "Building_UnitsScheduleDay",
						"type": "varchar"
					},
					{
						"name": "Building_UnitsScheduleDayViewId",
						"type": "varchar"
					},
					{
						"name": "Building_UnitsScheduleDayFrequency",
						"type": "varchar"
					},
					{
						"name": "Building_TargetCallRate",
						"type": "varchar"
					},
					{
						"name": "Array_RunInfo",
						"type": "varchar"
					},
					{
						"name": "RunInfo_RunTypeViewId",
						"type": "varchar"
					},
					{
						"name": "RunInfo_RunTypeName",
						"type": "varchar"
					},
					{
						"name": "RunInfo_RunViewId",
						"type": "varchar"
					},
					{
						"name": "RunInfo_RunName",
						"type": "varchar"
					},
					{
						"name": "RunInfo_BHSWPResponse",
						"type": "varchar"
					},
					{
						"name": "RunInfo_BHStopResponse",
						"type": "varchar"
					},
					{
						"name": "RunInfo_BHOthersResponse",
						"type": "varchar"
					},
					{
						"name": "RunInfo_AHSWPResponse",
						"type": "varchar"
					},
					{
						"name": "RunInfo_AHStopResponse",
						"type": "varchar"
					},
					{
						"name": "RunInfo_AHOthersResponse",
						"type": "varchar"
					},
					{
						"name": "RunInfo_Notes",
						"type": "varchar"
					},
					{
						"name": "RunInfo_PropertyManagerEmployeeViewId",
						"type": "varchar"
					},
					{
						"name": "RunInfo_PropertyManagerEmployeeName",
						"type": "varchar"
					},
					{
						"name": "Array_BusinessHourContactInfo",
						"type": "varchar"
					},
					{
						"name": "BusinessHourContactInfo_BHSiteContact",
						"type": "varchar"
					},
					{
						"name": "BusinessHourContactInfo_BHContactLocation_En",
						"type": "varchar"
					},
					{
						"name": "BusinessHourContactInfo_BHContactLocation_Local",
						"type": "varchar"
					},
					{
						"name": "BusinessHourContactInfo_BHContactPhone1",
						"type": "varchar"
					},
					{
						"name": "BusinessHourContactInfo_BHContactPhone2",
						"type": "varchar"
					},
					{
						"name": "BusinessHourContactInfo_BHContactMobile",
						"type": "varchar"
					},
					{
						"name": "BusinessHourContactInfo_BHContactFax",
						"type": "varchar"
					},
					{
						"name": "BusinessHourContactInfo_BHContactRoleViewId",
						"type": "varchar"
					},
					{
						"name": "BusinessHourContactInfo_BHContactRoleName",
						"type": "varchar"
					},
					{
						"name": "Array_AfterHourContactInfo",
						"type": "varchar"
					},
					{
						"name": "AfterHourContactInfo_AHSiteContact",
						"type": "varchar"
					},
					{
						"name": "AfterHourContactInfo_AHContactLocation_En",
						"type": "varchar"
					},
					{
						"name": "AfterHourContactInfo_AHContactLocation_Local",
						"type": "varchar"
					},
					{
						"name": "AfterHourContactInfo_AHContactPhone1",
						"type": "varchar"
					},
					{
						"name": "AfterHourContactInfo_AHContactMobile",
						"type": "varchar"
					},
					{
						"name": "AfterHourContactInfo_AHContactFax",
						"type": "varchar"
					},
					{
						"name": "AfterHourContactInfo_AHContactRoleViewId",
						"type": "varchar"
					},
					{
						"name": "AfterHourContactInfo_AHContactRoleViewName",
						"type": "varchar"
					},
					{
						"name": "AfterHourContactInfo_AHContactAccessCode",
						"type": "varchar"
					},
					{
						"name": "Array_BuildingContactInfo",
						"type": "varchar"
					},
					{
						"name": "BuildingContactInfo_ContactViewId",
						"type": "varchar"
					},
					{
						"name": "BuildingContactInfo_ContactExternalId",
						"type": "varchar"
					},
					{
						"name": "BuildingContactInfo_ContactName",
						"type": "varchar"
					},
					{
						"name": "BuildingContactInfo_IsBusinessHours",
						"type": "varchar"
					},
					{
						"name": "Building_VFMCustomerName_En",
						"type": "varchar"
					},
					{
						"name": "Building_VFMCustomerName_Local",
						"type": "varchar"
					},
					{
						"name": "Building_VFMCustomerMail",
						"type": "varchar"
					},
					{
						"name": "Building_VFMMailTemplateSubject",
						"type": "varchar"
					},
					{
						"name": "Building_VFMMailTemplateContent",
						"type": "varchar"
					},
					{
						"name": "Building_IsCustomisedMail",
						"type": "varchar"
					},
					{
						"name": "Building_ReportFrequencyViewId",
						"type": "varchar"
					},
					{
						"name": "Building_ReportFrequency",
						"type": "varchar"
					},
					{
						"name": "Building_ReportTypeViewId",
						"type": "varchar"
					},
					{
						"name": "Building_ReportType",
						"type": "varchar"
					},
					{
						"name": "Building_IsReportInvoice",
						"type": "varchar"
					},
					{
						"name": "Building_ReportSendTo",
						"type": "varchar"
					},
					{
						"name": "Building_ReportAuditRequired",
						"type": "varchar"
					},
					{
						"name": "Building_ReportAuditDetail",
						"type": "varchar"
					},
					{
						"name": "Building_ReportServiceDockets",
						"type": "varchar"
					},
					{
						"name": "Building_FromProjectId",
						"type": "varchar"
					},
					{
						"name": "Building_FromProjectLabel",
						"type": "varchar"
					},
					{
						"name": "Array_BuildingCustomerInfo",
						"type": "varchar"
					},
					{
						"name": "BuildingCustomerInfo_CustomerViewId",
						"type": "varchar"
					},
					{
						"name": "BuildingCustomerInfo_CustomerExternalId",
						"type": "varchar"
					},
					{
						"name": "BuildingCustomerInfo_CustomerName",
						"type": "varchar"
					},
					{
						"name": "Array_State",
						"type": "varchar"
					},
					{
						"name": "State_ViewId",
						"type": "varchar"
					},
					{
						"name": "State_Name",
						"type": "varchar"
					},
					{
						"name": "Builiding_TimeZone",
						"type": "varchar"
					},
					{
						"name": "Builiding_CustomerCode",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "customer",
					"table": "Building"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Category_Assignmentarchive')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "archives"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbSqlApiCollection1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDb2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "okh"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDb2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbSqlApiCollection2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDb3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "unit"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDb3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerBillToContacts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ORA_FD02_CustomerContactPoints20201005174313.xlsx",
						"container": "customercontactpoints"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Customer Header Reference",
						"type": "String"
					},
					{
						"name": "Address Reference",
						"type": "String"
					},
					{
						"name": "Contact Point Type",
						"type": "String"
					},
					{
						"name": "Contact Point Status",
						"type": "String"
					},
					{
						"name": "Primary Flag",
						"type": "String"
					},
					{
						"name": "Contact point Purpose",
						"type": "String"
					},
					{
						"name": "Phone Country Code",
						"type": "String"
					},
					{
						"name": "Phone Area Code",
						"type": "String"
					},
					{
						"name": "Phone Number",
						"type": "String"
					},
					{
						"name": "Phone Extension",
						"type": "String"
					},
					{
						"name": "Phone Line Type",
						"type": "String"
					},
					{
						"name": "Email Address",
						"type": "String"
					},
					{
						"name": "Email Format",
						"type": "String"
					},
					{
						"name": "Operating Unit Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerBillToContactscsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ABLBMohamedBlob2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "customerbilltocontacts"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ABLBMohamedBlob2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerBillToContactssql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Operating_Unit_Name",
						"type": "varchar"
					},
					{
						"name": "ï»¿Customer_Header_Reference",
						"type": "varchar"
					},
					{
						"name": "Address_Reference",
						"type": "varchar"
					},
					{
						"name": "Phone_Country_Code",
						"type": "varchar"
					},
					{
						"name": "Phone_Extension",
						"type": "varchar"
					},
					{
						"name": "Contact_Reference",
						"type": "varchar"
					},
					{
						"name": "Contact_Point Reference",
						"type": "varchar"
					},
					{
						"name": "Contact_First_Name",
						"type": "varchar"
					},
					{
						"name": "Contact_Last_Name",
						"type": "varchar"
					},
					{
						"name": "Contact Point_Type",
						"type": "varchar"
					},
					{
						"name": "Area_Code",
						"type": "varchar"
					},
					{
						"name": "Telephone_Number",
						"type": "varchar"
					},
					{
						"name": "EMAIL_Address",
						"type": "varchar"
					},
					{
						"name": "Invoice_Delivery_Method",
						"type": "varchar"
					},
					{
						"name": "Column 14",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "customer",
					"table": "CustomerBillToContacts"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerContactPointscsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ABLBMohamedBlob2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "customercontactpoints"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ABLBMohamedBlob2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerContactPointscsvot')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ABLBMohamedBlob2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "customercontactpoints"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ABLBMohamedBlob2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerContactPointsidl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerContactPointssql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Operating_Unit_Name",
						"type": "varchar"
					},
					{
						"name": "ï»¿Customer_Header_Reference",
						"type": "varchar"
					},
					{
						"name": "Address_Reference",
						"type": "varchar"
					},
					{
						"name": "Contact_Point_Type",
						"type": "varchar"
					},
					{
						"name": "Contact_Point_Status",
						"type": "varchar"
					},
					{
						"name": "Primary_Flag",
						"type": "varchar"
					},
					{
						"name": "Contact_Point_Purpose",
						"type": "varchar"
					},
					{
						"name": "Phone_Country_Code",
						"type": "varchar"
					},
					{
						"name": "Phone_Area_Code",
						"type": "varchar"
					},
					{
						"name": "Phone_Number",
						"type": "varchar"
					},
					{
						"name": "Phone_Extension",
						"type": "varchar"
					},
					{
						"name": "Phone_Line_Type",
						"type": "varchar"
					},
					{
						"name": "Email_Address",
						"type": "varchar"
					},
					{
						"name": "Email_Format",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "customer",
					"table": "CustomerContactPoints"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ASQLDB_PIPEINE_PARAMETER')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Table_Name",
						"type": "nvarchar"
					},
					{
						"name": "TABLE_CATALOG",
						"type": "nvarchar"
					},
					{
						"name": "process_type",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "pipeline_parameter"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ASQLDB_PIPEINE_PARAMETER1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorksDW2019",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "training"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "Table_Name",
						"type": "nvarchar"
					},
					{
						"name": "TABLE_CATALOG",
						"type": "nvarchar"
					},
					{
						"name": "process_type",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "pipeline_parameter"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorksDW2019')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQLSERVER')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Table_Name",
						"type": "nvarchar"
					},
					{
						"name": "TABLE_CATALOG",
						"type": "nvarchar"
					},
					{
						"name": "process_type",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "pipeline_parameter"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedItem_Transaction')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "inventoryoutput"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ITEM_NUMBER",
						"type": "String"
					},
					{
						"name": "ORGANIZATION_CODE",
						"type": "String"
					},
					{
						"name": "SUBINVENTORY_NAME",
						"type": "String"
					},
					{
						"name": "LOCATOR_NAME",
						"type": "String"
					},
					{
						"name": "ORG_NAME",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedParts_Item_Header')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "inventoryoutput"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ITEM_NUMBER",
						"type": "String"
					},
					{
						"name": "DESCRIPTION",
						"type": "String"
					},
					{
						"name": "DESCRIPTION_ESA",
						"type": "String"
					},
					{
						"name": "ORANIZATION_CODE",
						"type": "String"
					},
					{
						"name": "TEMPLATE_NAME",
						"type": "String"
					},
					{
						"name": "LIST_PRICE_PER_UNIT",
						"type": "String"
					},
					{
						"name": "UOM_CODE",
						"type": "String"
					},
					{
						"name": "WEIGHT_UOM_CODE",
						"type": "String"
					},
					{
						"name": "UNIT_WEIGHT",
						"type": "String"
					},
					{
						"name": "VOLUME_UOM_CODE",
						"type": "String"
					},
					{
						"name": "UNIT_VOLUME",
						"type": "String"
					},
					{
						"name": "MIN_MINMAX_QUANTITY",
						"type": "String"
					},
					{
						"name": "MAX_MINMAX_QUANTITY",
						"type": "String"
					},
					{
						"name": "FULL_LEAD_TIME",
						"type": "String"
					},
					{
						"name": "FIXED_LOT_MULTIPLIER",
						"type": "String"
					},
					{
						"name": "FIXED_ORDER_QUANTITY",
						"type": "String"
					},
					{
						"name": "MINIMUM_ORDER_QUANTITY",
						"type": "String"
					},
					{
						"name": "MAXIMUM_ORDER_QUANTITY",
						"type": "String"
					},
					{
						"name": "LONG_DESCRIPTION",
						"type": "String"
					},
					{
						"name": "ITEM_INV_APPLICATION",
						"type": "String"
					},
					{
						"name": "TRANSACTION_CONDITION_CODE",
						"type": "String"
					},
					{
						"name": "ADJUSTMENT_ACCOUNT",
						"type": "String"
					},
					{
						"name": "CORRECTION_ACCOUNT",
						"type": "String"
					},
					{
						"name": "SALES_COST_ACCOUNT",
						"type": "String"
					},
					{
						"name": "FOUR_DIGIT_CODE",
						"type": "String"
					},
					{
						"name": "ORG_NAME",
						"type": "String"
					},
					{
						"name": "PE_EXT_ATTRIBUTE1",
						"type": "String"
					},
					{
						"name": "PE_EXT_ATTRIBUTE2",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedTParts_Item_Category_Assignment')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "inventoryoutput"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ITEM_NUMBER,CATEGORY_SET_NAME,CONCAT_CATEGORY_NAME,ORANIZATION_CODE,ORG_NAME",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedTexParts_Inventory_Transactions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "inventoryoutput"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ITEM_NUMBER",
						"type": "String"
					},
					{
						"name": "ORGANIZATION_CODE",
						"type": "String"
					},
					{
						"name": "SUBINVENTORY_NAME",
						"type": "String"
					},
					{
						"name": "TRANSACTION_QUANTITY",
						"type": "String"
					},
					{
						"name": "TRANSACTION_DATE",
						"type": "String"
					},
					{
						"name": "TRANSACTION_REFERENCE",
						"type": "String"
					},
					{
						"name": "LOCATOR_NAME",
						"type": "String"
					},
					{
						"name": "TRANSACTION_COST",
						"type": "String"
					},
					{
						"name": "FM_SERIAL_NUMBER",
						"type": "String"
					},
					{
						"name": "TO_SERIAL_NUMBER",
						"type": "String"
					},
					{
						"name": "Distribution_Account",
						"type": "String"
					},
					{
						"name": "ORG_NAME",
						"type": "String"
					},
					{
						"name": "PE_EXT_ATTRIBUTE1",
						"type": "String"
					},
					{
						"name": "PE_EXT_ATTRIBUTE2",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedTex_Transaction_Default')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "inventoryoutput"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ITEM_NUMBER",
						"type": "String"
					},
					{
						"name": "ORGANIZATION_CODE",
						"type": "String"
					},
					{
						"name": "SUBINVENTORY_NAME",
						"type": "String"
					},
					{
						"name": "ORG_NAME",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText10')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ABLBMohamedBlob2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "archives"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ABLBMohamedBlob2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "address"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSMohamed",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "View_Building_20201104172958.xlsx",
						"fileSystem": "customerdm11032020"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Building_ExternalBuildingId",
						"type": "String"
					},
					{
						"name": "Building_BuildingName_local",
						"type": "String"
					},
					{
						"name": "Building_BuildingName_en",
						"type": "String"
					},
					{
						"name": "Building_Height",
						"type": "String"
					},
					{
						"name": "Building_StreetAddress_En",
						"type": "String"
					},
					{
						"name": "Building_StreetAddress_Local",
						"type": "String"
					},
					{
						"name": "Building_Suburb_En",
						"type": "String"
					},
					{
						"name": "Building_Suburb_Local",
						"type": "String"
					},
					{
						"name": "Building_City_En",
						"type": "String"
					},
					{
						"name": "Building_City_Local",
						"type": "String"
					},
					{
						"name": "Building_Postcode",
						"type": "String"
					},
					{
						"name": "Building_MainTypeViewId",
						"type": "String"
					},
					{
						"name": "Building_MainTypeName_En",
						"type": "String"
					},
					{
						"name": "Building_MainTypeName_Local",
						"type": "String"
					},
					{
						"name": "Building_SubTypeViewId",
						"type": "String"
					},
					{
						"name": "Building_SubTypeName_En",
						"type": "String"
					},
					{
						"name": "Building_SubTypeName_Local",
						"type": "String"
					},
					{
						"name": "Building_BuildingNo",
						"type": "String"
					},
					{
						"name": "Building_IsStandbybuilding",
						"type": "String"
					},
					{
						"name": "Building_CostingNo",
						"type": "String"
					},
					{
						"name": "Building_CustomerNo",
						"type": "String"
					},
					{
						"name": "Building_SumOfTotalUnits",
						"type": "String"
					},
					{
						"name": "Building_SumOfUnitsInService",
						"type": "String"
					},
					{
						"name": "Building_QuickTurnover",
						"type": "String"
					},
					{
						"name": "Building_Latitude",
						"type": "String"
					},
					{
						"name": "Building_Longitude",
						"type": "String"
					},
					{
						"name": "Building_OfficeViewId",
						"type": "String"
					},
					{
						"name": "Building_OfficeName_En",
						"type": "String"
					},
					{
						"name": "Building_OfficeName_Local",
						"type": "String"
					},
					{
						"name": "Building_TKManagerEmployeeViewId",
						"type": "String"
					},
					{
						"name": "Building_TKManagerEmployeeExternalId",
						"type": "String"
					},
					{
						"name": "Building_TKManagerName",
						"type": "String"
					},
					{
						"name": "Building_IsRepairCorres",
						"type": "String"
					},
					{
						"name": "Building_IsCalendar",
						"type": "String"
					},
					{
						"name": "Building_IsGeneralCorres",
						"type": "String"
					},
					{
						"name": "Building_IsCard",
						"type": "String"
					},
					{
						"name": "Building_IsMonthlyReport",
						"type": "String"
					},
					{
						"name": "Building_UnitsScheduleHours",
						"type": "String"
					},
					{
						"name": "Building_UnitsScheduleHoursViewId",
						"type": "String"
					},
					{
						"name": "Building_UnitsScheduleTime",
						"type": "String"
					},
					{
						"name": "Building_UnitsScheduleTimeViewId",
						"type": "String"
					},
					{
						"name": "Building_UnitsScheduleDay",
						"type": "String"
					},
					{
						"name": "Building_UnitsScheduleDayViewId",
						"type": "String"
					},
					{
						"name": "Building_UnitsScheduleDayFrequency",
						"type": "String"
					},
					{
						"name": "Building_TargetCallRate",
						"type": "String"
					},
					{
						"name": "Array_RunInfo",
						"type": "String"
					},
					{
						"name": "RunInfo_RunTypeViewId",
						"type": "String"
					},
					{
						"name": "RunInfo_RunTypeName",
						"type": "String"
					},
					{
						"name": "RunInfo_RunViewId",
						"type": "String"
					},
					{
						"name": "RunInfo_RunName",
						"type": "String"
					},
					{
						"name": "RunInfo_BHSWPResponse",
						"type": "String"
					},
					{
						"name": "RunInfo_BHStopResponse",
						"type": "String"
					},
					{
						"name": "RunInfo_BHOthersResponse",
						"type": "String"
					},
					{
						"name": "RunInfo_AHSWPResponse",
						"type": "String"
					},
					{
						"name": "RunInfo_AHStopResponse",
						"type": "String"
					},
					{
						"name": "RunInfo_AHOthersResponse",
						"type": "String"
					},
					{
						"name": "RunInfo_Notes",
						"type": "String"
					},
					{
						"name": "RunInfo_PropertyManagerEmployeeViewId",
						"type": "String"
					},
					{
						"name": "RunInfo_PropertyManagerEmployeeName",
						"type": "String"
					},
					{
						"name": "Array_BusinessHourContactInfo",
						"type": "String"
					},
					{
						"name": "BusinessHourContactInfo_BHSiteContact",
						"type": "String"
					},
					{
						"name": "BusinessHourContactInfo_BHContactLocation_En",
						"type": "String"
					},
					{
						"name": "BusinessHourContactInfo_BHContactLocation_Local",
						"type": "String"
					},
					{
						"name": "BusinessHourContactInfo_BHContactPhone1",
						"type": "String"
					},
					{
						"name": "BusinessHourContactInfo_BHContactPhone2",
						"type": "String"
					},
					{
						"name": "BusinessHourContactInfo_BHContactMobile",
						"type": "String"
					},
					{
						"name": "BusinessHourContactInfo_BHContactFax",
						"type": "String"
					},
					{
						"name": "BusinessHourContactInfo_BHContactRoleViewId",
						"type": "String"
					},
					{
						"name": "BusinessHourContactInfo_BHContactRoleName",
						"type": "String"
					},
					{
						"name": "Array_AfterHourContactInfo",
						"type": "String"
					},
					{
						"name": "AfterHourContactInfo_AHSiteContact",
						"type": "String"
					},
					{
						"name": "AfterHourContactInfo_AHContactLocation_En",
						"type": "String"
					},
					{
						"name": "AfterHourContactInfo_AHContactLocation_Local",
						"type": "String"
					},
					{
						"name": "AfterHourContactInfo_AHContactPhone1",
						"type": "String"
					},
					{
						"name": "AfterHourContactInfo_AHContactMobile",
						"type": "String"
					},
					{
						"name": "AfterHourContactInfo_AHContactFax",
						"type": "String"
					},
					{
						"name": "AfterHourContactInfo_AHContactRoleViewId",
						"type": "String"
					},
					{
						"name": "AfterHourContactInfo_AHContactRoleViewName",
						"type": "String"
					},
					{
						"name": "AfterHourContactInfo_AHContactAccessCode",
						"type": "String"
					},
					{
						"name": "Array_BuildingContactInfo",
						"type": "String"
					},
					{
						"name": "BuildingContactInfo_ContactViewId",
						"type": "String"
					},
					{
						"name": "BuildingContactInfo_ContactExternalId",
						"type": "String"
					},
					{
						"name": "BuildingContactInfo_ContactName",
						"type": "String"
					},
					{
						"name": "BuildingContactInfo_IsBusinessHours",
						"type": "String"
					},
					{
						"name": "Building_VFMCustomerName_En",
						"type": "String"
					},
					{
						"name": "Building_VFMCustomerName_Local",
						"type": "String"
					},
					{
						"name": "Building_VFMCustomerMail",
						"type": "String"
					},
					{
						"name": "Building_VFMMailTemplateSubject",
						"type": "String"
					},
					{
						"name": "Building_VFMMailTemplateContent",
						"type": "String"
					},
					{
						"name": "Building_IsCustomisedMail",
						"type": "String"
					},
					{
						"name": "Building_ReportFrequencyViewId",
						"type": "String"
					},
					{
						"name": "Building_ReportFrequency",
						"type": "String"
					},
					{
						"name": "Building_ReportTypeViewId",
						"type": "String"
					},
					{
						"name": "Building_ReportType",
						"type": "String"
					},
					{
						"name": "Building_IsReportInvoice",
						"type": "String"
					},
					{
						"name": "Building_ReportSendTo",
						"type": "String"
					},
					{
						"name": "Building_ReportAuditRequired",
						"type": "String"
					},
					{
						"name": "Building_ReportAuditDetail",
						"type": "String"
					},
					{
						"name": "Building_ReportServiceDockets",
						"type": "String"
					},
					{
						"name": "Building_FromProjectId",
						"type": "String"
					},
					{
						"name": "Building_FromProjectLabel",
						"type": "String"
					},
					{
						"name": "Array_BuildingCustomerInfo",
						"type": "String"
					},
					{
						"name": "BuildingCustomerInfo_CustomerViewId",
						"type": "String"
					},
					{
						"name": "BuildingCustomerInfo_CustomerExternalId",
						"type": "String"
					},
					{
						"name": "BuildingCustomerInfo_CustomerName",
						"type": "String"
					},
					{
						"name": "Array_State",
						"type": "String"
					},
					{
						"name": "State_ViewId",
						"type": "String"
					},
					{
						"name": "State_Name",
						"type": "String"
					},
					{
						"name": "Builiding_TimeZone",
						"type": "String"
					},
					{
						"name": "Builiding_CustomerCode",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSMohamed')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ABLBMohamedBlob2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "header"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ABLBMohamedBlob2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ABLBMohamedBlob2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "customercontactpoints"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ABLBMohamedBlob2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText6')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSMohamed",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "tableSQLunit",
						"fileSystem": "unit"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSMohamed')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText7')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSMohamed",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSMohamed')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText8')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Parts_MFG_Part_Number_20210105151636 (1).xlsx",
						"fileSystem": "inventory"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText9')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "inventoryoutput"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedTextflattenedbuilding')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ABLBMohamedBlob2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "flattened.csv",
						"container": "flatenedcsv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerCode",
						"type": "String"
					},
					{
						"name": "HashKey",
						"type": "String"
					},
					{
						"name": "ETL_Load_Date_Time",
						"type": "String"
					},
					{
						"name": "type",
						"type": "String"
					},
					{
						"name": "ExternalBuildingId",
						"type": "String"
					},
					{
						"name": "BuildingName_local",
						"type": "String"
					},
					{
						"name": "StreetAddress_Local",
						"type": "String"
					},
					{
						"name": "City_Local",
						"type": "String"
					},
					{
						"name": "Postcode",
						"type": "String"
					},
					{
						"name": "MainTypeViewId",
						"type": "String"
					},
					{
						"name": "MainTypeName_En",
						"type": "String"
					},
					{
						"name": "SubTypeViewId",
						"type": "String"
					},
					{
						"name": "SubTypeName_En",
						"type": "String"
					},
					{
						"name": "BuildingNo",
						"type": "String"
					},
					{
						"name": "CustomerNo",
						"type": "String"
					},
					{
						"name": "SumOfTotalUnits",
						"type": "String"
					},
					{
						"name": "SumOfUnitsInService",
						"type": "String"
					},
					{
						"name": "TargetCallRate",
						"type": "String"
					},
					{
						"name": "Notes",
						"type": "String"
					},
					{
						"name": "BHContactPhone1",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "TimeZone",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ABLBMohamedBlob2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Delimitedaddressidl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ABLBMohamedBlob2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "address"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ABLBMohamedBlob2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Delimitedmfg')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "inventoryoutput"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "MANUFACTURER",
						"type": "String"
					},
					{
						"name": "DESCRIPTION",
						"type": "String"
					},
					{
						"name": "PART_NUMBER",
						"type": "String"
					},
					{
						"name": "ITEM_NUMBER",
						"type": "String"
					},
					{
						"name": "ORG_NAME",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_b21')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AccountKey",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "ParentAccountKey",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "AccountCodeAlternateKey",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "ParentAccountCodeAlternateKey",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "AccountDescription",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "AccountType",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Operator",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "CustomMembers",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ValueType",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "CustomMemberOptions",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimAccount"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_gv3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "topmovies",
					"table": "Azure Blob Storage file"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_s88')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Index",
						"type": "bigint",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "MovieTitle",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "topmovies"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DriveType')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UnitId FK",
						"type": "varchar"
					},
					{
						"name": "Equipment Id FK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DriveType_ViewID",
						"type": "varchar"
					},
					{
						"name": "DriveType_ExternalID",
						"type": "varchar"
					},
					{
						"name": "DriveType_Name1",
						"type": "varchar"
					},
					{
						"name": "DriveType_Name2",
						"type": "varchar"
					},
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "unit",
					"table": "DriveType"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EQUIPMENT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UnitId FK",
						"type": "varchar"
					},
					{
						"name": "Floors",
						"type": "varchar"
					},
					{
						"name": "NumberofFrontOpenings",
						"type": "varchar"
					},
					{
						"name": "NumberofRearOpenings",
						"type": "varchar"
					},
					{
						"name": "Unit_CapacityLbs",
						"type": "varchar"
					},
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "unit",
					"table": "EQUIPMENT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EQUIPMENTType')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UnitId FK",
						"type": "varchar"
					},
					{
						"name": "Equipment Id FK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EquipmentType_ViewID",
						"type": "varchar"
					},
					{
						"name": "EquipmentType_ExternalID",
						"type": "varchar"
					},
					{
						"name": "EquipmentType_Okeefe_EquipName",
						"type": "varchar"
					},
					{
						"name": "EquipmentType_TKE_EquipClassification",
						"type": "varchar"
					},
					{
						"name": "NumberofRearOpenings",
						"type": "varchar"
					},
					{
						"name": "Unit_CapacityLbs",
						"type": "varchar"
					},
					{
						"name": "EquipmentType_TKE_EquipName",
						"type": "varchar"
					},
					{
						"name": "id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "unit",
					"table": "EQUIPMENT Type"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EQUIPMENTTypeSQl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UnitId FK",
						"type": "varchar"
					},
					{
						"name": "Equipment Id FK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EquipmentType_ViewID",
						"type": "varchar"
					},
					{
						"name": "EquipmentType_ExternalID",
						"type": "varchar"
					},
					{
						"name": "EquipmentType_Okeefe_EquipName",
						"type": "varchar"
					},
					{
						"name": "EquipmentType_TKE_EquipClassification",
						"type": "varchar"
					},
					{
						"name": "NumberofRearOpenings",
						"type": "varchar"
					},
					{
						"name": "Unit_CapacityLbs",
						"type": "varchar"
					},
					{
						"name": "EquipmentType_TKE_EquipName",
						"type": "varchar"
					},
					{
						"name": "id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "unit",
					"table": "EQUIPMENT Type"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Excel1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ORA_FD02_CustomerBillToContacts_20201005163753.xlsx",
						"container": "customerbilltocontacts"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Customer Header Reference",
						"type": "String"
					},
					{
						"name": "Address Reference",
						"type": "String"
					},
					{
						"name": "Contact Reference",
						"type": "String"
					},
					{
						"name": "Contact Point Reference",
						"type": "String"
					},
					{
						"name": "Contact_First_Name",
						"type": "String"
					},
					{
						"name": "Contact_Last_Name",
						"type": "String"
					},
					{
						"name": "Contact Point Type",
						"type": "String"
					},
					{
						"name": "Phone Country Code",
						"type": "String"
					},
					{
						"name": "Area Code",
						"type": "String"
					},
					{
						"name": "Telephone Number",
						"type": "String"
					},
					{
						"name": "Phone Extension",
						"type": "String"
					},
					{
						"name": "EMAIL Address",
						"type": "String"
					},
					{
						"name": "Invoice Delivery Method",
						"type": "String"
					},
					{
						"name": "Operating Unit Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Excel2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSMohamed",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "View_Building_20201104172958.xlsx",
						"fileSystem": "customerdm11032020"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Building_ExternalBuildingId",
						"type": "String"
					},
					{
						"name": "Building_BuildingName_local",
						"type": "String"
					},
					{
						"name": "Building_BuildingName_en",
						"type": "String"
					},
					{
						"name": "Building_Height",
						"type": "String"
					},
					{
						"name": "Building_StreetAddress_En",
						"type": "String"
					},
					{
						"name": "Building_StreetAddress_Local",
						"type": "String"
					},
					{
						"name": "Building_Suburb_En",
						"type": "String"
					},
					{
						"name": "Building_Suburb_Local",
						"type": "String"
					},
					{
						"name": "Building_City_En",
						"type": "String"
					},
					{
						"name": "Building_City_Local",
						"type": "String"
					},
					{
						"name": "Building_Postcode",
						"type": "String"
					},
					{
						"name": "Building_MainTypeViewId",
						"type": "String"
					},
					{
						"name": "Building_MainTypeName_En",
						"type": "String"
					},
					{
						"name": "Building_MainTypeName_Local",
						"type": "String"
					},
					{
						"name": "Building_SubTypeViewId",
						"type": "String"
					},
					{
						"name": "Building_SubTypeName_En",
						"type": "String"
					},
					{
						"name": "Building_SubTypeName_Local",
						"type": "String"
					},
					{
						"name": "Building_BuildingNo",
						"type": "String"
					},
					{
						"name": "Building_IsStandbybuilding",
						"type": "String"
					},
					{
						"name": "Building_CostingNo",
						"type": "String"
					},
					{
						"name": "Building_CustomerNo",
						"type": "String"
					},
					{
						"name": "Building_SumOfTotalUnits",
						"type": "String"
					},
					{
						"name": "Building_SumOfUnitsInService",
						"type": "String"
					},
					{
						"name": "Building_QuickTurnover",
						"type": "String"
					},
					{
						"name": "Building_Latitude",
						"type": "String"
					},
					{
						"name": "Building_Longitude",
						"type": "String"
					},
					{
						"name": "Building_OfficeViewId",
						"type": "String"
					},
					{
						"name": "Building_OfficeName_En",
						"type": "String"
					},
					{
						"name": "Building_OfficeName_Local",
						"type": "String"
					},
					{
						"name": "Building_TKManagerEmployeeViewId",
						"type": "String"
					},
					{
						"name": "Building_TKManagerEmployeeExternalId",
						"type": "String"
					},
					{
						"name": "Building_TKManagerName",
						"type": "String"
					},
					{
						"name": "Building_IsRepairCorres",
						"type": "String"
					},
					{
						"name": "Building_IsCalendar",
						"type": "String"
					},
					{
						"name": "Building_IsGeneralCorres",
						"type": "String"
					},
					{
						"name": "Building_IsCard",
						"type": "String"
					},
					{
						"name": "Building_IsMonthlyReport",
						"type": "String"
					},
					{
						"name": "Building_UnitsScheduleHours",
						"type": "String"
					},
					{
						"name": "Building_UnitsScheduleHoursViewId",
						"type": "String"
					},
					{
						"name": "Building_UnitsScheduleTime",
						"type": "String"
					},
					{
						"name": "Building_UnitsScheduleTimeViewId",
						"type": "String"
					},
					{
						"name": "Building_UnitsScheduleDay",
						"type": "String"
					},
					{
						"name": "Building_UnitsScheduleDayViewId",
						"type": "String"
					},
					{
						"name": "Building_UnitsScheduleDayFrequency",
						"type": "String"
					},
					{
						"name": "Building_TargetCallRate",
						"type": "String"
					},
					{
						"name": "Array_RunInfo",
						"type": "String"
					},
					{
						"name": "RunInfo_RunTypeViewId",
						"type": "String"
					},
					{
						"name": "RunInfo_RunTypeName",
						"type": "String"
					},
					{
						"name": "RunInfo_RunViewId",
						"type": "String"
					},
					{
						"name": "RunInfo_RunName",
						"type": "String"
					},
					{
						"name": "RunInfo_BHSWPResponse",
						"type": "String"
					},
					{
						"name": "RunInfo_BHStopResponse",
						"type": "String"
					},
					{
						"name": "RunInfo_BHOthersResponse",
						"type": "String"
					},
					{
						"name": "RunInfo_AHSWPResponse",
						"type": "String"
					},
					{
						"name": "RunInfo_AHStopResponse",
						"type": "String"
					},
					{
						"name": "RunInfo_AHOthersResponse",
						"type": "String"
					},
					{
						"name": "RunInfo_Notes",
						"type": "String"
					},
					{
						"name": "RunInfo_PropertyManagerEmployeeViewId",
						"type": "String"
					},
					{
						"name": "RunInfo_PropertyManagerEmployeeName",
						"type": "String"
					},
					{
						"name": "Array_BusinessHourContactInfo",
						"type": "String"
					},
					{
						"name": "BusinessHourContactInfo_BHSiteContact",
						"type": "String"
					},
					{
						"name": "BusinessHourContactInfo_BHContactLocation_En",
						"type": "String"
					},
					{
						"name": "BusinessHourContactInfo_BHContactLocation_Local",
						"type": "String"
					},
					{
						"name": "BusinessHourContactInfo_BHContactPhone1",
						"type": "String"
					},
					{
						"name": "BusinessHourContactInfo_BHContactPhone2",
						"type": "String"
					},
					{
						"name": "BusinessHourContactInfo_BHContactMobile",
						"type": "String"
					},
					{
						"name": "BusinessHourContactInfo_BHContactFax",
						"type": "String"
					},
					{
						"name": "BusinessHourContactInfo_BHContactRoleViewId",
						"type": "String"
					},
					{
						"name": "BusinessHourContactInfo_BHContactRoleName",
						"type": "String"
					},
					{
						"name": "Array_AfterHourContactInfo",
						"type": "String"
					},
					{
						"name": "AfterHourContactInfo_AHSiteContact",
						"type": "String"
					},
					{
						"name": "AfterHourContactInfo_AHContactLocation_En",
						"type": "String"
					},
					{
						"name": "AfterHourContactInfo_AHContactLocation_Local",
						"type": "String"
					},
					{
						"name": "AfterHourContactInfo_AHContactPhone1",
						"type": "String"
					},
					{
						"name": "AfterHourContactInfo_AHContactMobile",
						"type": "String"
					},
					{
						"name": "AfterHourContactInfo_AHContactFax",
						"type": "String"
					},
					{
						"name": "AfterHourContactInfo_AHContactRoleViewId",
						"type": "String"
					},
					{
						"name": "AfterHourContactInfo_AHContactRoleViewName",
						"type": "String"
					},
					{
						"name": "AfterHourContactInfo_AHContactAccessCode",
						"type": "String"
					},
					{
						"name": "Array_BuildingContactInfo",
						"type": "String"
					},
					{
						"name": "BuildingContactInfo_ContactViewId",
						"type": "String"
					},
					{
						"name": "BuildingContactInfo_ContactExternalId",
						"type": "String"
					},
					{
						"name": "BuildingContactInfo_ContactName",
						"type": "String"
					},
					{
						"name": "BuildingContactInfo_IsBusinessHours",
						"type": "String"
					},
					{
						"name": "Building_VFMCustomerName_En",
						"type": "String"
					},
					{
						"name": "Building_VFMCustomerName_Local",
						"type": "String"
					},
					{
						"name": "Building_VFMCustomerMail",
						"type": "String"
					},
					{
						"name": "Building_VFMMailTemplateSubject",
						"type": "String"
					},
					{
						"name": "Building_VFMMailTemplateContent",
						"type": "String"
					},
					{
						"name": "Building_IsCustomisedMail",
						"type": "String"
					},
					{
						"name": "Building_ReportFrequencyViewId",
						"type": "String"
					},
					{
						"name": "Building_ReportFrequency",
						"type": "String"
					},
					{
						"name": "Building_ReportTypeViewId",
						"type": "String"
					},
					{
						"name": "Building_ReportType",
						"type": "String"
					},
					{
						"name": "Building_IsReportInvoice",
						"type": "String"
					},
					{
						"name": "Building_ReportSendTo",
						"type": "String"
					},
					{
						"name": "Building_ReportAuditRequired",
						"type": "String"
					},
					{
						"name": "Building_ReportAuditDetail",
						"type": "String"
					},
					{
						"name": "Building_ReportServiceDockets",
						"type": "String"
					},
					{
						"name": "Building_FromProjectId",
						"type": "String"
					},
					{
						"name": "Building_FromProjectLabel",
						"type": "String"
					},
					{
						"name": "Array_BuildingCustomerInfo",
						"type": "String"
					},
					{
						"name": "BuildingCustomerInfo_CustomerViewId",
						"type": "String"
					},
					{
						"name": "BuildingCustomerInfo_CustomerExternalId",
						"type": "String"
					},
					{
						"name": "BuildingCustomerInfo_CustomerName",
						"type": "String"
					},
					{
						"name": "Array_State",
						"type": "String"
					},
					{
						"name": "State_ViewId",
						"type": "String"
					},
					{
						"name": "State_Name",
						"type": "String"
					},
					{
						"name": "Builiding_TimeZone",
						"type": "String"
					},
					{
						"name": "Builiding_CustomerCode",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSMohamed')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Excel3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ABLBMohamedBlob2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Parts_MFG_Part_Number_20210105151636 (1).xlsx",
						"container": "inventory"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "MANUFACTURER",
						"type": "String"
					},
					{
						"name": "DESCRIPTION",
						"type": "String"
					},
					{
						"name": "PART_NUMBER",
						"type": "String"
					},
					{
						"name": "ITEM_NUMBER",
						"type": "String"
					},
					{
						"name": "ORG_NAME",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ABLBMohamedBlob2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Excel4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "TRANSACTIONS",
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "transaction",
						"fileSystem": "inventory"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Excel5demoMFG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "MFG",
						"fileSystem": "inventory"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "MANUFACTURER",
						"type": "String"
					},
					{
						"name": "DESCRIPTION",
						"type": "String"
					},
					{
						"name": "PART_NUMBER",
						"type": "String"
					},
					{
						"name": "ITEM_NUMBER",
						"type": "String"
					},
					{
						"name": "ORG_NAME",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExcelCross_Reference')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Cross_Reference",
						"fileSystem": "inventory"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExcelCustomerAddress')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSMohamed",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ORA_FD02_CustomerAddress_20201104145318.xlsx",
						"fileSystem": "customerdm11032020"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Customer_Name",
						"type": "String"
					},
					{
						"name": "Customer_Header_Reference",
						"type": "String"
					},
					{
						"name": "Address_Reference",
						"type": "String"
					},
					{
						"name": "Site_Use_Code",
						"type": "String"
					},
					{
						"name": "Primary_Site_Use_Flag",
						"type": "String"
					},
					{
						"name": "Location",
						"type": "String"
					},
					{
						"name": "Bill_To_Orig_Address_Reference",
						"type": "String"
					},
					{
						"name": "Address_Line_1",
						"type": "String"
					},
					{
						"name": "Address_Line_2",
						"type": "String"
					},
					{
						"name": "Address_Line_3",
						"type": "String"
					},
					{
						"name": "Address_Line_4",
						"type": "String"
					},
					{
						"name": "Address_Lines_Phonetic",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "Province",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "Postal_Code",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "Receivables_Account",
						"type": "String"
					},
					{
						"name": "Revenue_Account",
						"type": "String"
					},
					{
						"name": "Tax_Account",
						"type": "String"
					},
					{
						"name": "Freight_Account",
						"type": "String"
					},
					{
						"name": "Clearing_Account",
						"type": "String"
					},
					{
						"name": "Unbilled_Receivables_Account",
						"type": "String"
					},
					{
						"name": "Unearned_Revenue_Account",
						"type": "String"
					},
					{
						"name": "Payment_Method_Name",
						"type": "String"
					},
					{
						"name": "Payment_Method_Primary_Flag",
						"type": "String"
					},
					{
						"name": "Customer_Profile",
						"type": "String"
					},
					{
						"name": "Site_Use_Tax_Reference",
						"type": "String"
					},
					{
						"name": "Time_Zone",
						"type": "String"
					},
					{
						"name": "Language",
						"type": "String"
					},
					{
						"name": "Contributor_Class_at_Account_Site",
						"type": "String"
					},
					{
						"name": "Use_Cust_Site_Profile_Flag_at_Account_Site",
						"type": "String"
					},
					{
						"name": "Contributor_Class_at_Account_Site_Use",
						"type": "String"
					},
					{
						"name": "Use_Cust_Site_Profile_Flag_at_Account_Site_Use",
						"type": "String"
					},
					{
						"name": "Economic_Activity",
						"type": "String"
					},
					{
						"name": "Operating_Unit_Name",
						"type": "String"
					},
					{
						"name": "Payment_Term_Name",
						"type": "String"
					},
					{
						"name": "Concept_Code_(CR)",
						"type": "String"
					},
					{
						"name": "Giro_(CL)",
						"type": "String"
					},
					{
						"name": "US_Remit-to_Address_Mapping",
						"type": "String"
					},
					{
						"name": "US_Tax_Area_Id",
						"type": "String"
					},
					{
						"name": "Union_Local",
						"type": "String"
					},
					{
						"name": "TAID_User_Override",
						"type": "String"
					},
					{
						"name": "TAID_Last_Checked",
						"type": "String"
					},
					{
						"name": "TAID_Assignment_Result",
						"type": "String"
					},
					{
						"name": "TAID_Confidence_Indicator",
						"type": "String"
					},
					{
						"name": "TAID_Precision",
						"type": "String"
					},
					{
						"name": "CRM_Account",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSMohamed')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExcelCustomerBillToContacts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ORA_FD02_CustomerBillToContacts_20201104153540.xlsx",
						"container": "customerdm11032020"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Customer_Header_Reference",
						"type": "String"
					},
					{
						"name": "Address_Reference",
						"type": "String"
					},
					{
						"name": "Contact_Reference",
						"type": "String"
					},
					{
						"name": "Contact_Point Reference",
						"type": "String"
					},
					{
						"name": "Contact_First_Name",
						"type": "String"
					},
					{
						"name": "Contact_Last_Name",
						"type": "String"
					},
					{
						"name": "Contact Point_Type",
						"type": "String"
					},
					{
						"name": "Phone_Country_Code",
						"type": "String"
					},
					{
						"name": "Area_Code",
						"type": "String"
					},
					{
						"name": "Telephone_Number",
						"type": "String"
					},
					{
						"name": "Phone_Extension",
						"type": "String"
					},
					{
						"name": "EMAIL_Address",
						"type": "String"
					},
					{
						"name": "Invoice_Delivery_Method",
						"type": "String"
					},
					{
						"name": "Operating_Unit_Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExcelCustomerContactPoints')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSMohamed",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ORA_FD02_CustomerContactPoints_20201104161140.xlsx",
						"fileSystem": "customerdm11032020"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Customer_Header_Reference",
						"type": "String"
					},
					{
						"name": "Address_Reference",
						"type": "String"
					},
					{
						"name": "Contact_Point_Type",
						"type": "String"
					},
					{
						"name": "Contact_Point_Status",
						"type": "String"
					},
					{
						"name": "Primary_Flag",
						"type": "String"
					},
					{
						"name": "Contact_Point_Purpose",
						"type": "String"
					},
					{
						"name": "Phone_Country_Code",
						"type": "String"
					},
					{
						"name": "Phone_Area_Code",
						"type": "String"
					},
					{
						"name": "Phone_Number",
						"type": "String"
					},
					{
						"name": "Phone_Extension",
						"type": "String"
					},
					{
						"name": "Phone_Line_Type",
						"type": "String"
					},
					{
						"name": "Email_Address",
						"type": "String"
					},
					{
						"name": "Email_Format",
						"type": "String"
					},
					{
						"name": "Operating_Unit_Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSMohamed')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExcelDefault_Subinventories')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Transaction_Default_Subinventories",
						"fileSystem": "inventory"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "ITEM_NUMBER",
						"type": "String"
					},
					{
						"name": "ORGANIZATION_CODE",
						"type": "String"
					},
					{
						"name": "SUBINVENTORY_NAME",
						"type": "String"
					},
					{
						"name": "ORG_NAME",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExcelItem_Category_Assignment')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "categoryassignment",
						"fileSystem": "inventory"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "ITEM_NUMBER",
						"type": "String"
					},
					{
						"name": "CATEGORY_SET_NAME",
						"type": "String"
					},
					{
						"name": "CONCAT_CATEGORY_NAME",
						"type": "String"
					},
					{
						"name": "ORANIZATION_CODE",
						"type": "String"
					},
					{
						"name": "ORG_NAME",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExcelMFG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "MFG",
						"fileSystem": "inventory"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "MANUFACTURER",
						"type": "String"
					},
					{
						"name": "DESCRIPTION",
						"type": "String"
					},
					{
						"name": "PART_NUMBER",
						"type": "String"
					},
					{
						"name": "ITEM_NUMBER",
						"type": "String"
					},
					{
						"name": "ORG_NAME",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Excelheader')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSMohamed",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ORA_FD02_CustomerHeader_20201104103740.xlsx",
						"fileSystem": "customerdm11032020"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSMohamed')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FullRawDataExtract20201005')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Full Raw Data Extract_20201005",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "OKeefe Data Collection_20201006GS.xlsx",
						"container": "unit"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Unit_ViewID",
						"type": "String"
					},
					{
						"name": "Unit_ID",
						"type": "String"
					},
					{
						"name": "Array_UnitAttributes",
						"type": "String"
					},
					{
						"name": "Array_EquipmentIdentification",
						"type": "String"
					},
					{
						"name": "Array_Building",
						"type": "String"
					},
					{
						"name": "Building_ViewID",
						"type": "String"
					},
					{
						"name": "Building_ExternalID",
						"type": "String"
					},
					{
						"name": "Building_BuildingNo",
						"type": "String"
					},
					{
						"name": "Building_Name",
						"type": "String"
					},
					{
						"name": "Building_Name2",
						"type": "String"
					},
					{
						"name": "MarketSegment",
						"type": "String"
					},
					{
						"name": "Service_Address1",
						"type": "String"
					},
					{
						"name": "Service_Address2",
						"type": "String"
					},
					{
						"name": "Service_City",
						"type": "String"
					},
					{
						"name": "Service_State",
						"type": "String"
					},
					{
						"name": "ServiceLocation_Zip",
						"type": "String"
					},
					{
						"name": "Array_ElevatorBank",
						"type": "String"
					},
					{
						"name": "ElevatorBank_ViewID",
						"type": "String"
					},
					{
						"name": "ElevatorBank_ExternalID",
						"type": "String"
					},
					{
						"name": "ElevatorBank_BankName",
						"type": "String"
					},
					{
						"name": "ElevatorBank_AccessCode",
						"type": "String"
					},
					{
						"name": "Array_Branch",
						"type": "String"
					},
					{
						"name": "Branch_ViewID",
						"type": "String"
					},
					{
						"name": "BranchName1",
						"type": "String"
					},
					{
						"name": "BranchName2",
						"type": "String"
					},
					{
						"name": "Unit_GovernmentID",
						"type": "String"
					},
					{
						"name": "Unit_NickName",
						"type": "String"
					},
					{
						"name": "Customer_BillingReference",
						"type": "String"
					},
					{
						"name": "Unit_DownInd",
						"type": "String"
					},
					{
						"name": "Unit_RegisteredNo",
						"type": "String"
					},
					{
						"name": "Unit_MfgYear",
						"type": "String"
					},
					{
						"name": "Array_Equipment",
						"type": "String"
					},
					{
						"name": "Array_EquipmentType",
						"type": "String"
					},
					{
						"name": "EquipmentType_Okeefe_EquipName",
						"type": "String"
					},
					{
						"name": "EquipmentType_TKE_EquipName",
						"type": "String"
					},
					{
						"name": "EquipmentType_TKE_EquipClassification",
						"type": "String"
					},
					{
						"name": "Array_Manufacturer",
						"type": "String"
					},
					{
						"name": "Manufacturer_VIEWId",
						"type": "String"
					},
					{
						"name": "Manufacturer_ExternalID",
						"type": "String"
					},
					{
						"name": "Manufacturer_Name1",
						"type": "String"
					},
					{
						"name": "Manufacturer_Name2",
						"type": "String"
					},
					{
						"name": "Array_Controller1",
						"type": "String"
					},
					{
						"name": "Controller_Name1",
						"type": "String"
					},
					{
						"name": "Array_DriveType",
						"type": "String"
					},
					{
						"name": "DriveType_Name1",
						"type": "String"
					},
					{
						"name": "NumberofFloors",
						"type": "String"
					},
					{
						"name": "NumberofFrontOpenings",
						"type": "String"
					},
					{
						"name": "Array_Maintenance",
						"type": "String"
					},
					{
						"name": "Array_MaintenanceRun",
						"type": "String"
					},
					{
						"name": "MaintenanceRun_ViewID",
						"type": "String"
					},
					{
						"name": "MaintenanceRun_ExternalID",
						"type": "String"
					},
					{
						"name": "MaintenanceRun_RouteNo_TerritoryCode",
						"type": "String"
					},
					{
						"name": "Array_DefaultScheduling",
						"type": "String"
					},
					{
						"name": "Array_HoursPerVisit",
						"type": "String"
					},
					{
						"name": "HoursPerVisit_ViewID",
						"type": "String"
					},
					{
						"name": "HoursPerVisit",
						"type": "String"
					},
					{
						"name": "VisitsPerYear",
						"type": "String"
					},
					{
						"name": "SLA_AnnualVisitsRequired",
						"type": "String"
					},
					{
						"name": "SLA_VisitsRequired",
						"type": "String"
					},
					{
						"name": "SLA_HoursRequiredPerVisit",
						"type": "String"
					},
					{
						"name": "SLA_HoursRequired",
						"type": "String"
					},
					{
						"name": "SLA_Comments",
						"type": "String"
					},
					{
						"name": "TechnicianNotes",
						"type": "String"
					},
					{
						"name": "Unit_WarrantyStartDate",
						"type": "String"
					},
					{
						"name": "Unit_WarrantyEndDate",
						"type": "String"
					},
					{
						"name": "Unit_InstallDate",
						"type": "String"
					},
					{
						"name": "Unit_HandoverDate",
						"type": "String"
					},
					{
						"name": "AnnualSafetyTest_LastInspectionDate",
						"type": "String"
					},
					{
						"name": "AnnualSafetyTest_NextInspectionDueDate",
						"type": "String"
					},
					{
						"name": "AnnualSafetyTest_CoveredInContract",
						"type": "String"
					},
					{
						"name": "PeriodicSafetyTest_LastInspectionDate",
						"type": "String"
					},
					{
						"name": "PeriodicSafetyTest_Frequency",
						"type": "String"
					},
					{
						"name": "PeriodicSafetyTest_NextInspectionDueDate",
						"type": "String"
					},
					{
						"name": "PeriodicSafetyTest_CoveredInContract",
						"type": "String"
					},
					{
						"name": "FiremansRecall_LastInspectionDate",
						"type": "String"
					},
					{
						"name": "FiremansRecall_ Frequency",
						"type": "String"
					},
					{
						"name": "Unit_JobNo",
						"type": "String"
					},
					{
						"name": "Unit_FactorySerialNo",
						"type": "String"
					},
					{
						"name": "Unit_Smart_ExternalID",
						"type": "String"
					},
					{
						"name": "Unit_Smart_InstallationDate",
						"type": "String"
					},
					{
						"name": "Array_Contract",
						"type": "String"
					},
					{
						"name": "Contract_ViewID",
						"type": "String"
					},
					{
						"name": "Contract_ExternalID",
						"type": "String"
					},
					{
						"name": "Contract_StartDate",
						"type": "String"
					},
					{
						"name": "Contract_EndDate",
						"type": "String"
					},
					{
						"name": "Contract_MoValue",
						"type": "String"
					},
					{
						"name": "ContractNo",
						"type": "String"
					},
					{
						"name": "ContractCoverage",
						"type": "String"
					},
					{
						"name": "NumberofRearOpenings",
						"type": "String"
					},
					{
						"name": "Unit_CapacityLbs",
						"type": "String"
					},
					{
						"name": "Array_Speed",
						"type": "String"
					},
					{
						"name": "Speed_ViewID",
						"type": "String"
					},
					{
						"name": "Speed_FPM",
						"type": "String"
					},
					{
						"name": "Array_FrontDoorComplexity",
						"type": "String"
					},
					{
						"name": "FrontDoorComplexity_ViewID",
						"type": "String"
					},
					{
						"name": "FrontDoorComplexity_Name",
						"type": "String"
					},
					{
						"name": "Array_RearDoorComplexity",
						"type": "String"
					},
					{
						"name": "RearDoorComplexity_ViewID",
						"type": "String"
					},
					{
						"name": "RearDoorComplexity_Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Header')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ORA_FD02_CustomerHeader20201005164552.xlsx",
						"container": "header"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Customer Name",
						"type": "String"
					},
					{
						"name": "Customer Party Reference Number",
						"type": "String"
					},
					{
						"name": "Customer Account Reference Number",
						"type": "String"
					},
					{
						"name": "Customer Type",
						"type": "String"
					},
					{
						"name": "Customer Profile",
						"type": "String"
					},
					{
						"name": "Payment Method Name",
						"type": "String"
					},
					{
						"name": "Payment Method Primary Flag",
						"type": "String"
					},
					{
						"name": "Global Customer Flag",
						"type": "String"
					},
					{
						"name": "Origin (AR)",
						"type": "String"
					},
					{
						"name": "Primary ID Type",
						"type": "String"
					},
					{
						"name": "Primary ID Validation Digit",
						"type": "String"
					},
					{
						"name": "Taxpayer ID",
						"type": "String"
					},
					{
						"name": "Fiscal Classification Type Code",
						"type": "String"
					},
					{
						"name": "Fiscal Classification Code",
						"type": "String"
					},
					{
						"name": "Effective Date From",
						"type": "String"
					},
					{
						"name": "Document Type (CO)",
						"type": "String"
					},
					{
						"name": "Taxpayer ID (CO)",
						"type": "String"
					},
					{
						"name": "Nature (CO)",
						"type": "String"
					},
					{
						"name": "Regimen (CO)",
						"type": "String"
					},
					{
						"name": "Special Customer Flag",
						"type": "String"
					},
					{
						"name": "Operating Unit Name",
						"type": "String"
					},
					{
						"name": "Customer Class Code",
						"type": "String"
					},
					{
						"name": "Payment Term Name",
						"type": "String"
					},
					{
						"name": "Order Number of the Cedula (GT)",
						"type": "String"
					},
					{
						"name": "Register Number of the Cedula (GT)",
						"type": "String"
					},
					{
						"name": "Document Type (SV)",
						"type": "String"
					},
					{
						"name": "Contributor Regristry number (SV)",
						"type": "String"
					},
					{
						"name": "Person Category (PE)",
						"type": "String"
					},
					{
						"name": "Person Type (PE)",
						"type": "String"
					},
					{
						"name": "Document Type (PE)",
						"type": "String"
					},
					{
						"name": "Document Number (PE)",
						"type": "String"
					},
					{
						"name": "Last Name (PE)",
						"type": "String"
					},
					{
						"name": "Second Last Name (PE)",
						"type": "String"
					},
					{
						"name": "First Name (PE)",
						"type": "String"
					},
					{
						"name": "Middle Name (PE)",
						"type": "String"
					},
					{
						"name": "Origin",
						"type": "String"
					},
					{
						"name": "Nature",
						"type": "String"
					},
					{
						"name": "Document Type (UY)",
						"type": "String"
					},
					{
						"name": "Perception Agent (PE)",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Item_Header')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Item_Header",
						"fileSystem": "inventory"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "unit"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JsonBuildingToJson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSMohamed",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "customerdm11032020"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSMohamed')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Jsonbuilding')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSMohamed",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "bld",
						"fileSystem": "customerdm11032020"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSMohamed')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Jsonbuilding1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSMohamed",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "customerdm11032020"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSMohamed')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MFG_Part_Number')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ABLBMohamedBlob2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Parts_MFG_Part_Number_20210105151636 (1).xlsx",
						"container": "inventory"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "MANUFACTURER",
						"type": "String"
					},
					{
						"name": "DESCRIPTION",
						"type": "String"
					},
					{
						"name": "PART_NUMBER",
						"type": "String"
					},
					{
						"name": "ITEM_NUMBER",
						"type": "String"
					},
					{
						"name": "ORG_NAME",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ABLBMohamedBlob2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Manufacturer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UnitId FK",
						"type": "varchar"
					},
					{
						"name": "Equipment Id FK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Manufacturer_VIEWId",
						"type": "varchar"
					},
					{
						"name": "Manufacturer_ExternalID",
						"type": "varchar"
					},
					{
						"name": "Manufacturer_Name1",
						"type": "varchar"
					},
					{
						"name": "Manufacturer_Name2",
						"type": "varchar"
					},
					{
						"name": "AfterHoursCallbackRun_ExternalID",
						"type": "varchar"
					},
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "unit",
					"table": "Manufacturer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage3",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Table_Name": {
						"type": "string"
					},
					"table_catalog_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@{item().Table_Name}/@{formatDateTime(utcnow(),'yyyy')}/@{formatDateTime(utcnow(),'MM')}/@{formatDateTime(utcnow(),'dd')}/@{item().Table_Name}@{formatDateTime(utcnow(),'HH')}",
							"type": "Expression"
						},
						"folderPath": "tableSQLunit",
						"fileSystem": "unit"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSMohamed",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "unit"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSMohamed')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string"
					},
					"tablecatalogname": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "address"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parts_Inventorytransactions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ABLBMohamedBlob2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "TRANSACTIONS",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Parts_Inventory_Transactions_20210105151858.xlsx",
						"container": "inventory"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "ITEM_NUMBER",
						"type": "String"
					},
					{
						"name": "ORGANIZATION_CODE",
						"type": "String"
					},
					{
						"name": "SUBINVENTORY_NAME",
						"type": "String"
					},
					{
						"name": "TRANSACTION_QUANTITY",
						"type": "String"
					},
					{
						"name": "TRANSACTION_DATE",
						"type": "String"
					},
					{
						"name": "TRANSACTION_REFERENCE",
						"type": "String"
					},
					{
						"name": "LOCATOR_NAME",
						"type": "String"
					},
					{
						"name": "TRANSACTION_COST",
						"type": "String"
					},
					{
						"name": "FM_SERIAL_NUMBER",
						"type": "String"
					},
					{
						"name": "TO_SERIAL_NUMBER",
						"type": "String"
					},
					{
						"name": "Distribution_Account",
						"type": "String"
					},
					{
						"name": "ORG_NAME",
						"type": "String"
					},
					{
						"name": "PE_EXT_ATTRIBUTE1",
						"type": "String"
					},
					{
						"name": "PE_EXT_ATTRIBUTE2",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ABLBMohamedBlob2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parts_Item_Category_Assignment')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ABLBMohamedBlob2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Parts_Item_Category_Assignment_20210105151430.xlsx",
						"container": "inventory"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ABLBMohamedBlob2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parts_Item_Cross_Reference')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ABLBMohamedBlob2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Parts_Item_Cross_Reference_20210105151523.xlsx",
						"container": "inventory"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "ITEM_NUMBER",
						"type": "String"
					},
					{
						"name": "CROSS_REFERENCE_TYPE",
						"type": "String"
					},
					{
						"name": "CROSS_REFERENCE",
						"type": "String"
					},
					{
						"name": "DESCRIPTION",
						"type": "String"
					},
					{
						"name": "ORGANIZATION_CODE",
						"type": "String"
					},
					{
						"name": "ORG_NAME",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ABLBMohamedBlob2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parts_Item_Header')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ABLBMohamedBlob2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Parts_Item_Header_20210105151306.xlsx",
						"container": "inventory"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "ITEM_NUMBER",
						"type": "String"
					},
					{
						"name": "DESCRIPTION",
						"type": "String"
					},
					{
						"name": "DESCRIPTION_ESA",
						"type": "String"
					},
					{
						"name": "ORANIZATION_CODE",
						"type": "String"
					},
					{
						"name": "TEMPLATE_NAME",
						"type": "String"
					},
					{
						"name": "LIST_PRICE_PER_UNIT",
						"type": "String"
					},
					{
						"name": "UOM_CODE",
						"type": "String"
					},
					{
						"name": "WEIGHT_UOM_CODE",
						"type": "String"
					},
					{
						"name": "UNIT_WEIGHT",
						"type": "String"
					},
					{
						"name": "VOLUME_UOM_CODE",
						"type": "String"
					},
					{
						"name": "UNIT_VOLUME",
						"type": "String"
					},
					{
						"name": "MIN_MINMAX_QUANTITY",
						"type": "String"
					},
					{
						"name": "MAX_MINMAX_QUANTITY",
						"type": "String"
					},
					{
						"name": "FULL_LEAD_TIME",
						"type": "String"
					},
					{
						"name": "FIXED_LOT_MULTIPLIER",
						"type": "String"
					},
					{
						"name": "FIXED_ORDER_QUANTITY",
						"type": "String"
					},
					{
						"name": "MINIMUM_ORDER_QUANTITY",
						"type": "String"
					},
					{
						"name": "MAXIMUM_ORDER_QUANTITY",
						"type": "String"
					},
					{
						"name": "LONG_DESCRIPTION",
						"type": "String"
					},
					{
						"name": "ITEM_INV_APPLICATION",
						"type": "String"
					},
					{
						"name": "TRANSACTION_CONDITION_CODE",
						"type": "String"
					},
					{
						"name": "ADJUSTMENT_ACCOUNT",
						"type": "String"
					},
					{
						"name": "CORRECTION_ACCOUNT",
						"type": "String"
					},
					{
						"name": "SALES_COST_ACCOUNT",
						"type": "String"
					},
					{
						"name": "FOUR_DIGIT_CODE",
						"type": "String"
					},
					{
						"name": "ORG_NAME",
						"type": "String"
					},
					{
						"name": "PE_EXT_ATTRIBUTE1",
						"type": "String"
					},
					{
						"name": "PE_EXT_ATTRIBUTE2",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ABLBMohamedBlob2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parts_Item_Transaction_Default_Locators')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ABLBMohamedBlob2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Transaction_Default_Locators",
						"container": "inventory"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "ITEM_NUMBER",
						"type": "String"
					},
					{
						"name": "ORGANIZATION_CODE",
						"type": "String"
					},
					{
						"name": "SUBINVENTORY_NAME",
						"type": "String"
					},
					{
						"name": "LOCATOR_NAME",
						"type": "String"
					},
					{
						"name": "ORG_NAME",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ABLBMohamedBlob2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parts_Item_Transaction_Default_Subinv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "inventoryoutput"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ITEM_NUMBER",
						"type": "String"
					},
					{
						"name": "ORGANIZATION_CODE",
						"type": "String"
					},
					{
						"name": "SUBINVENTORY_NAME",
						"type": "String"
					},
					{
						"name": "ORG_NAME",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parts_Item_Transaction_Default_Subinventories')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ABLBMohamedBlob2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Parts_Item_Transaction_Default_Subinventories_20210105151805.xlsx",
						"container": "inventory"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "ITEM_NUMBER",
						"type": "String"
					},
					{
						"name": "ORGANIZATION_CODE",
						"type": "String"
					},
					{
						"name": "SUBINVENTORY_NAME",
						"type": "String"
					},
					{
						"name": "ORG_NAME",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ABLBMohamedBlob2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_b21')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "AccountKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ParentAccountKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AccountCodeAlternateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ParentAccountCodeAlternateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AccountDescription",
						"type": "nvarchar"
					},
					{
						"name": "AccountType",
						"type": "nvarchar"
					},
					{
						"name": "Operator",
						"type": "nvarchar"
					},
					{
						"name": "CustomMembers",
						"type": "nvarchar"
					},
					{
						"name": "ValueType",
						"type": "nvarchar"
					},
					{
						"name": "CustomMemberOptions",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimAccount"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_gv3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ABLBMohamedBlob2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TopMovies_Part1.csv",
						"container": "csvfiles"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Index",
						"type": "String"
					},
					{
						"name": "MovieTitle",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ABLBMohamedBlob2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_s88')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ABLBMohamedBlob2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "csvfiles"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Index",
						"type": "String"
					},
					{
						"name": "MovieTitle",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ABLBMohamedBlob2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlIdentification')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UnitId FK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Unit_GovernmentID",
						"type": "varchar"
					},
					{
						"name": "Unit_NickName",
						"type": "varchar"
					},
					{
						"name": "Customer_BillingReference",
						"type": "varchar"
					},
					{
						"name": "Unit_DownInd",
						"type": "varchar"
					},
					{
						"name": "Unit_RegisteredNo",
						"type": "varchar"
					},
					{
						"name": "Unit_MfgYear",
						"type": "varchar"
					},
					{
						"name": "Unit_WarrantyStartDate",
						"type": "varchar"
					},
					{
						"name": "Unit_WarrantyEndDate",
						"type": "varchar"
					},
					{
						"name": "Unit_InstallDate",
						"type": "varchar"
					},
					{
						"name": "Unit_HandoverDate",
						"type": "varchar"
					},
					{
						"name": "AnnualSafetyTest_LastInspectionDate",
						"type": "varchar"
					},
					{
						"name": "Unit_JobNo",
						"type": "varchar"
					},
					{
						"name": "Unit_FactorySerialNo",
						"type": "varchar"
					},
					{
						"name": "Unit_Smart_ViewID",
						"type": "varchar"
					},
					{
						"name": "Unit_Smart_ExternalID",
						"type": "varchar"
					},
					{
						"name": "Unit_Smart_InstallationDate",
						"type": "varchar"
					},
					{
						"name": "Unit_SmartMAX_ViewID",
						"type": "varchar"
					},
					{
						"name": "Unit_SmartMAX_ExternalID",
						"type": "varchar"
					},
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "unit",
					"table": "Identification"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerStudent')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServerTestStudent",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "training"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "studentId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "studentName",
						"type": "varchar"
					},
					{
						"name": "stream",
						"type": "varchar"
					},
					{
						"name": "marks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "createDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "updateDate",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Student"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServerTestStudent')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "AccountKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ParentAccountKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AccountCodeAlternateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ParentAccountCodeAlternateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AccountDescription",
						"type": "nvarchar"
					},
					{
						"name": "AccountType",
						"type": "nvarchar"
					},
					{
						"name": "Operator",
						"type": "nvarchar"
					},
					{
						"name": "CustomMembers",
						"type": "nvarchar"
					},
					{
						"name": "ValueType",
						"type": "nvarchar"
					},
					{
						"name": "CustomMemberOptions",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimAccount"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Viewbuilding_API_addtest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "buildingCode",
						"type": "nvarchar"
					},
					{
						"name": "Data",
						"type": "nvarchar"
					},
					{
						"name": "HashKey",
						"type": "varbinary"
					},
					{
						"name": "ETL_Load_Date_Time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "building",
					"table": "Viewbuilding_API_addtest"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/address')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ORA_FD02_CustomerAddress20201005165901.xlsx",
						"container": "address"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Customer Name",
						"type": "String"
					},
					{
						"name": "Customer Header Reference",
						"type": "String"
					},
					{
						"name": "Address Reference",
						"type": "String"
					},
					{
						"name": "Site Use Code",
						"type": "String"
					},
					{
						"name": "Primary Site Use Flag",
						"type": "String"
					},
					{
						"name": " Location",
						"type": "String"
					},
					{
						"name": "Bill To Orig Address Reference",
						"type": "String"
					},
					{
						"name": "Address Line 1",
						"type": "String"
					},
					{
						"name": "Address Line 2",
						"type": "String"
					},
					{
						"name": "Address Line 3",
						"type": "String"
					},
					{
						"name": "Address Line 4",
						"type": "String"
					},
					{
						"name": "Address Lines Phonetic",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "Province",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "Postal Code",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "Receivables Account",
						"type": "String"
					},
					{
						"name": "Revenue Account",
						"type": "String"
					},
					{
						"name": "Tax Account",
						"type": "String"
					},
					{
						"name": "Freight Account",
						"type": "String"
					},
					{
						"name": "Clearing Account",
						"type": "String"
					},
					{
						"name": "Unbilled Receivables Account",
						"type": "String"
					},
					{
						"name": "Unearned Revenue Account",
						"type": "String"
					},
					{
						"name": "Payment Method Name",
						"type": "String"
					},
					{
						"name": "Payment Method Primary Flag",
						"type": "String"
					},
					{
						"name": "Customer Profile",
						"type": "String"
					},
					{
						"name": "Site Use Tax Reference",
						"type": "String"
					},
					{
						"name": "Time Zone",
						"type": "String"
					},
					{
						"name": "Language",
						"type": "String"
					},
					{
						"name": "Contributor Class at Account Site",
						"type": "String"
					},
					{
						"name": "Use Cust Site Profile Flag at Account Site",
						"type": "String"
					},
					{
						"name": "Contributor Class at Account Site Use",
						"type": "String"
					},
					{
						"name": "Use Cust Site Profile Flag at Account Site Use",
						"type": "String"
					},
					{
						"name": "Economic Activity",
						"type": "String"
					},
					{
						"name": "Operating Unit Name",
						"type": "String"
					},
					{
						"name": "Payment Term Name",
						"type": "String"
					},
					{
						"name": "Concept Code (CR)",
						"type": "String"
					},
					{
						"name": "Giro (CL)",
						"type": "String"
					},
					{
						"name": "US Remit-to Address Mapping",
						"type": "String"
					},
					{
						"name": "US Tax Area Id",
						"type": "String"
					},
					{
						"name": "Union Local",
						"type": "String"
					},
					{
						"name": "TAID User Override",
						"type": "String"
					},
					{
						"name": "TAID Last Checked",
						"type": "String"
					},
					{
						"name": "TAID Assignment Result",
						"type": "String"
					},
					{
						"name": "TAID Confidence Indicator",
						"type": "String"
					},
					{
						"name": "TAID Precision",
						"type": "String"
					},
					{
						"name": "CRM Account",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adventre')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorksDW2019",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "training"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorksDW2019')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/am_da_ds_dst_exviewBuildingapi')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerCode",
						"type": "nvarchar"
					},
					{
						"name": "Data",
						"type": "nvarchar"
					},
					{
						"name": "HashKey",
						"type": "varbinary"
					},
					{
						"name": "ETL_Load_Date_Time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "building",
					"table": "am_da_ds_dst_exviewBuildingapi"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/building')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ExternalBuildingId",
						"type": "varchar"
					},
					{
						"name": "BuildingName_local",
						"type": "varchar"
					},
					{
						"name": "StreetAddress_Local",
						"type": "varchar"
					},
					{
						"name": "City_Local",
						"type": "varchar"
					},
					{
						"name": "Postcode",
						"type": "varchar"
					},
					{
						"name": "MainTypeViewId",
						"type": "varchar"
					},
					{
						"name": "MainTypeName_En",
						"type": "varchar"
					},
					{
						"name": "SubTypeViewId",
						"type": "varchar"
					},
					{
						"name": "SubTypeName_En",
						"type": "varchar"
					},
					{
						"name": "BuildingNo",
						"type": "varchar"
					},
					{
						"name": "CustomerNo",
						"type": "varchar"
					},
					{
						"name": "SumOfTotalUnits",
						"type": "varchar"
					},
					{
						"name": "SumOfUnitsInService",
						"type": "varchar"
					},
					{
						"name": "OfficeViewId",
						"type": "varchar"
					},
					{
						"name": "OfficeName_En",
						"type": "varchar"
					},
					{
						"name": "UnitsScheduleHours",
						"type": "varchar"
					},
					{
						"name": "UnitsScheduleHoursViewId",
						"type": "varchar"
					},
					{
						"name": "UnitsScheduleTime",
						"type": "varchar"
					},
					{
						"name": "UnitsScheduleTimeViewId",
						"type": "varchar"
					},
					{
						"name": "TargetCallRate",
						"type": "varchar"
					},
					{
						"name": "RunInfo",
						"type": "varchar"
					},
					{
						"name": "RunTypeViewId",
						"type": "varchar"
					},
					{
						"name": "RunTypeName",
						"type": "varchar"
					},
					{
						"name": "RunViewId",
						"type": "varchar"
					},
					{
						"name": "RunName",
						"type": "varchar"
					},
					{
						"name": "BHSWPResponse",
						"type": "varchar"
					},
					{
						"name": "BHStopResponse",
						"type": "varchar"
					},
					{
						"name": "BHOthersResponse",
						"type": "varchar"
					},
					{
						"name": "AHSWPResponse",
						"type": "varchar"
					},
					{
						"name": "AHStopResponse",
						"type": "varchar"
					},
					{
						"name": "AHOthersResponse",
						"type": "varchar"
					},
					{
						"name": "Notes",
						"type": "varchar"
					},
					{
						"name": "BusinessHourContactInfo",
						"type": "varchar"
					},
					{
						"name": "BHSiteContact",
						"type": "varchar"
					},
					{
						"name": "BHContactPhone1",
						"type": "varchar"
					},
					{
						"name": "BHContactMobile",
						"type": "varchar"
					},
					{
						"name": "BHContactRoleViewId",
						"type": "varchar"
					},
					{
						"name": "BHContactRoleName",
						"type": "varchar"
					},
					{
						"name": "AfterHourContactInfo",
						"type": "varchar"
					},
					{
						"name": "AHSiteContact",
						"type": "varchar"
					},
					{
						"name": "AHContactPhone1",
						"type": "varchar"
					},
					{
						"name": "AHContactMobile",
						"type": "varchar"
					},
					{
						"name": "AHContactRoleViewId",
						"type": "varchar"
					},
					{
						"name": "AHContactRoleViewName",
						"type": "varchar"
					},
					{
						"name": "State",
						"type": "varchar"
					},
					{
						"name": "ViewId",
						"type": "varchar"
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "TimeZone",
						"type": "varchar"
					},
					{
						"name": "CustomerCode",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "building stg"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/building3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ABLBMohamedBlob2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "building"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ABLBMohamedBlob2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/buildingsrc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "View_Building_20201005094320.xlsx",
						"container": "building"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "ExternalBuildingId",
						"type": "String"
					},
					{
						"name": "BuildingName_local",
						"type": "String"
					},
					{
						"name": "StreetAddress_Local",
						"type": "String"
					},
					{
						"name": "City_Local",
						"type": "String"
					},
					{
						"name": "Postcode",
						"type": "String"
					},
					{
						"name": "MainTypeViewId",
						"type": "String"
					},
					{
						"name": "MainTypeName_En",
						"type": "String"
					},
					{
						"name": "SubTypeViewId",
						"type": "String"
					},
					{
						"name": "SubTypeName_En",
						"type": "String"
					},
					{
						"name": "BuildingNo",
						"type": "String"
					},
					{
						"name": "CustomerNo",
						"type": "String"
					},
					{
						"name": "SumOfTotalUnits",
						"type": "String"
					},
					{
						"name": "SumOfUnitsInService",
						"type": "String"
					},
					{
						"name": "OfficeViewId",
						"type": "String"
					},
					{
						"name": "OfficeName_En",
						"type": "String"
					},
					{
						"name": "UnitsScheduleHours",
						"type": "String"
					},
					{
						"name": "UnitsScheduleHoursViewId",
						"type": "String"
					},
					{
						"name": "UnitsScheduleTime",
						"type": "String"
					},
					{
						"name": "UnitsScheduleTimeViewId",
						"type": "String"
					},
					{
						"name": "TargetCallRate",
						"type": "String"
					},
					{
						"name": "RunInfo",
						"type": "String"
					},
					{
						"name": "RunTypeViewId",
						"type": "String"
					},
					{
						"name": "RunTypeName",
						"type": "String"
					},
					{
						"name": "RunViewId",
						"type": "String"
					},
					{
						"name": "RunName",
						"type": "String"
					},
					{
						"name": "BHSWPResponse",
						"type": "String"
					},
					{
						"name": "BHStopResponse",
						"type": "String"
					},
					{
						"name": "BHOthersResponse",
						"type": "String"
					},
					{
						"name": "AHSWPResponse",
						"type": "String"
					},
					{
						"name": "AHStopResponse",
						"type": "String"
					},
					{
						"name": "AHOthersResponse",
						"type": "String"
					},
					{
						"name": "Notes",
						"type": "String"
					},
					{
						"name": "BusinessHourContactInfo",
						"type": "String"
					},
					{
						"name": "BHSiteContact",
						"type": "String"
					},
					{
						"name": "BHContactPhone1",
						"type": "String"
					},
					{
						"name": "BHContactMobile",
						"type": "String"
					},
					{
						"name": "BHContactRoleViewId",
						"type": "String"
					},
					{
						"name": "BHContactRoleName",
						"type": "String"
					},
					{
						"name": "AfterHourContactInfo",
						"type": "String"
					},
					{
						"name": "AHSiteContact",
						"type": "String"
					},
					{
						"name": "AHContactPhone1",
						"type": "String"
					},
					{
						"name": "AHContactMobile",
						"type": "String"
					},
					{
						"name": "AHContactRoleViewId",
						"type": "String"
					},
					{
						"name": "AHContactRoleViewName",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "ViewId",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "TimeZone",
						"type": "String"
					},
					{
						"name": "CustomerCode",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/buildingstg')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ExternalBuildingId",
						"type": "varchar"
					},
					{
						"name": "BuildingName_local",
						"type": "varchar"
					},
					{
						"name": "StreetAddress_Local",
						"type": "varchar"
					},
					{
						"name": "City_Local",
						"type": "varchar"
					},
					{
						"name": "Postcode",
						"type": "varchar"
					},
					{
						"name": "MainTypeViewId",
						"type": "varchar"
					},
					{
						"name": "MainTypeName_En",
						"type": "varchar"
					},
					{
						"name": "SubTypeViewId",
						"type": "varchar"
					},
					{
						"name": "SubTypeName_En",
						"type": "varchar"
					},
					{
						"name": "BuildingNo",
						"type": "varchar"
					},
					{
						"name": "CustomerNo",
						"type": "varchar"
					},
					{
						"name": "SumOfTotalUnits",
						"type": "varchar"
					},
					{
						"name": "SumOfUnitsInService",
						"type": "varchar"
					},
					{
						"name": "OfficeViewId",
						"type": "varchar"
					},
					{
						"name": "OfficeName_En",
						"type": "varchar"
					},
					{
						"name": "UnitsScheduleHours",
						"type": "varchar"
					},
					{
						"name": "UnitsScheduleHoursViewId",
						"type": "varchar"
					},
					{
						"name": "UnitsScheduleTime",
						"type": "varchar"
					},
					{
						"name": "UnitsScheduleTimeViewId",
						"type": "varchar"
					},
					{
						"name": "TargetCallRate",
						"type": "varchar"
					},
					{
						"name": "RunInfo",
						"type": "varchar"
					},
					{
						"name": "RunTypeViewId",
						"type": "varchar"
					},
					{
						"name": "RunTypeName",
						"type": "varchar"
					},
					{
						"name": "RunViewId",
						"type": "varchar"
					},
					{
						"name": "RunName",
						"type": "varchar"
					},
					{
						"name": "BHSWPResponse",
						"type": "varchar"
					},
					{
						"name": "BHStopResponse",
						"type": "varchar"
					},
					{
						"name": "BHOthersResponse",
						"type": "varchar"
					},
					{
						"name": "AHSWPResponse",
						"type": "varchar"
					},
					{
						"name": "AHStopResponse",
						"type": "varchar"
					},
					{
						"name": "AHOthersResponse",
						"type": "varchar"
					},
					{
						"name": "Notes",
						"type": "varchar"
					},
					{
						"name": "BusinessHourContactInfo",
						"type": "varchar"
					},
					{
						"name": "BHSiteContact",
						"type": "varchar"
					},
					{
						"name": "BHContactPhone1",
						"type": "varchar"
					},
					{
						"name": "BHContactMobile",
						"type": "varchar"
					},
					{
						"name": "BHContactRoleViewId",
						"type": "varchar"
					},
					{
						"name": "BHContactRoleName",
						"type": "varchar"
					},
					{
						"name": "AfterHourContactInfo",
						"type": "varchar"
					},
					{
						"name": "AHSiteContact",
						"type": "varchar"
					},
					{
						"name": "AHContactPhone1",
						"type": "varchar"
					},
					{
						"name": "AHContactMobile",
						"type": "varchar"
					},
					{
						"name": "AHContactRoleViewId",
						"type": "varchar"
					},
					{
						"name": "AHContactRoleViewName",
						"type": "varchar"
					},
					{
						"name": "State",
						"type": "varchar"
					},
					{
						"name": "ViewId",
						"type": "varchar"
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "TimeZone",
						"type": "varchar"
					},
					{
						"name": "CustomerCode",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "building stg"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/contactpontex')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ORA_FD02_CustomerContactPoints20201005174313.xlsx",
						"container": "customercontactpoints"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Customer Header Reference",
						"type": "String"
					},
					{
						"name": "Address Reference",
						"type": "String"
					},
					{
						"name": "Contact Point Type",
						"type": "String"
					},
					{
						"name": "Contact Point Status",
						"type": "String"
					},
					{
						"name": "Primary Flag",
						"type": "String"
					},
					{
						"name": "Contact point Purpose",
						"type": "String"
					},
					{
						"name": "Phone Country Code",
						"type": "String"
					},
					{
						"name": "Phone Area Code",
						"type": "String"
					},
					{
						"name": "Phone Number",
						"type": "String"
					},
					{
						"name": "Phone Extension",
						"type": "String"
					},
					{
						"name": "Phone Line Type",
						"type": "String"
					},
					{
						"name": "Email Address",
						"type": "String"
					},
					{
						"name": "Email Format",
						"type": "String"
					},
					{
						"name": "Operating Unit Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/customerBuilding1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ExternalBuildingId",
						"type": "varchar"
					},
					{
						"name": "BuildingName_local",
						"type": "varchar"
					},
					{
						"name": "StreetAddress_Local",
						"type": "varchar"
					},
					{
						"name": "City_Local",
						"type": "varchar"
					},
					{
						"name": "Postcode",
						"type": "varchar"
					},
					{
						"name": "MainTypeViewId",
						"type": "varchar"
					},
					{
						"name": "MainTypeName_En",
						"type": "varchar"
					},
					{
						"name": "SubTypeViewId",
						"type": "varchar"
					},
					{
						"name": "SubTypeName_En",
						"type": "varchar"
					},
					{
						"name": "BuildingNo",
						"type": "varchar"
					},
					{
						"name": "CustomerNo",
						"type": "varchar"
					},
					{
						"name": "SumOfTotalUnits",
						"type": "varchar"
					},
					{
						"name": "SumOfUnitsInService",
						"type": "varchar"
					},
					{
						"name": "OfficeViewId",
						"type": "varchar"
					},
					{
						"name": "OfficeName_En",
						"type": "varchar"
					},
					{
						"name": "UnitsScheduleHours",
						"type": "varchar"
					},
					{
						"name": "UnitsScheduleHoursViewId",
						"type": "varchar"
					},
					{
						"name": "UnitsScheduleTime",
						"type": "varchar"
					},
					{
						"name": "UnitsScheduleTimeViewId",
						"type": "varchar"
					},
					{
						"name": "TargetCallRate",
						"type": "varchar"
					},
					{
						"name": "RunInfo",
						"type": "varchar"
					},
					{
						"name": "RunTypeViewId",
						"type": "varchar"
					},
					{
						"name": "RunTypeName",
						"type": "varchar"
					},
					{
						"name": "RunViewId",
						"type": "varchar"
					},
					{
						"name": "RunName",
						"type": "varchar"
					},
					{
						"name": "BHSWPResponse",
						"type": "varchar"
					},
					{
						"name": "BHStopResponse",
						"type": "varchar"
					},
					{
						"name": "BHOthersResponse",
						"type": "varchar"
					},
					{
						"name": "AHSWPResponse",
						"type": "varchar"
					},
					{
						"name": "AHStopResponse",
						"type": "varchar"
					},
					{
						"name": "AHOthersResponse",
						"type": "varchar"
					},
					{
						"name": "Notes",
						"type": "varchar"
					},
					{
						"name": "BusinessHourContactInfo",
						"type": "varchar"
					},
					{
						"name": "BHSiteContact",
						"type": "varchar"
					},
					{
						"name": "BHContactPhone1",
						"type": "varchar"
					},
					{
						"name": "BHContactMobile",
						"type": "varchar"
					},
					{
						"name": "BHContactRoleViewId",
						"type": "varchar"
					},
					{
						"name": "BHContactRoleName",
						"type": "varchar"
					},
					{
						"name": "AfterHourContactInfo",
						"type": "varchar"
					},
					{
						"name": "AHSiteContact",
						"type": "varchar"
					},
					{
						"name": "AHContactPhone1",
						"type": "varchar"
					},
					{
						"name": "AHContactMobile",
						"type": "varchar"
					},
					{
						"name": "AHContactRoleViewId",
						"type": "varchar"
					},
					{
						"name": "AHContactRoleViewName",
						"type": "varchar"
					},
					{
						"name": "State",
						"type": "varchar"
					},
					{
						"name": "ViewId",
						"type": "varchar"
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "TimeZone",
						"type": "varchar"
					},
					{
						"name": "CustomerCode",
						"type": "varchar"
					},
					{
						"name": "LastModifytime",
						"type": "timestamp"
					}
				],
				"typeProperties": {
					"schema": "customer",
					"table": "Building1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/customercontactpoints')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ORA_FD02_CustomerContactPoints20201005174313.xlsx",
						"container": "customercontactpoints"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Customer Header Reference",
						"type": "String"
					},
					{
						"name": "Address Reference",
						"type": "String"
					},
					{
						"name": "Contact Point Type",
						"type": "String"
					},
					{
						"name": "Contact Point Status",
						"type": "String"
					},
					{
						"name": "Primary Flag",
						"type": "String"
					},
					{
						"name": "Contact point Purpose",
						"type": "String"
					},
					{
						"name": "Phone Country Code",
						"type": "String"
					},
					{
						"name": "Phone Area Code",
						"type": "String"
					},
					{
						"name": "Phone Number",
						"type": "String"
					},
					{
						"name": "Phone Extension",
						"type": "String"
					},
					{
						"name": "Phone Line Type",
						"type": "String"
					},
					{
						"name": "Email Address",
						"type": "String"
					},
					{
						"name": "Email Format",
						"type": "String"
					},
					{
						"name": "Operating Unit Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demomfg')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ABLBMohamedBlob2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "MFG",
						"container": "inventory"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "MANUFACTURER",
						"type": "String"
					},
					{
						"name": "DESCRIPTION",
						"type": "String"
					},
					{
						"name": "PART_NUMBER",
						"type": "String"
					},
					{
						"name": "ITEM_NUMBER",
						"type": "String"
					},
					{
						"name": "ORG_NAME",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ABLBMohamedBlob2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsADLS2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"table_name": {
						"type": "string"
					},
					"table_catalog_name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "training"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "\n@{item().Table_Name}/@{formatDateTime(utcnow(),'yyyy')}/@{formatDateTime(utcnow(),'MM')}/@{formatDateTime(utcnow(),'dd')}/@{item().Table_Name}@{formatDateTime(utcnow(),'HH')}",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('lake/raw/on_prem2/',dataset().table_catalog_name)",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dtCategory_Assignment')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Pipe",
						"container": "inventoryoutput"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dtCross_Reference')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ABLBMohamedBlob2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Pipe",
						"container": "inventoryoutput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ABLBMohamedBlob2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dtDefault_Subinventories')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ABLBMohamedBlob2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Pipe",
						"container": "inventoryoutput"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ABLBMohamedBlob2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dtInventory_Transactions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ABLBMohamedBlob2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Pipe",
						"container": "inventoryoutput"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ABLBMohamedBlob2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dtItem_Header')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ABLBMohamedBlob2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Pipe",
						"container": "inventoryoutput"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ABLBMohamedBlob2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dtTransaction_Default_Locators')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Pipe",
						"container": "inventoryoutput"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dtmfg')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ABLBMohamedBlob2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Pipe",
						"container": "inventoryoutput"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ABLBMohamedBlob2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/flattenedbuilding')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lBANK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Identification FK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UnitId FK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ElevatorBank_ViewID",
						"type": "varchar"
					},
					{
						"name": "ElevatorBank_ExternalID",
						"type": "varchar"
					},
					{
						"name": "ElevatorBank_BankName",
						"type": "varchar"
					},
					{
						"name": "ElevatorBank_AccessCode",
						"type": "varchar"
					},
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "unit",
					"table": "BANK"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/maintenance')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UnitId FK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Array_MaintenanceRun",
						"type": "varchar"
					},
					{
						"name": "MaintenanceRun_RouteNo_TerritoryCode",
						"type": "varchar"
					},
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "unit",
					"table": "maintenance"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/office')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UnitId FK",
						"type": "varchar"
					},
					{
						"name": "identification Id FK",
						"type": "varchar"
					},
					{
						"name": "Branch_ViewID",
						"type": "varchar"
					},
					{
						"name": "BranchName1",
						"type": "varchar"
					},
					{
						"name": "BranchName2",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "unit",
					"table": "office"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/spBuildingToJson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqlManufacturer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UnitId FK",
						"type": "varchar"
					},
					{
						"name": "Equipment Id FK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Manufacturer_VIEWId",
						"type": "varchar"
					},
					{
						"name": "Manufacturer_ExternalID",
						"type": "varchar"
					},
					{
						"name": "Manufacturer_Name1",
						"type": "varchar"
					},
					{
						"name": "Manufacturer_Name2",
						"type": "varchar"
					},
					{
						"name": "AfterHoursCallbackRun_ExternalID",
						"type": "varchar"
					},
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "unit",
					"table": "Manufacturer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqlbuilding')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Building_ExternalBuildingId",
						"type": "varchar"
					},
					{
						"name": "Building_BuildingName_local",
						"type": "varchar"
					},
					{
						"name": "Building_BuildingName_en",
						"type": "varchar"
					},
					{
						"name": "Building_Height",
						"type": "varchar"
					},
					{
						"name": "Building_StreetAddress_En",
						"type": "varchar"
					},
					{
						"name": "Building_StreetAddress_Local",
						"type": "varchar"
					},
					{
						"name": "Building_Suburb_En",
						"type": "varchar"
					},
					{
						"name": "Building_Suburb_Local",
						"type": "varchar"
					},
					{
						"name": "Building_City_En",
						"type": "varchar"
					},
					{
						"name": "Building_City_Local",
						"type": "varchar"
					},
					{
						"name": "Building_Postcode",
						"type": "varchar"
					},
					{
						"name": "Building_MainTypeViewId",
						"type": "varchar"
					},
					{
						"name": "Building_MainTypeName_En",
						"type": "varchar"
					},
					{
						"name": "Building_MainTypeName_Local",
						"type": "varchar"
					},
					{
						"name": "Building_SubTypeViewId",
						"type": "varchar"
					},
					{
						"name": "Building_SubTypeName_En",
						"type": "varchar"
					},
					{
						"name": "Building_SubTypeName_Local",
						"type": "varchar"
					},
					{
						"name": "Building_BuildingNo",
						"type": "varchar"
					},
					{
						"name": "Building_IsStandbybuilding",
						"type": "varchar"
					},
					{
						"name": "Building_CostingNo",
						"type": "varchar"
					},
					{
						"name": "Building_CustomerNo",
						"type": "varchar"
					},
					{
						"name": "Building_SumOfTotalUnits",
						"type": "varchar"
					},
					{
						"name": "Building_SumOfUnitsInService",
						"type": "varchar"
					},
					{
						"name": "Building_QuickTurnover",
						"type": "varchar"
					},
					{
						"name": "Building_Latitude",
						"type": "varchar"
					},
					{
						"name": "Building_Longitude",
						"type": "varchar"
					},
					{
						"name": "Building_OfficeViewId",
						"type": "varchar"
					},
					{
						"name": "Building_OfficeName_En",
						"type": "varchar"
					},
					{
						"name": "Building_OfficeName_Local",
						"type": "varchar"
					},
					{
						"name": "Building_TKManagerEmployeeViewId",
						"type": "varchar"
					},
					{
						"name": "Building_TKManagerEmployeeExternalId",
						"type": "varchar"
					},
					{
						"name": "Building_TKManagerName",
						"type": "varchar"
					},
					{
						"name": "Building_IsRepairCorres",
						"type": "varchar"
					},
					{
						"name": "Building_IsCalendar",
						"type": "varchar"
					},
					{
						"name": "Building_IsGeneralCorres",
						"type": "varchar"
					},
					{
						"name": "Building_IsCard",
						"type": "varchar"
					},
					{
						"name": "Building_IsMonthlyReport",
						"type": "varchar"
					},
					{
						"name": "Building_UnitsScheduleHours",
						"type": "varchar"
					},
					{
						"name": "Building_UnitsScheduleHoursViewId",
						"type": "varchar"
					},
					{
						"name": "Building_UnitsScheduleTime",
						"type": "varchar"
					},
					{
						"name": "Building_UnitsScheduleTimeViewId",
						"type": "varchar"
					},
					{
						"name": "Building_UnitsScheduleDay",
						"type": "varchar"
					},
					{
						"name": "Building_UnitsScheduleDayViewId",
						"type": "varchar"
					},
					{
						"name": "Building_UnitsScheduleDayFrequency",
						"type": "varchar"
					},
					{
						"name": "Building_TargetCallRate",
						"type": "varchar"
					},
					{
						"name": "Array_RunInfo",
						"type": "varchar"
					},
					{
						"name": "RunInfo_RunTypeViewId",
						"type": "varchar"
					},
					{
						"name": "RunInfo_RunTypeName",
						"type": "varchar"
					},
					{
						"name": "RunInfo_RunViewId",
						"type": "varchar"
					},
					{
						"name": "RunInfo_RunName",
						"type": "varchar"
					},
					{
						"name": "RunInfo_BHSWPResponse",
						"type": "varchar"
					},
					{
						"name": "RunInfo_BHStopResponse",
						"type": "varchar"
					},
					{
						"name": "RunInfo_BHOthersResponse",
						"type": "varchar"
					},
					{
						"name": "RunInfo_AHSWPResponse",
						"type": "varchar"
					},
					{
						"name": "RunInfo_AHStopResponse",
						"type": "varchar"
					},
					{
						"name": "RunInfo_AHOthersResponse",
						"type": "varchar"
					},
					{
						"name": "RunInfo_Notes",
						"type": "varchar"
					},
					{
						"name": "RunInfo_PropertyManagerEmployeeViewId",
						"type": "varchar"
					},
					{
						"name": "RunInfo_PropertyManagerEmployeeName",
						"type": "varchar"
					},
					{
						"name": "Array_BusinessHourContactInfo",
						"type": "varchar"
					},
					{
						"name": "BusinessHourContactInfo_BHSiteContact",
						"type": "varchar"
					},
					{
						"name": "BusinessHourContactInfo_BHContactLocation_En",
						"type": "varchar"
					},
					{
						"name": "BusinessHourContactInfo_BHContactLocation_Local",
						"type": "varchar"
					},
					{
						"name": "BusinessHourContactInfo_BHContactPhone1",
						"type": "varchar"
					},
					{
						"name": "BusinessHourContactInfo_BHContactPhone2",
						"type": "varchar"
					},
					{
						"name": "BusinessHourContactInfo_BHContactMobile",
						"type": "varchar"
					},
					{
						"name": "BusinessHourContactInfo_BHContactFax",
						"type": "varchar"
					},
					{
						"name": "BusinessHourContactInfo_BHContactRoleViewId",
						"type": "varchar"
					},
					{
						"name": "BusinessHourContactInfo_BHContactRoleName",
						"type": "varchar"
					},
					{
						"name": "Array_AfterHourContactInfo",
						"type": "varchar"
					},
					{
						"name": "AfterHourContactInfo_AHSiteContact",
						"type": "varchar"
					},
					{
						"name": "AfterHourContactInfo_AHContactLocation_En",
						"type": "varchar"
					},
					{
						"name": "AfterHourContactInfo_AHContactLocation_Local",
						"type": "varchar"
					},
					{
						"name": "AfterHourContactInfo_AHContactPhone1",
						"type": "varchar"
					},
					{
						"name": "AfterHourContactInfo_AHContactMobile",
						"type": "varchar"
					},
					{
						"name": "AfterHourContactInfo_AHContactFax",
						"type": "varchar"
					},
					{
						"name": "AfterHourContactInfo_AHContactRoleViewId",
						"type": "varchar"
					},
					{
						"name": "AfterHourContactInfo_AHContactRoleViewName",
						"type": "varchar"
					},
					{
						"name": "AfterHourContactInfo_AHContactAccessCode",
						"type": "varchar"
					},
					{
						"name": "Array_BuildingContactInfo",
						"type": "varchar"
					},
					{
						"name": "BuildingContactInfo_ContactViewId",
						"type": "varchar"
					},
					{
						"name": "BuildingContactInfo_ContactExternalId",
						"type": "varchar"
					},
					{
						"name": "BuildingContactInfo_ContactName",
						"type": "varchar"
					},
					{
						"name": "BuildingContactInfo_IsBusinessHours",
						"type": "varchar"
					},
					{
						"name": "Building_VFMCustomerName_En",
						"type": "varchar"
					},
					{
						"name": "Building_VFMCustomerName_Local",
						"type": "varchar"
					},
					{
						"name": "Building_VFMCustomerMail",
						"type": "varchar"
					},
					{
						"name": "Building_VFMMailTemplateSubject",
						"type": "varchar"
					},
					{
						"name": "Building_VFMMailTemplateContent",
						"type": "varchar"
					},
					{
						"name": "Building_IsCustomisedMail",
						"type": "varchar"
					},
					{
						"name": "Building_ReportFrequencyViewId",
						"type": "varchar"
					},
					{
						"name": "Building_ReportFrequency",
						"type": "varchar"
					},
					{
						"name": "Building_ReportTypeViewId",
						"type": "varchar"
					},
					{
						"name": "Building_ReportType",
						"type": "varchar"
					},
					{
						"name": "Building_IsReportInvoice",
						"type": "varchar"
					},
					{
						"name": "Building_ReportSendTo",
						"type": "varchar"
					},
					{
						"name": "Building_ReportAuditRequired",
						"type": "varchar"
					},
					{
						"name": "Building_ReportAuditDetail",
						"type": "varchar"
					},
					{
						"name": "Building_ReportServiceDockets",
						"type": "varchar"
					},
					{
						"name": "Building_FromProjectId",
						"type": "varchar"
					},
					{
						"name": "Building_FromProjectLabel",
						"type": "varchar"
					},
					{
						"name": "Array_BuildingCustomerInfo",
						"type": "varchar"
					},
					{
						"name": "BuildingCustomerInfo_CustomerViewId",
						"type": "varchar"
					},
					{
						"name": "BuildingCustomerInfo_CustomerExternalId",
						"type": "varchar"
					},
					{
						"name": "BuildingCustomerInfo_CustomerName",
						"type": "varchar"
					},
					{
						"name": "Array_State",
						"type": "varchar"
					},
					{
						"name": "State_ViewId",
						"type": "varchar"
					},
					{
						"name": "State_Name",
						"type": "varchar"
					},
					{
						"name": "Builiding_TimeZone",
						"type": "varchar"
					},
					{
						"name": "Builiding_CustomerCode",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "customer",
					"table": "Building"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stgunit')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "unit stg"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ABLBMohamedBlob2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connect to mohamed azure blob storage account",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ABLBMohamedBlob2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLS2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLS2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLSMohamed')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "connect to data lake",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLSMohamed_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLSMohamed_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AdventureWorksDW2019')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('AdventureWorksDW2019_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage3_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobTraining')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobTraining_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage3_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage3_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage4')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage4_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage4_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage5')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage5_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage5_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage6')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage6_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage6_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1Mohamed')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1Mohamed_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase3_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase4')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase4_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase5')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase5_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDb2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('CosmosDb2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDb3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('CosmosDb3_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('HttpServer1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('HttpServer1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer2_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTestStudent')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServerTestStudent_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/buildingstorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('buildingstorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsadve2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('dsadve2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('dsadve2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('linkedService1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedService2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('linkedService2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_gv3')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 24,
						"startTime": "2020-12-31T22:58:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_s88')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CopyPipeline_s88",
							"type": "PipelineReference"
						},
						"parameters": {
							"windowStart": {
								"type": "Expression",
								"value": "[parameters('Trigger_s88_properties_CopyPipeline_s88_parameters_windowStart')]"
							},
							"windowEnd": {
								"type": "Expression",
								"value": "[parameters('Trigger_s88_properties_CopyPipeline_s88_parameters_windowEnd')]"
							}
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 24,
						"startTime": "2020-12-31T23:57:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CopyPipeline_s88')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2020-09-23T21:25:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [
					"AzureSqlDatabase1"
				],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2020-09-23T21:25:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime2')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime3')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"description": "test",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"nodeSize": "Standard_D8_v3",
						"numberOfNodes": 2,
						"maxParallelExecutionsPerNode": 8
					},
					"ssisProperties": {
						"catalogInfo": {
							"catalogServerEndpoint": "[parameters('integrationRuntime3_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint')]",
							"catalogAdminUserName": "[parameters('integrationRuntime3_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName')]",
							"catalogAdminPassword": {
								"type": "SecureString",
								"value": "[parameters('integrationRuntime3_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword')]"
							},
							"catalogPricingTier": "S1"
						},
						"edition": "Standard",
						"licenseType": "LicenseIncluded"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime4')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"nodeSize": "Standard_D8_v3",
						"numberOfNodes": 2,
						"maxParallelExecutionsPerNode": 8
					},
					"ssisProperties": {
						"catalogInfo": {
							"catalogServerEndpoint": "[parameters('integrationRuntime4_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint')]",
							"catalogAdminUserName": "[parameters('integrationRuntime4_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName')]",
							"catalogAdminPassword": {
								"type": "SecureString",
								"value": "[parameters('integrationRuntime4_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword')]"
							},
							"catalogPricingTier": "S1"
						},
						"edition": "Standard",
						"licenseType": "LicenseIncluded"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime5')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"nodeSize": "Standard_D8_v3",
						"numberOfNodes": 2,
						"maxParallelExecutionsPerNode": 8
					},
					"ssisProperties": {
						"edition": "Standard",
						"licenseType": "LicenseIncluded"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime6')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"nodeSize": "Standard_D8_v3",
						"numberOfNodes": 2,
						"maxParallelExecutionsPerNode": 8
					},
					"ssisProperties": {
						"edition": "Standard",
						"licenseType": "LicenseIncluded"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime7')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"nodeSize": "Standard_D8_v3",
						"numberOfNodes": 2,
						"maxParallelExecutionsPerNode": 8
					},
					"ssisProperties": {
						"catalogInfo": {
							"catalogServerEndpoint": "[parameters('integrationRuntime7_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint')]",
							"catalogAdminUserName": "[parameters('integrationRuntime7_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName')]",
							"catalogAdminPassword": {
								"type": "SecureString",
								"value": "[parameters('integrationRuntime7_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword')]"
							},
							"catalogPricingTier": "S1"
						},
						"edition": "Standard",
						"licenseType": "LicenseIncluded"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlunit",
								"type": "DatasetReference"
							},
							"name": "unit1"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlIdentification",
								"type": "DatasetReference"
							},
							"name": "Identification1"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlBank",
								"type": "DatasetReference"
							},
							"name": "Bank"
						},
						{
							"dataset": {
								"referenceName": "BUILDING1",
								"type": "DatasetReference"
							},
							"name": "BUILDING"
						},
						{
							"dataset": {
								"referenceName": "EQUIPMENT",
								"type": "DatasetReference"
							},
							"name": "EQUIPMENT"
						},
						{
							"dataset": {
								"referenceName": "EQUIPMENTTypeSQl",
								"type": "DatasetReference"
							},
							"name": "EQUIPMENTType"
						},
						{
							"dataset": {
								"referenceName": "sqlManufacturer",
								"type": "DatasetReference"
							},
							"name": "Manufacturer"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlController",
								"type": "DatasetReference"
							},
							"name": "Controller"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlSpeed",
								"type": "DatasetReference"
							},
							"name": "speed"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlDriveType",
								"type": "DatasetReference"
							},
							"name": "DriveType"
						},
						{
							"dataset": {
								"referenceName": "office",
								"type": "DatasetReference"
							},
							"name": "office"
						},
						{
							"dataset": {
								"referenceName": "maintenance",
								"type": "DatasetReference"
							},
							"name": "maintenance"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "CosmosDbSqlApiCollection1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						},
						{
							"name": "Sort1"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "BankArray"
						},
						{
							"name": "JoinBankidentification"
						},
						{
							"name": "JoinidentificationBuilding"
						},
						{
							"name": "EQUIPMENTDC1"
						},
						{
							"name": "Join2"
						},
						{
							"name": "arrayType"
						},
						{
							"name": "Join3"
						},
						{
							"name": "ManufacturerArray"
						},
						{
							"name": "Join4"
						},
						{
							"name": "controllerArray"
						},
						{
							"name": "Join5"
						},
						{
							"name": "speedArray"
						},
						{
							"name": "Join6"
						},
						{
							"name": "DriveTypearray"
						},
						{
							"name": "Join7"
						},
						{
							"name": "joinmanufacter"
						},
						{
							"name": "JoinController"
						},
						{
							"name": "Joinspeed"
						},
						{
							"name": "EQUIPMENTDC"
						},
						{
							"name": "JoinDriveType"
						}
					],
					"script": "source(output(\n\t\tunit_id as string,\n\t\tTechnicianNotes as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select unit_id,TechnicianNotes \\n  FROM [unit].[unit]',\n\tformat: 'query') ~> unit1\nsource(output(\n\t\t{UnitId FK} as string,\n\t\tUnit_GovernmentID as string,\n\t\tUnit_NickName as string,\n\t\tCustomer_BillingReference as string,\n\t\tUnit_DownInd as string,\n\t\tUnit_RegisteredNo as string,\n\t\tUnit_MfgYear as string,\n\t\tUnit_WarrantyStartDate as string,\n\t\tUnit_WarrantyEndDate as string,\n\t\tUnit_InstallDate as string,\n\t\tUnit_HandoverDate as string,\n\t\tAnnualSafetyTest_LastInspectionDate as string,\n\t\tUnit_JobNo as string,\n\t\tUnit_FactorySerialNo as string,\n\t\tUnit_Smart_ViewID as string,\n\t\tUnit_Smart_ExternalID as string,\n\t\tUnit_Smart_InstallationDate as string,\n\t\tUnit_SmartMAX_ViewID as string,\n\t\tUnit_SmartMAX_ExternalID as string,\n\t\tID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from [unit].[Identification]',\n\tformat: 'query') ~> Identification1\nsource(output(\n\t\t{Identification FK} as integer,\n\t\t{UnitId FK} as string,\n\t\tElevatorBank_ViewID as string,\n\t\tElevatorBank_ExternalID as string,\n\t\tElevatorBank_BankName as string,\n\t\tElevatorBank_AccessCode as string,\n\t\tID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Bank\nsource(output(\n\t\t{UnitId FK} as string,\n\t\t{identification FK} as integer,\n\t\tBuilding_ViewID as string,\n\t\tBuilding_ExternalID as string,\n\t\tBuilding_BuildingNo as string,\n\t\tName_en as string,\n\t\tName_local as string,\n\t\tID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> BUILDING\nsource(output(\n\t\t{UnitId FK} as string,\n\t\tFloors as string,\n\t\tNumberofFrontOpenings as string,\n\t\tNumberofRearOpenings as string,\n\t\tUnit_CapacityLbs as string,\n\t\tID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> EQUIPMENT\nsource(output(\n\t\t{UnitId FK} as string,\n\t\t{Equipment Id FK} as integer,\n\t\tEquipmentType_ViewID as string,\n\t\tEquipmentType_ExternalID as string,\n\t\tEquipmentType_Okeefe_EquipName as string,\n\t\tEquipmentType_TKE_EquipClassification as string,\n\t\tNumberofRearOpenings as string,\n\t\tUnit_CapacityLbs as string,\n\t\tEquipmentType_TKE_EquipName as string,\n\t\tid as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> EQUIPMENTType\nsource(output(\n\t\t{UnitId FK} as string,\n\t\t{Equipment Id FK} as integer,\n\t\tManufacturer_VIEWId as string,\n\t\tManufacturer_ExternalID as string,\n\t\tManufacturer_Name1 as string,\n\t\tManufacturer_Name2 as string,\n\t\tAfterHoursCallbackRun_ExternalID as string,\n\t\tID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Manufacturer\nsource(output(\n\t\t{UnitId FK} as string,\n\t\t{Equipment Id FK} as integer,\n\t\tController_Name1 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Controller\nsource(output(\n\t\t{UnitId FK} as string,\n\t\t{Equipment Id FK} as integer,\n\t\tSpeed_ViewID as string,\n\t\tSpeed_FPM as string,\n\t\tID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> speed\nsource(output(\n\t\t{UnitId FK} as string,\n\t\t{Equipment Id FK} as integer,\n\t\tDriveType_ViewID as string,\n\t\tDriveType_ExternalID as string,\n\t\tDriveType_Name1 as string,\n\t\tDriveType_Name2 as string,\n\t\tID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DriveType\nsource(output(\n\t\t{UnitId FK} as integer,\n\t\t{identification Id FK} as integer,\n\t\tBranch_ViewID as string,\n\t\tBranchName1 as string,\n\t\tBranchName2 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> office\nsource(output(\n\t\t{UnitId FK} as integer,\n\t\tArray_MaintenanceRun as string,\n\t\tMaintenanceRun_RouteNo_TerritoryCode as string,\n\t\tID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> maintenance\nSort1, JoinidentificationBuilding join(unit_id == Bank@{UnitId FK},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nunit1 sort(asc(unit_id, true)) ~> Sort1\nJoin7 derive(unit_id = unit_id,\n\t\tTechnicianNotes = TechnicianNotes,\n\t\tIdentification = @(BANK=@(ElevatorBank_ViewID=ElevatorBank_ViewID,\n\t\tElevatorBank_BankName=ElevatorBank_BankName,\n\t\tElevatorBank_AccessCode=ElevatorBank_AccessCode),\n\t\tBuilding=@(Building_ViewID=Building_ViewID)),\n\t\tEQUIPMENT = @(Floors=Floors,\n\t\tNumberofFrontOpenings=NumberofFrontOpenings,\n\t\tNumberofRearOpenings=NumberofRearOpenings,\n\t\tUnit_CapacityLbs=Unit_CapacityLbs,\n\t\tUNITTYPE=UNITTYPE,\n\t\tManufacturer=Manufacturer,\n\t\tController=Controller,\n\t\tSpeed=Speed,\n\t\tDriveType=DriveType)) ~> DerivedColumn1\nBank derive(Bank = @(ElevatorBank_ViewID=ElevatorBank_ViewID,\n\t\tElevatorBank_ExternalID=ElevatorBank_ExternalID,\n\t\tElevatorBank_BankName=ElevatorBank_BankName,\n\t\tElevatorBank_AccessCode=ElevatorBank_AccessCode),\n\t\t{Identification FK} = {Identification FK}) ~> BankArray\nIdentification1, BankArray join(Identification1@ID == {Identification FK},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinBankidentification\nJoinBankidentification, BUILDING join(BankArray@{Identification FK} == BUILDING@{identification FK},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinidentificationBuilding\nEQUIPMENT derive(EQUIPMENT = @(Floors=Floors,\n\t\tNumberofFrontOpenings=NumberofFrontOpenings,\n\t\tNumberofRearOpenings=NumberofRearOpenings),\n\t\tUnitId = {UnitId FK},\n\t\tID = ID) ~> EQUIPMENTDC1\nEQUIPMENTType, EQUIPMENTDC1 join({Equipment Id FK} == EQUIPMENTDC1@ID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join2\nJoin2 derive(UNITTYPE = @(EquipmentType_ViewID=EquipmentType_ViewID,\n\t\tEquipmentType_ExternalID=EquipmentType_ExternalID,\n\t\tEquipmentType_Okeefe_EquipName=EquipmentType_Okeefe_EquipName,\n\t\tEquipmentType_TKE_EquipClassification=EquipmentType_TKE_EquipClassification,\n\t\tNumberofRearOpenings=EQUIPMENTType@NumberofRearOpenings,\n\t\tUnit_CapacityLbs=EQUIPMENTType@Unit_CapacityLbs,\n\t\tEquipmentType_TKE_EquipName=EquipmentType_TKE_EquipName),\n\t\t{Equipment Id FK} = {Equipment Id FK}) ~> arrayType\nManufacturer, EQUIPMENT join({Equipment Id FK} == EQUIPMENT@ID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join3\nJoin3 derive(Manufacturerarray = @(Manufacturer_VIEWId=Manufacturer_VIEWId,\n\t\tManufacturer_ExternalID=Manufacturer_ExternalID,\n\t\tManufacturer_Name1=Manufacturer_Name1,\n\t\tManufacturer_Name2=Manufacturer_Name2,\n\t\tAfterHoursCallbackRun_ExternalID=AfterHoursCallbackRun_ExternalID)) ~> ManufacturerArray\nController, EQUIPMENT join({Equipment Id FK} == ID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join4\nJoin4 derive(controllerArray = @(Controller_Name1=Controller_Name1),\n\t\t{Equipment Id FK} = {Equipment Id FK}) ~> controllerArray\nspeed, EQUIPMENT join({Equipment Id FK} == EQUIPMENT@ID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join5\nJoin5 derive(Speed = @(Speed_ViewID=Speed_ViewID,\n\t\tSpeed_FPM=Speed_FPM),\n\t\t{Equipment Id FK} = {Equipment Id FK}) ~> speedArray\nDriveType, EQUIPMENT join({Equipment Id FK} == EQUIPMENT@ID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join6\nJoin6 derive(DriveTypeArray = @(DriveType_ViewID=DriveType_ViewID,\n\t\tDriveType_ExternalID=DriveType_ExternalID,\n\t\tDriveType_Name1=DriveType_Name1,\n\t\tDriveType_Name2=DriveType_Name2)) ~> DriveTypearray\nJoin1, EQUIPMENTDC join(unit_id == EQUIPMENTDC@{UnitId FK},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join7\narrayType, Manufacturer join(arrayType@{Equipment Id FK} == Manufacturer@{Equipment Id FK},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> joinmanufacter\njoinmanufacter, Controller join(Manufacturer@{Equipment Id FK} == Controller@{Equipment Id FK},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinController\nJoinController, speed join(arrayType@{Equipment Id FK} == speed@{Equipment Id FK},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Joinspeed\nJoinDriveType derive(ArrayType = @(EquipmentType_ViewID=EquipmentType_ViewID,\n\t\tEquipmentType_ExternalID=EquipmentType_ExternalID,\n\t\tEquipmentType_Okeefe_EquipName=EquipmentType_Okeefe_EquipName,\n\t\tEquipmentType_TKE_EquipClassification=EquipmentType_TKE_EquipClassification,\n\t\tNumberofRearOpenings=EQUIPMENT@NumberofRearOpenings,\n\t\tUnit_CapacityLbs=EQUIPMENT@Unit_CapacityLbs,\n\t\tEquipmentType_TKE_EquipName=EquipmentType_TKE_EquipName),\n\t\tManufacturer = @(Manufacturer_VIEWId=Manufacturer_VIEWId,\n\t\tManufacturer_ExternalID=Manufacturer_ExternalID,\n\t\tManufacturer_Name1=Manufacturer_Name1,\n\t\tManufacturer_Name2=Manufacturer_Name2,\n\t\tAfterHoursCallbackRun_ExternalID=AfterHoursCallbackRun_ExternalID),\n\t\tController = @(Controller_Name1=Controller_Name1),\n\t\tSpeed = @(Speed_ViewID=Speed_ViewID,\n\t\tSpeed_FPM=Speed_FPM),\n\t\tDriveType = @(DriveType_ViewID=DriveType_ViewID,\n\t\tDriveType_ExternalID=DriveType_ExternalID,\n\t\tDriveType_Name2=DriveType_Name2,\n\t\tDriveType_Name1=DriveType_Name1),\n\t\tEQUIPMENT = EQUIPMENT,\n\t\tFloors = Floors,\n\t\tNumberofFrontOpenings = NumberofFrontOpenings,\n\t\tNumberofRearOpenings = EQUIPMENT@NumberofRearOpenings,\n\t\tUnit_CapacityLbs = EQUIPMENT@Unit_CapacityLbs,\n\t\t{UnitId FK} = EQUIPMENT@{UnitId FK}) ~> EQUIPMENTDC\nJoinspeed, DriveType join(arrayType@{Equipment Id FK} == DriveType@{Equipment Id FK},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinDriveType\nDerivedColumn1 sink(allowSchemaDrift: true,\n\tvalidateSchema: true,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'document',\n\tmapColumn(\n\t\tID,\n\t\tTechnicianNotes,\n\t\tIdentification,\n\t\tunit_id,\n\t\tEQUIPMENT\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlunit')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlIdentification')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlBank')]",
				"[concat(variables('factoryId'), '/datasets/BUILDING1')]",
				"[concat(variables('factoryId'), '/datasets/EQUIPMENT')]",
				"[concat(variables('factoryId'), '/datasets/EQUIPMENTTypeSQl')]",
				"[concat(variables('factoryId'), '/datasets/sqlManufacturer')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlController')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlSpeed')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlDriveType')]",
				"[concat(variables('factoryId'), '/datasets/office')]",
				"[concat(variables('factoryId'), '/datasets/maintenance')]",
				"[concat(variables('factoryId'), '/datasets/CosmosDbSqlApiCollection1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlunit",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "CosmosDbSqlApiCollection1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tUnit_ID as integer,\n\t\tTechnicianNotes as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nsource1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'document',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlunit')]",
				"[concat(variables('factoryId'), '/datasets/CosmosDbSqlApiCollection1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow4')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlunit",
								"type": "DatasetReference"
							},
							"name": "unit"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTEQUIPMENT",
								"type": "DatasetReference"
							},
							"name": "EQUIPMENT"
						},
						{
							"dataset": {
								"referenceName": "EQUIPMENTType",
								"type": "DatasetReference"
							},
							"name": "EQUIPMENTType"
						},
						{
							"dataset": {
								"referenceName": "Manufacturer",
								"type": "DatasetReference"
							},
							"name": "Manufacturer"
						},
						{
							"dataset": {
								"referenceName": "AzureSqController",
								"type": "DatasetReference"
							},
							"name": "Controller"
						},
						{
							"dataset": {
								"referenceName": "AzureSpeed",
								"type": "DatasetReference"
							},
							"name": "speed"
						},
						{
							"dataset": {
								"referenceName": "DriveType",
								"type": "DatasetReference"
							},
							"name": "DriveType"
						},
						{
							"dataset": {
								"referenceName": "SqlIdentification",
								"type": "DatasetReference"
							},
							"name": "Identification"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlUILDING",
								"type": "DatasetReference"
							},
							"name": "bUILDING"
						},
						{
							"dataset": {
								"referenceName": "lBANK",
								"type": "DatasetReference"
							},
							"name": "BANK"
						},
						{
							"dataset": {
								"referenceName": "Azuremaintenance",
								"type": "DatasetReference"
							},
							"name": "maintenance"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Json1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						},
						{
							"name": "Join2EQUIPMENTType"
						},
						{
							"name": "JoinManufacturer"
						},
						{
							"name": "JoinController"
						},
						{
							"name": "JoinSpeed"
						},
						{
							"name": "JoinDriveType"
						},
						{
							"name": "Identificationjoin"
						},
						{
							"name": "JoinBUILDING"
						},
						{
							"name": "Joinbank"
						},
						{
							"name": "Joinmaintenance"
						},
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\tUnit_ID as integer,\n\t\tTechnicianNotes as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> unit\nsource(output(\n\t\t{UnitId FK} as integer,\n\t\tFloors as string,\n\t\tNumberofFrontOpenings as string,\n\t\tNumberofRearOpenings as string,\n\t\tUnit_CapacityLbs as string,\n\t\tID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> EQUIPMENT\nsource(output(\n\t\t{UnitId FK} as string,\n\t\t{Equipment Id FK} as integer,\n\t\tEquipmentType_ViewID as string,\n\t\tEquipmentType_ExternalID as string,\n\t\tEquipmentType_Okeefe_EquipName as string,\n\t\tEquipmentType_TKE_EquipClassification as string,\n\t\tNumberofRearOpenings as string,\n\t\tUnit_CapacityLbs as string,\n\t\tEquipmentType_TKE_EquipName as string,\n\t\tid as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> EQUIPMENTType\nsource(output(\n\t\t{UnitId FK} as string,\n\t\t{Equipment Id FK} as integer,\n\t\tManufacturer_VIEWId as string,\n\t\tManufacturer_ExternalID as string,\n\t\tManufacturer_Name1 as string,\n\t\tManufacturer_Name2 as string,\n\t\tAfterHoursCallbackRun_ExternalID as string,\n\t\tID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Manufacturer\nsource(output(\n\t\t{UnitId FK} as string,\n\t\t{Equipment Id FK} as integer,\n\t\tController_Name1 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Controller\nsource(output(\n\t\t{UnitId FK} as string,\n\t\t{Equipment Id FK} as integer,\n\t\tSpeed_ViewID as string,\n\t\tSpeed_FPM as string,\n\t\tID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> speed\nsource(output(\n\t\t{UnitId FK} as string,\n\t\t{Equipment Id FK} as integer,\n\t\tDriveType_ViewID as string,\n\t\tDriveType_ExternalID as string,\n\t\tDriveType_Name1 as string,\n\t\tDriveType_Name2 as string,\n\t\tID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DriveType\nsource(output(\n\t\t{UnitId FK} as integer,\n\t\tUnit_GovernmentID as string,\n\t\tUnit_NickName as string,\n\t\tCustomer_BillingReference as string,\n\t\tUnit_DownInd as string,\n\t\tUnit_RegisteredNo as string,\n\t\tUnit_MfgYear as string,\n\t\tUnit_WarrantyStartDate as string,\n\t\tUnit_WarrantyEndDate as string,\n\t\tUnit_InstallDate as string,\n\t\tUnit_HandoverDate as string,\n\t\tAnnualSafetyTest_LastInspectionDate as string,\n\t\tUnit_JobNo as string,\n\t\tUnit_FactorySerialNo as string,\n\t\tUnit_Smart_ViewID as string,\n\t\tUnit_Smart_ExternalID as string,\n\t\tUnit_Smart_InstallationDate as string,\n\t\tUnit_SmartMAX_ViewID as string,\n\t\tUnit_SmartMAX_ExternalID as string,\n\t\tID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Identification\nsource(output(\n\t\t{UnitId FK} as string,\n\t\t{identification FK} as integer,\n\t\tBuilding_ViewID as string,\n\t\tBuilding_ExternalID as string,\n\t\tBuilding_BuildingNo as string,\n\t\tName_en as string,\n\t\tName_local as string,\n\t\tID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> bUILDING\nsource(output(\n\t\t{Identification FK} as integer,\n\t\t{UnitId FK} as integer,\n\t\tElevatorBank_ViewID as string,\n\t\tElevatorBank_ExternalID as string,\n\t\tElevatorBank_BankName as string,\n\t\tElevatorBank_AccessCode as string,\n\t\tID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> BANK\nsource(output(\n\t\t{UnitId FK} as integer,\n\t\tArray_MaintenanceRun as string,\n\t\tMaintenanceRun_RouteNo_TerritoryCode as string,\n\t\tID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> maintenance\nunit, EQUIPMENT join(Unit_ID == {UnitId FK},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nJoin1, EQUIPMENTType join(EQUIPMENT@ID == {Equipment Id FK},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join2EQUIPMENTType\nJoin2EQUIPMENTType, Manufacturer join(EQUIPMENT@ID == Manufacturer@{Equipment Id FK},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinManufacturer\nJoinManufacturer, Controller join(EQUIPMENTType@id == Controller@{Equipment Id FK},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinController\nJoinController, speed join(EQUIPMENT@ID == speed@{Equipment Id FK},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinSpeed\nJoinSpeed, DriveType join(EQUIPMENT@ID == DriveType@ID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinDriveType\nJoinDriveType, Identification join(Unit_ID == Identification@{UnitId FK},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Identificationjoin\nIdentificationjoin, bUILDING join(Identification@ID == {identification FK},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinBUILDING\nJoinBUILDING, BANK join(Identification@ID == BANK@{Identification FK},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Joinbank\nJoinbank, maintenance join(Unit_ID == maintenance@{UnitId FK},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Joinmaintenance\nJoinmaintenance derive(Unit_ID = Unit_ID,\n\t\tTechnicianNotes = TechnicianNotes,\n\t\tidentification = @(Unit_GovernmentID=Unit_GovernmentID,\n\t\tUnit_NickName=Unit_NickName,\n\t\tCustomer_BillingReference=Customer_BillingReference,\n\t\tUnit_DownInd=Unit_DownInd,\n\t\tUnit_RegisteredNo=Unit_RegisteredNo,\n\t\tUnit_MfgYear=Unit_MfgYear,\n\t\tUnit_WarrantyStartDate=Unit_WarrantyStartDate,\n\t\tUnit_WarrantyEndDate=Unit_WarrantyEndDate,\n\t\tUnit_InstallDate=Unit_InstallDate,\n\t\tUnit_HandoverDate=Unit_HandoverDate,\n\t\tAnnualSafetyTest_LastInspectionDate=AnnualSafetyTest_LastInspectionDate,\n\t\tUnit_JobNo=Unit_JobNo,\n\t\tUnit_FactorySerialNo=Unit_FactorySerialNo,\n\t\tUnit_Smart_ViewID=Unit_Smart_ViewID,\n\t\tUnit_Smart_ExternalID=Unit_Smart_ExternalID,\n\t\tUnit_Smart_InstallationDate=Unit_Smart_InstallationDate,\n\t\tUnit_SmartMAX_ViewID=Unit_SmartMAX_ViewID,\n\t\tUnit_SmartMAX_ExternalID=Unit_SmartMAX_ExternalID,\n\t\tBank=@({ ElevatorBank_ViewID}=ElevatorBank_ViewID,\n\t\tElevatorBank_ExternalID=ElevatorBank_ExternalID,\n\t\tElevatorBank_BankName=ElevatorBank_BankName,\n\t\tElevatorBank_AccessCode=ElevatorBank_AccessCode),\n\t\tBUILDING=@(Building_ViewID=Building_ViewID,\n\t\tBuilding_ExternalID=Building_ExternalID,\n\t\tBuilding_BuildingNo=Building_BuildingNo,\n\t\tName_en=Name_en,\n\t\tName_local=Name_local)),\n\t\tEQUIPMENT = @(Floors=Floors,\n\t\tNumberofFrontOpenings=NumberofFrontOpenings,\n\t\tNumberofRearOpenings=EQUIPMENT@NumberofRearOpenings,\n\t\tUnit_CapacityLbs=EQUIPMENT@Unit_CapacityLbs,\n\t\t{EQUIPMENT Type}=@(EquipmentType_ViewID=EquipmentType_ViewID,\n\t\tEquipmentType_ExternalID=EquipmentType_ExternalID,\n\t\tEquipmentType_Okeefe_EquipName=EquipmentType_Okeefe_EquipName,\n\t\tEquipmentType_TKE_EquipClassification=EquipmentType_TKE_EquipClassification,\n\t\tNumberofRearOpenings=EQUIPMENT@NumberofRearOpenings,\n\t\tUnit_CapacityLbs=EQUIPMENT@Unit_CapacityLbs,\n\t\tEquipmentType_TKE_EquipName=EquipmentType_TKE_EquipName),\n\t\tManufacturer=@(Manufacturer_VIEWId=Manufacturer_VIEWId,\n\t\tManufacturer_ExternalID=Manufacturer_ExternalID,\n\t\tManufacturer_Name1=Manufacturer_Name1,\n\t\tManufacturer_Name2=Manufacturer_Name2,\n\t\tAfterHoursCallbackRun_ExternalID=AfterHoursCallbackRun_ExternalID),\n\t\tController=@(Controller_Name1=Controller_Name1),\n\t\tSpeed=@(Speed_ViewID=Speed_ViewID,\n\t\tSpeed_FPM=Speed_FPM),\n\t\tDriveType=@(DriveType_ViewID=DriveType_ViewID,\n\t\tDriveType_ExternalID=DriveType_ExternalID,\n\t\tDriveType_Name1=DriveType_Name1,\n\t\tDriveType_Name2=DriveType_Name2)),\n\t\tmaintenance = @(MaintenanceRun_RouteNo_TerritoryCode=MaintenanceRun_RouteNo_TerritoryCode)) ~> DerivedColumn1\nDerivedColumn1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['unit'],\n\ttruncate: true,\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlunit')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTEQUIPMENT')]",
				"[concat(variables('factoryId'), '/datasets/EQUIPMENTType')]",
				"[concat(variables('factoryId'), '/datasets/Manufacturer')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqController')]",
				"[concat(variables('factoryId'), '/datasets/AzureSpeed')]",
				"[concat(variables('factoryId'), '/datasets/DriveType')]",
				"[concat(variables('factoryId'), '/datasets/SqlIdentification')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlUILDING')]",
				"[concat(variables('factoryId'), '/datasets/lBANK')]",
				"[concat(variables('factoryId'), '/datasets/Azuremaintenance')]",
				"[concat(variables('factoryId'), '/datasets/Json1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow7')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlbuilding",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "BuildingName_en",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\tOperator as string,\n\t\tETL_Load_Date_Time as timestamp,\n\t\tFunctions as string,\n\t\tExternalBuildingId as string,\n\t\tBuilding_BuildingName_local as string,\n\t\tBuilding_BuildingName_en as string,\n\t\tBuilding_Height as string,\n\t\tBuilding_StreetAddress_En as string,\n\t\tBuilding_StreetAddress_Local as string,\n\t\tBuilding_Suburb_En as string,\n\t\tBuilding_Suburb_Local as string,\n\t\tBuilding_City_En as string,\n\t\tBuilding_City_Local as string,\n\t\tBuilding_Postcode as string,\n\t\tBuilding_MainTypeViewId as string,\n\t\tBuilding_MainTypeName_En as string,\n\t\tBuilding_MainTypeName_Local as string,\n\t\tBuilding_SubTypeViewId as string,\n\t\tBuilding_SubTypeName_En as string,\n\t\tBuilding_SubTypeName_Local as string,\n\t\tBuilding_BuildingNo as string,\n\t\tBuilding_IsStandbybuilding as string,\n\t\tBuilding_CostingNo as string,\n\t\tBuilding_CustomerNo as string,\n\t\tBuilding_SumOfTotalUnits as string,\n\t\tBuilding_SumOfUnitsInService as string,\n\t\tBuilding_QuickTurnover as string,\n\t\tBuilding_Latitude as string,\n\t\tBuilding_Longitude as string,\n\t\tBuilding_OfficeViewId as string,\n\t\tBuilding_OfficeName_En as string,\n\t\tBuilding_OfficeName_Local as string,\n\t\tBuilding_TKManagerEmployeeViewId as string,\n\t\tBuilding_TKManagerEmployeeExternalId as string,\n\t\tBuilding_TKManagerName as string,\n\t\tBuilding_IsRepairCorres as string,\n\t\tBuilding_IsCalendar as string,\n\t\tBuilding_IsGeneralCorres as string,\n\t\tBuilding_IsCard as string,\n\t\tBuilding_IsMonthlyReport as string,\n\t\tBuilding_UnitsScheduleHours as string,\n\t\tBuilding_UnitsScheduleHoursViewId as string,\n\t\tBuilding_UnitsScheduleTime as string,\n\t\tBuilding_UnitsScheduleTimeViewId as string,\n\t\tBuilding_UnitsScheduleDay as string,\n\t\tBuilding_UnitsScheduleDayViewId as string,\n\t\tBuilding_UnitsScheduleDayFrequency as string,\n\t\tBuilding_TargetCallRate as string,\n\t\tArray_RunInfo as string,\n\t\tRunInfo_RunTypeViewId as string,\n\t\tRunInfo_RunTypeName as string,\n\t\tRunInfo_RunViewId as string,\n\t\tRunInfo_RunName as string,\n\t\tRunInfo_BHSWPResponse as string,\n\t\tRunInfo_BHStopResponse as string,\n\t\tRunInfo_BHOthersResponse as string,\n\t\tRunInfo_AHSWPResponse as string,\n\t\tRunInfo_AHStopResponse as string,\n\t\tRunInfo_AHOthersResponse as string,\n\t\tRunInfo_Notes as string,\n\t\tRunInfo_PropertyManagerEmployeeViewId as string,\n\t\tRunInfo_PropertyManagerEmployeeName as string,\n\t\tArray_BusinessHourContactInfo as string,\n\t\tBusinessHourContactInfo_BHSiteContact as string,\n\t\tBusinessHourContactInfo_BHContactLocation_En as string,\n\t\tBusinessHourContactInfo_BHContactLocation_Local as string,\n\t\tBusinessHourContactInfo_BHContactPhone1 as string,\n\t\tBusinessHourContactInfo_BHContactPhone2 as string,\n\t\tBusinessHourContactInfo_BHContactMobile as string,\n\t\tBusinessHourContactInfo_BHContactFax as string,\n\t\tBusinessHourContactInfo_BHContactRoleViewId as string,\n\t\tBusinessHourContactInfo_BHContactRoleName as string,\n\t\tArray_AfterHourContactInfo as string,\n\t\tAfterHourContactInfo_AHSiteContact as string,\n\t\tAfterHourContactInfo_AHContactLocation_En as string,\n\t\tAfterHourContactInfo_AHContactLocation_Local as string,\n\t\tAfterHourContactInfo_AHContactPhone1 as string,\n\t\tAfterHourContactInfo_AHContactMobile as string,\n\t\tAfterHourContactInfo_AHContactFax as string,\n\t\tAfterHourContactInfo_AHContactRoleViewId as string,\n\t\tAfterHourContactInfo_AHContactRoleViewName as string,\n\t\tAfterHourContactInfo_AHContactAccessCode as string,\n\t\tArray_BuildingContactInfo as string,\n\t\tBuildingContactInfo_ContactViewId as string,\n\t\tBuildingContactInfo_ContactExternalId as string,\n\t\tBuildingContactInfo_ContactName as string,\n\t\tBuildingContactInfo_IsBusinessHours as string,\n\t\tBuilding_VFMCustomerName_En as string,\n\t\tBuilding_VFMCustomerName_Local as string,\n\t\tBuilding_VFMCustomerMail as string,\n\t\tBuilding_VFMMailTemplateSubject as string,\n\t\tBuilding_VFMMailTemplateContent as string,\n\t\tBuilding_IsCustomisedMail as string,\n\t\tBuilding_ReportFrequencyViewId as string,\n\t\tBuilding_ReportFrequency as string,\n\t\tBuilding_ReportTypeViewId as string,\n\t\tBuilding_ReportType as string,\n\t\tBuilding_IsReportInvoice as string,\n\t\tBuilding_ReportSendTo as string,\n\t\tBuilding_ReportAuditRequired as string,\n\t\tBuilding_ReportAuditDetail as string,\n\t\tBuilding_ReportServiceDockets as string,\n\t\tBuilding_FromProjectId as string,\n\t\tBuilding_FromProjectLabel as string,\n\t\tArray_BuildingCustomerInfo as string,\n\t\tBuildingCustomerInfo_CustomerViewId as string,\n\t\tBuildingCustomerInfo_CustomerExternalId as string,\n\t\tBuildingCustomerInfo_CustomerName as string,\n\t\tArray_State as string,\n\t\tState_ViewId as string,\n\t\tState_Name as string,\n\t\tBuiliding_TimeZone as string,\n\t\tBuiliding_CustomerCode as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: ' SELECT\\n                      \\'add\\'                                                                              AS Operator\\n\t\t\t\t\t  ,SYSDATETIME()                                                                     as ETL_Load_Date_Time\\n                    ,\\'building\\'                                                                          as Functions\\n\t\t\t\t\t,[Building_ExternalBuildingId]                                                   as ExternalBuildingId\\n                   \\n      ,[Building_BuildingName_local]\\n      ,[Building_BuildingName_en]\\n      ,[Building_Height]\\n      ,[Building_StreetAddress_En]\\n      ,[Building_StreetAddress_Local]\\n      ,[Building_Suburb_En]\\n      ,[Building_Suburb_Local]\\n      ,[Building_City_En]\\n      ,[Building_City_Local]\\n      ,[Building_Postcode]\\n      ,[Building_MainTypeViewId]\\n      ,[Building_MainTypeName_En]\\n      ,[Building_MainTypeName_Local]\\n      ,[Building_SubTypeViewId]\\n      ,[Building_SubTypeName_En]\\n      ,[Building_SubTypeName_Local]\\n      ,[Building_BuildingNo]\\n      ,[Building_IsStandbybuilding]\\n      ,[Building_CostingNo]\\n      ,[Building_CustomerNo]\\n      ,[Building_SumOfTotalUnits]\\n      ,[Building_SumOfUnitsInService]\\n      ,[Building_QuickTurnover]\\n      ,[Building_Latitude]\\n      ,[Building_Longitude]\\n      ,[Building_OfficeViewId]\\n      ,[Building_OfficeName_En]\\n      ,[Building_OfficeName_Local]\\n      ,[Building_TKManagerEmployeeViewId]\\n      ,[Building_TKManagerEmployeeExternalId]\\n      ,[Building_TKManagerName]\\n      ,[Building_IsRepairCorres]\\n      ,[Building_IsCalendar]\\n      ,[Building_IsGeneralCorres]\\n      ,[Building_IsCard]\\n      ,[Building_IsMonthlyReport]\\n      ,[Building_UnitsScheduleHours]\\n      ,[Building_UnitsScheduleHoursViewId]\\n      ,[Building_UnitsScheduleTime]\\n      ,[Building_UnitsScheduleTimeViewId]\\n      ,[Building_UnitsScheduleDay]\\n      ,[Building_UnitsScheduleDayViewId]\\n      ,[Building_UnitsScheduleDayFrequency]\\n      ,[Building_TargetCallRate]\\n      ,[Array_RunInfo]\\n      ,[RunInfo_RunTypeViewId]\\n      ,[RunInfo_RunTypeName]\\n      ,[RunInfo_RunViewId]\\n      ,[RunInfo_RunName]\\n      ,[RunInfo_BHSWPResponse]\\n      ,[RunInfo_BHStopResponse]\\n      ,[RunInfo_BHOthersResponse]\\n      ,[RunInfo_AHSWPResponse]\\n      ,[RunInfo_AHStopResponse]\\n      ,[RunInfo_AHOthersResponse]\\n      ,[RunInfo_Notes]\\n      ,[RunInfo_PropertyManagerEmployeeViewId]\\n      ,[RunInfo_PropertyManagerEmployeeName]\\n      ,[Array_BusinessHourContactInfo]\\n      ,[BusinessHourContactInfo_BHSiteContact]\\n      ,[BusinessHourContactInfo_BHContactLocation_En]\\n      ,[BusinessHourContactInfo_BHContactLocation_Local]\\n      ,[BusinessHourContactInfo_BHContactPhone1]\\n      ,[BusinessHourContactInfo_BHContactPhone2]\\n      ,[BusinessHourContactInfo_BHContactMobile]\\n      ,[BusinessHourContactInfo_BHContactFax]\\n      ,[BusinessHourContactInfo_BHContactRoleViewId]\\n      ,[BusinessHourContactInfo_BHContactRoleName]\\n      ,[Array_AfterHourContactInfo]\\n      ,[AfterHourContactInfo_AHSiteContact]\\n      ,[AfterHourContactInfo_AHContactLocation_En]\\n      ,[AfterHourContactInfo_AHContactLocation_Local]\\n      ,[AfterHourContactInfo_AHContactPhone1]\\n      ,[AfterHourContactInfo_AHContactMobile]\\n      ,[AfterHourContactInfo_AHContactFax]\\n      ,[AfterHourContactInfo_AHContactRoleViewId]\\n      ,[AfterHourContactInfo_AHContactRoleViewName]\\n      ,[AfterHourContactInfo_AHContactAccessCode]\\n      ,[Array_BuildingContactInfo]\\n      ,[BuildingContactInfo_ContactViewId]\\n      ,[BuildingContactInfo_ContactExternalId]\\n      ,[BuildingContactInfo_ContactName]\\n      ,[BuildingContactInfo_IsBusinessHours]\\n      ,[Building_VFMCustomerName_En]\\n      ,[Building_VFMCustomerName_Local]\\n      ,[Building_VFMCustomerMail]\\n      ,[Building_VFMMailTemplateSubject]\\n      ,[Building_VFMMailTemplateContent]\\n      ,[Building_IsCustomisedMail]\\n      ,[Building_ReportFrequencyViewId]\\n      ,[Building_ReportFrequency]\\n      ,[Building_ReportTypeViewId]\\n      ,[Building_ReportType]\\n      ,[Building_IsReportInvoice]\\n      ,[Building_ReportSendTo]\\n      ,[Building_ReportAuditRequired]\\n      ,[Building_ReportAuditDetail]\\n      ,[Building_ReportServiceDockets]\\n      ,[Building_FromProjectId]\\n      ,[Building_FromProjectLabel]\\n      ,[Array_BuildingCustomerInfo]\\n      ,[BuildingCustomerInfo_CustomerViewId]\\n      ,[BuildingCustomerInfo_CustomerExternalId]\\n      ,[BuildingCustomerInfo_CustomerName]\\n      ,[Array_State]\\n      ,[State_ViewId]\\n      ,[State_Name]\\n      ,[Builiding_TimeZone]\\n      ,[Builiding_CustomerCode]\\n\t\t\t\t\t\\n\t\t\t\t\tFROM [customer].[Building]   ',\n\tformat: 'query') ~> source1\nsource1 derive(Function = Functions,\n\t\tSendTimestamp = ETL_Load_Date_Time,\n\t\tOperator = Operator,\n\t\tdata = @(ViewBuildingId=ExternalBuildingId,\n\t\tExternalBuildingId=ExternalBuildingId,\n\t\tBuildingName_local=Building_BuildingName_local,\n\t\tBuildingName_en=Building_BuildingName_en,\n\t\tHeight=Building_Height,\n\t\tstreetAddress=Building_StreetAddress_En,\n\t\tSuburb=Building_Suburb_En,\n\t\tCity=Building_City_En,\n\t\tPostcode=Building_Postcode,\n\t\tBuilding_MainTypeViewId=Building_MainTypeViewId,\n\t\tMainTypeName_En=Building_MainTypeName_En,\n\t\tMainTypeName_Local=Building_MainTypeName_Local,\n\t\tSubTypeViewId=Building_SubTypeViewId,\n\t\tSubTypeName_En=Building_SubTypeName_En,\n\t\tSubTypeName_Local=Building_SubTypeName_Local,\n\t\tBuildingNo=Building_BuildingNo,\n\t\tIsStandbybuilding=Building_IsStandbybuilding,\n\t\tCostingNo=Building_CostingNo,\n\t\tCustomerNo=Building_CustomerNo,\n\t\tSumOfTotalUnits=Building_SumOfTotalUnits,\n\t\tSumOfUnitsInService=Building_SumOfUnitsInService,\n\t\tQuickTurnover=Building_QuickTurnover,\n\t\tLatitude=Building_Latitude,\n\t\tLongitude=Building_Longitude,\n\t\tOfficeViewId=Building_OfficeViewId,\n\t\tOfficeName_En=Building_OfficeName_En,\n\t\tOfficeName_Local=Building_OfficeName_Local,\n\t\tTKManagerEmployeeViewId=Building_TKManagerEmployeeViewId,\n\t\tTKManagerEmployeeExternalId=Building_TKManagerEmployeeExternalId,\n\t\tTKManagerName=Building_TKManagerName,\n\t\tIsRepairCorres=Building_IsRepairCorres,\n\t\tIsCalendar=Building_IsCalendar,\n\t\tIsGeneralCorres=Building_IsGeneralCorres,\n\t\tIsCard=Building_IsCard,\n\t\tIsMonthlyReport=Building_IsMonthlyReport,\n\t\tUnitsScheduleHours=Building_UnitsScheduleHours,\n\t\tUnitsScheduleHoursViewId=Building_UnitsScheduleHoursViewId,\n\t\tUnitsScheduleDay=Building_UnitsScheduleDay,\n\t\tUnitsScheduleDayViewId=Building_UnitsScheduleDayViewId,\n\t\tUnitsScheduleDayFrequency=Building_UnitsScheduleDayFrequency,\n\t\tTargetCallRate=Building_TargetCallRate,\n\t\tRunInfo=@(RunTypeViewId=RunInfo_RunTypeViewId,\n\t\tRunTypeName=RunInfo_RunTypeName,\n\t\tRunViewId=RunInfo_RunViewId),\n\t\tBHSWPResponse=RunInfo_BHSWPResponse,\n\t\tBHStopResponse=RunInfo_BHStopResponse,\n\t\tBHOthersResponse=RunInfo_BHOthersResponse,\n\t\tAHSWPResponse=RunInfo_AHSWPResponse,\n\t\tAHStopResponse=RunInfo_AHStopResponse,\n\t\tAHOthersResponse=RunInfo_AHOthersResponse,\n\t\tNotes=RunInfo_Notes,\n\t\tPropertyManagerEmployeeViewId=RunInfo_PropertyManagerEmployeeViewId,\n\t\tPropertyManagerEmployeeName=RunInfo_PropertyManagerEmployeeName,\n\t\tBusinessHourContactInfo=@(BHSiteContact=BusinessHourContactInfo_BHSiteContact,\n\t\tBHContactLocation=BusinessHourContactInfo_BHContactLocation_En,\n\t\tBHContactPhone1=BusinessHourContactInfo_BHContactPhone1,\n\t\tBHContactPhone2=BusinessHourContactInfo_BHContactPhone2,\n\t\tBHContactMobile=BusinessHourContactInfo_BHContactMobile,\n\t\tBHContactFax=BusinessHourContactInfo_BHContactFax,\n\t\tBHContactRoleViewId=BusinessHourContactInfo_BHContactRoleViewId,\n\t\tBHContactRoleName=BusinessHourContactInfo_BHContactRoleName),\n\t\tAfterHourContactInfo=@(AHSiteContact=AfterHourContactInfo_AHSiteContact,\n\t\tAHContactLocation=AfterHourContactInfo_AHContactLocation_En,\n\t\tAHContactPhone1=AfterHourContactInfo_AHContactPhone1,\n\t\tAHContactMobile=AfterHourContactInfo_AHContactMobile,\n\t\tAHContactFax=AfterHourContactInfo_AHContactFax,\n\t\tAHContactRoleViewId=AfterHourContactInfo_AHContactRoleViewId,\n\t\tAHContactRoleName=AfterHourContactInfo_AHContactRoleViewName,\n\t\tAHContactAccessCode=AfterHourContactInfo_AHContactAccessCode),\n\t\tBuildingContactInfo=@(ContactViewId=BuildingContactInfo_ContactViewId,\n\t\tContactExternalId=BuildingContactInfo_ContactExternalId,\n\t\tContactName=BuildingContactInfo_ContactName,\n\t\tIsBusinessHours=BuildingContactInfo_IsBusinessHours),\n\t\tVFMCustomerName_En=Building_VFMCustomerName_En,\n\t\tVFMCustomerName_Local=Building_VFMCustomerName_Local,\n\t\tVFMCustomerMail=Building_VFMCustomerMail,\n\t\tVFMMailTemplateSubject=Building_VFMMailTemplateSubject,\n\t\tVFMMailTemplateContent=Building_VFMMailTemplateContent,\n\t\tIsCustomisedMail=Building_IsCustomisedMail,\n\t\tReportFrequencyViewId=Building_ReportFrequencyViewId,\n\t\tReportFrequency=Building_ReportFrequency,\n\t\tReportTypeViewId=Building_ReportTypeViewId,\n\t\tReportType=Building_ReportType,\n\t\tIsReportInvoice=Building_IsReportInvoice,\n\t\tReportSendTo=Building_ReportSendTo,\n\t\tReportAuditRequired=Building_ReportAuditRequired,\n\t\tReportAuditDetail=Building_ReportAuditDetail,\n\t\tReportServiceDockets=Building_ReportServiceDockets,\n\t\tFromProjectId=Building_FromProjectId,\n\t\tFromProjectLabel=Building_FromProjectLabel,\n\t\tBuildingCustomerInfo=@(CustomerViewId=BuildingCustomerInfo_CustomerViewId,\n\t\tCustomerExternalId=BuildingCustomerInfo_CustomerExternalId,\n\t\tCustomerName=BuildingCustomerInfo_CustomerName),\n\t\tState=@(ViewId=State_ViewId,\n\t\tName=State_Name),\n\t\tTimeZone=currentDate(),\n\t\tCustomerCode=Builiding_CustomerCode)) ~> DerivedColumn1\nDerivedColumn1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlbuilding')]",
				"[concat(variables('factoryId'), '/datasets/BuildingName_en')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {
				"preventDataExfiltration": false
			},
			"dependsOn": []
		}
	]
}